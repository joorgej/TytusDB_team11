Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    OC_AND
    OC_NOT
    OC_OR
    OC_SHIFTL
    OC_SHIFTR
    OC_XOR
    OL_ESIGUAL
    R_ANY
    R_FULL
    R_INNER
    R_JOIN
    R_LEFT
    R_NATURAL
    R_OUTER
    R_RIGHT
    R_SOME

Grammar

Rule 0     S' -> init
Rule 1     init -> stmtList
Rule 2     stmtList -> stmtList stmt
Rule 3     stmtList -> stmt
Rule 4     stmt -> createStmt S_PUNTOCOMA
Rule 5     stmt -> showStmt S_PUNTOCOMA
Rule 6     stmt -> alterStmt S_PUNTOCOMA
Rule 7     stmt -> dropStmt S_PUNTOCOMA
Rule 8     stmt -> insertStmt S_PUNTOCOMA
Rule 9     stmt -> updateStmt S_PUNTOCOMA
Rule 10    stmt -> deleteStmt S_PUNTOCOMA
Rule 11    stmt -> truncateStmt S_PUNTOCOMA
Rule 12    stmt -> useStmt S_PUNTOCOMA
Rule 13    stmt -> selectStmt S_PUNTOCOMA
Rule 14    idOrString -> ID
Rule 15    idOrString -> STRING
Rule 16    idOrString -> CHARACTER
Rule 17    createStmt -> R_CREATE createBody
Rule 18    createBody -> createOpts
Rule 19    createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
Rule 20    createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode
Rule 21    createOpts -> indexUnique R_INDEX indexName R_ON ID usingMethod S_PARIZQ indexList S_PARDER whereCl
Rule 22    indexName -> ID
Rule 23    indexName -> <empty>
Rule 24    indexList -> indexList S_COMA columnIndex
Rule 25    indexList -> columnIndex
Rule 26    columnIndex -> columnOpt indexOrder indexNull
Rule 27    columnOpt -> ID
Rule 28    columnOpt -> ID S_PARIZQ ID S_PARDER
Rule 29    columnOpt -> S_PARIZQ columnOpt S_PARDER
Rule 30    usingMethod -> R_USING R_HASH
Rule 31    usingMethod -> R_USING R_BTREE
Rule 32    usingMethod -> R_USING R_GIST
Rule 33    usingMethod -> R_USING R_SPGIST
Rule 34    usingMethod -> R_USING R_GIN
Rule 35    usingMethod -> R_USING R_BRIN
Rule 36    usingMethod -> <empty>
Rule 37    indexOrder -> R_DESC
Rule 38    indexOrder -> R_ASC
Rule 39    indexOrder -> <empty>
Rule 40    indexNull -> R_NULLS firstLast
Rule 41    indexNull -> <empty>
Rule 42    firstLast -> R_FIRST
Rule 43    firstLast -> R_LAST
Rule 44    firstLast -> <empty>
Rule 45    indexUnique -> R_UNIQUE
Rule 46    indexUnique -> <empty>
Rule 47    orReplace -> R_OR R_REPLACE
Rule 48    orReplace -> <empty>
Rule 49    createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
Rule 50    ifNotExists -> R_IF R_NOT R_EXISTS
Rule 51    ifNotExists -> <empty>
Rule 52    inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER
Rule 53    inheritsOpt -> <empty>
Rule 54    createOwner -> R_OWNER ID
Rule 55    createOwner -> R_OWNER STRING
Rule 56    createOwner -> R_OWNER S_IGUAL ID
Rule 57    createOwner -> R_OWNER S_IGUAL STRING
Rule 58    createOwner -> <empty>
Rule 59    createMode -> R_MODE INTEGER
Rule 60    createMode -> R_MODE S_IGUAL INTEGER
Rule 61    createMode -> <empty>
Rule 62    createTableList -> createTableList S_COMA createTable
Rule 63    createTableList -> createTable
Rule 64    createTable -> ID types createColumns
Rule 65    createTable -> createConstraint
Rule 66    createTable -> createUnique
Rule 67    createTable -> createPrimary
Rule 68    createTable -> createForeign
Rule 69    createColumns -> colOptionsList
Rule 70    createColumns -> <empty>
Rule 71    createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 72    createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER
Rule 73    createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
Rule 74    createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
Rule 75    constrName -> R_CONSTRAINT ID
Rule 76    constrName -> <empty>
Rule 77    idList -> idList S_COMA ID
Rule 78    idList -> ID
Rule 79    types -> ID
Rule 80    types -> T_SMALLINT
Rule 81    types -> T_INTEGER
Rule 82    types -> T_BIGINT
Rule 83    types -> T_REAL
Rule 84    types -> T_DOUBLE T_PRECISION
Rule 85    types -> T_MONEY
Rule 86    types -> T_TEXT
Rule 87    types -> T_BOOLEAN
Rule 88    types -> R_TIMESTAMP
Rule 89    types -> T_DATE
Rule 90    types -> T_TIME
Rule 91    types -> T_DECIMAL optParams
Rule 92    types -> T_NUMERIC optParams
Rule 93    types -> T_VARCHAR optParams
Rule 94    types -> T_CHARACTER optParams
Rule 95    types -> T_CHAR optParams
Rule 96    types -> T_CHARACTER T_VARYING optParams
Rule 97    types -> R_INTERVAL intervalFields
Rule 98    intervalFields -> R_YEAR
Rule 99    intervalFields -> R_MONTH
Rule 100   intervalFields -> R_DAY
Rule 101   intervalFields -> R_HOUR
Rule 102   intervalFields -> R_MINUTE
Rule 103   intervalFields -> R_SECOND
Rule 104   intervalFields -> <empty>
Rule 105   optParams -> S_PARIZQ literalList S_PARDER
Rule 106   optParams -> <empty>
Rule 107   colOptionsList -> colOptionsList colOptions
Rule 108   colOptionsList -> colOptions
Rule 109   colOptions -> defaultVal
Rule 110   colOptions -> nullOpt
Rule 111   colOptions -> constraintOpt
Rule 112   colOptions -> primaryOpt
Rule 113   colOptions -> referencesOpt
Rule 114   defaultVal -> R_DEFAULT literal
Rule 115   nullOpt -> R_NOT R_NULL
Rule 116   nullOpt -> R_NULL
Rule 117   constraintOpt -> constrName R_UNIQUE
Rule 118   constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
Rule 119   primaryOpt -> R_PRIMARY R_KEY
Rule 120   referencesOpt -> R_REFERENCES ID
Rule 121   expresion -> datatype
Rule 122   expresion -> expBool
Rule 123   expresion -> S_PARIZQ selectStmt S_PARDER
Rule 124   funcCall -> ID S_PARIZQ paramsList S_PARDER
Rule 125   funcCall -> ID S_PARIZQ S_PARDER
Rule 126   funcCall -> R_NOW S_PARIZQ S_PARDER
Rule 127   funcCall -> R_COUNT S_PARIZQ datatype S_PARDER
Rule 128   funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
Rule 129   funcCall -> R_SUM S_PARIZQ datatype S_PARDER
Rule 130   funcCall -> R_PROM S_PARIZQ datatype S_PARDER
Rule 131   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
Rule 132   extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
Rule 133   timeStamp -> R_TIMESTAMP STRING
Rule 134   timeStamp -> R_INTERVAL STRING
Rule 135   optsExtract -> R_YEAR
Rule 136   optsExtract -> R_MONTH
Rule 137   optsExtract -> R_DAY
Rule 138   optsExtract -> R_HOUR
Rule 139   optsExtract -> R_MINUTE
Rule 140   optsExtract -> R_SECOND
Rule 141   datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
Rule 142   dateSource -> R_TIMESTAMP STRING
Rule 143   dateSource -> T_DATE STRING
Rule 144   dateSource -> T_TIME STRING
Rule 145   dateSource -> R_INTERVAL STRING
Rule 146   dateSource -> R_NOW S_PARIZQ S_PARDER
Rule 147   current -> R_CURRENT_DATE
Rule 148   current -> R_CURRENT_TIME
Rule 149   current -> timeStamp
Rule 150   literalList -> literalList S_COMA literal
Rule 151   literalList -> literal
Rule 152   literal -> INTEGER
Rule 153   literal -> STRING
Rule 154   literal -> DECIMAL
Rule 155   literal -> CHARACTER
Rule 156   literal -> R_TRUE
Rule 157   literal -> R_FALSE
Rule 158   literal -> R_NULL
Rule 159   paramsList -> paramsList S_COMA datatype
Rule 160   paramsList -> datatype
Rule 161   datatype -> datatype O_SUMA datatype
Rule 162   datatype -> datatype O_RESTA datatype
Rule 163   datatype -> datatype O_PRODUCTO datatype
Rule 164   datatype -> datatype O_DIVISION datatype
Rule 165   datatype -> datatype O_EXPONENTE datatype
Rule 166   datatype -> datatype O_MODULAR datatype
Rule 167   datatype -> datatype OC_CONCATENAR datatype
Rule 168   datatype -> R_CASE caseList optElse R_END
Rule 169   caseList -> caseList caseWhen
Rule 170   caseList -> caseWhen
Rule 171   caseWhen -> R_WHEN expBool R_THEN literal
Rule 172   optElse -> R_ELSE literal
Rule 173   optElse -> <empty>
Rule 174   datatype -> O_RESTA datatype
Rule 175   datatype -> O_SUMA datatype
Rule 176   datatype -> columnName
Rule 177   datatype -> literal
Rule 178   datatype -> funcCall
Rule 179   datatype -> extract
Rule 180   datatype -> datePart
Rule 181   datatype -> current
Rule 182   datatype -> S_PARIZQ datatype S_PARDER
Rule 183   expComp -> datatype OL_MENORQUE datatype
Rule 184   expComp -> datatype OL_MAYORQUE datatype
Rule 185   expComp -> datatype OL_MAYORIGUALQUE datatype
Rule 186   expComp -> datatype OL_MENORIGUALQUE datatype
Rule 187   expComp -> datatype S_IGUAL datatype
Rule 188   expComp -> datatype OL_DISTINTODE datatype
Rule 189   expComp -> datatype R_IS R_DISTINCT R_FROM datatype
Rule 190   expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype
Rule 191   expComp -> datatype R_BETWEEN datatype R_AND datatype
Rule 192   expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype
Rule 193   expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
Rule 194   expComp -> datatype R_ISNULL
Rule 195   expComp -> datatype R_NOTNULL
Rule 196   expComp -> datatype R_IS R_NULL
Rule 197   expComp -> datatype R_IS R_TRUE
Rule 198   expComp -> datatype R_IS R_FALSE
Rule 199   expComp -> datatype R_IS R_UNKNOWN
Rule 200   expComp -> datatype R_IS R_NOT R_NULL
Rule 201   expComp -> datatype R_IS R_NOT R_TRUE
Rule 202   expComp -> datatype R_IS R_NOT R_FALSE
Rule 203   expComp -> datatype R_IS R_NOT R_UNKNOWN
Rule 204   boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER
Rule 205   boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER
Rule 206   boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
Rule 207   boolean -> expComp
Rule 208   expBool -> expBool R_AND expBool
Rule 209   expBool -> expBool R_OR expBool
Rule 210   expBool -> R_NOT expBool
Rule 211   expBool -> S_PARIZQ expBool S_PARDER
Rule 212   expBool -> expBool optBoolPredicate
Rule 213   expBool -> boolean
Rule 214   optBoolPredicate -> R_IS R_TRUE
Rule 215   optBoolPredicate -> R_IS R_FALSE
Rule 216   optBoolPredicate -> R_IS R_UNKNOWN
Rule 217   optBoolPredicate -> R_IS R_NOT R_TRUE
Rule 218   optBoolPredicate -> R_IS R_NOT R_FALSE
Rule 219   optBoolPredicate -> R_IS R_NOT R_UNKNOWN
Rule 220   columnName -> ID
Rule 221   columnName -> ID S_PUNTO ID
Rule 222   booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral
Rule 223   booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral
Rule 224   booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral
Rule 225   booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral
Rule 226   booleanCheck -> idOrLiteral S_IGUAL idOrLiteral
Rule 227   booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral
Rule 228   booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
Rule 229   booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
Rule 230   idOrLiteral -> ID
Rule 231   idOrLiteral -> INTEGER
Rule 232   idOrLiteral -> STRING
Rule 233   idOrLiteral -> DECIMAL
Rule 234   idOrLiteral -> CHARACTER
Rule 235   idOrLiteral -> R_TRUE
Rule 236   idOrLiteral -> R_FALSE
Rule 237   alterStmt -> R_ALTER R_DATABASE idOrString alterDb
Rule 238   alterStmt -> R_ALTER R_TABLE idOrString alterTableList
Rule 239   alterStmt -> R_ALTER R_INDEX ifExists idOrString R_RENAME R_TO idOrString
Rule 240   alterStmt -> R_ALTER R_INDEX ifExists idOrString R_ALTER column idOrString idOrNumber
Rule 241   column -> R_COLUMN
Rule 242   column -> <empty>
Rule 243   idOrNumber -> ID
Rule 244   idOrNumber -> INTEGER
Rule 245   alterDb -> R_RENAME R_TO idOrString
Rule 246   alterDb -> R_OWNER R_TO ownerOPts
Rule 247   ownerOPts -> idOrString
Rule 248   ownerOPts -> R_CURRENT_USER
Rule 249   ownerOPts -> R_SESSION_USER
Rule 250   alterTableList -> alterTableList S_COMA alterTable
Rule 251   alterTableList -> alterTable
Rule 252   alterTable -> R_ADD alterAdd
Rule 253   alterTable -> R_ALTER alterAlter
Rule 254   alterTable -> R_DROP alterDrop
Rule 255   alterTable -> R_RENAME alterRename
Rule 256   alterAdd -> R_COLUMN ID types
Rule 257   alterAdd -> createConstraint
Rule 258   alterAdd -> createPrimary
Rule 259   alterAdd -> createForeign
Rule 260   alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER
Rule 261   alterAlter -> R_COLUMN ID R_SET nullOpt
Rule 262   alterAlter -> R_COLUMN ID R_SET defaultVal
Rule 263   alterAlter -> R_COLUMN ID R_TYPE types
Rule 264   alterDrop -> R_CONSTRAINT ID
Rule 265   alterDrop -> R_COLUMN ID
Rule 266   alterRename -> R_COLUMN ID R_TO ID
Rule 267   dropStmt -> R_DROP R_TABLE ifExists idOrString
Rule 268   dropStmt -> R_DROP R_DATABASE ifExists idOrString
Rule 269   dropStmt -> R_DROP R_INDEX ifExists idList
Rule 270   ifExists -> R_IF R_EXISTS
Rule 271   ifExists -> <empty>
Rule 272   selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
Rule 273   selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
Rule 274   selectStmt -> selectStmt R_UNION allOpt selectStmt
Rule 275   selectStmt -> selectStmt R_INTERSECT allOpt selectStmt
Rule 276   selectStmt -> selectStmt R_EXCEPT allOpt selectStmt
Rule 277   selectStmt -> S_PARIZQ selectStmt S_PARDER
Rule 278   fromCl -> R_FROM tableExp
Rule 279   selectStmt -> R_SELECT selectParams
Rule 280   allOpt -> R_ALL
Rule 281   allOpt -> <empty>
Rule 282   selectParams -> O_PRODUCTO
Rule 283   selectParams -> selectList
Rule 284   selectList -> selectList S_COMA selectListParams optAlias
Rule 285   selectList -> selectListParams optAlias
Rule 286   selectListParams -> expresion
Rule 287   selectListParams -> ID S_PUNTO O_PRODUCTO
Rule 288   optAlias -> R_AS idOrString
Rule 289   optAlias -> idOrString
Rule 290   optAlias -> <empty>
Rule 291   tableExp -> tableExp S_COMA fromBody
Rule 292   tableExp -> fromBody
Rule 293   fromBody -> ID optAlias
Rule 294   fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString
Rule 295   whereCl -> R_WHERE expBool
Rule 296   whereCl -> <empty>
Rule 297   groupByCl -> R_GROUP R_BY groupList havingCl
Rule 298   groupByCl -> <empty>
Rule 299   groupList -> groupList S_COMA columnName
Rule 300   groupList -> groupList S_COMA INTEGER
Rule 301   groupList -> columnName
Rule 302   groupList -> INTEGER
Rule 303   havingCl -> R_HAVING expBool
Rule 304   havingCl -> <empty>
Rule 305   orderByCl -> R_ORDER R_BY orderList
Rule 306   orderByCl -> <empty>
Rule 307   orderList -> orderList S_COMA orderByElem
Rule 308   orderList -> orderByElem
Rule 309   orderByElem -> columnName orderOpts orderNull
Rule 310   orderByElem -> INTEGER orderOpts orderNull
Rule 311   orderOpts -> R_ASC
Rule 312   orderOpts -> R_DESC
Rule 313   orderOpts -> <empty>
Rule 314   orderNull -> R_NULLS R_FIRST
Rule 315   orderNull -> R_NULLS R_LAST
Rule 316   orderNull -> <empty>
Rule 317   limitCl -> R_LIMIT INTEGER offsetLimit
Rule 318   limitCl -> R_LIMIT R_ALL offsetLimit
Rule 319   limitCl -> <empty>
Rule 320   offsetLimit -> R_OFFSET INTEGER
Rule 321   offsetLimit -> <empty>
Rule 322   insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
Rule 323   paramsColumn -> S_PARIZQ idList S_PARDER
Rule 324   paramsColumn -> <empty>
Rule 325   updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl
Rule 326   updateCols -> updateCols S_COMA updateVals
Rule 327   updateCols -> updateVals
Rule 328   updateVals -> ID S_IGUAL updateExp
Rule 329   updateExp -> datatype
Rule 330   updateExp -> R_DEFAULT
Rule 331   deleteStmt -> R_DELETE fromCl whereCl
Rule 332   truncateStmt -> R_TRUNCATE tableOpt ID
Rule 333   tableOpt -> R_TABLE
Rule 334   tableOpt -> <empty>
Rule 335   showStmt -> R_SHOW R_DATABASES likeOpt
Rule 336   likeOpt -> R_LIKE STRING
Rule 337   likeOpt -> <empty>
Rule 338   useStmt -> R_USE ID

Terminals, with rules where they appear

CHARACTER            : 16 155 234
COMMENT              : 
DECIMAL              : 154 233
ID                   : 14 21 22 27 28 28 49 52 54 56 64 74 75 77 78 79 120 124 125 220 221 221 230 243 256 260 261 262 263 264 265 266 266 287 293 322 328 332 338
INTEGER              : 59 60 152 231 244 300 302 310 317 320
OC_AND               : 
OC_CONCATENAR        : 167
OC_NOT               : 
OC_OR                : 
OC_SHIFTL            : 
OC_SHIFTR            : 
OC_XOR               : 
OL_DISTINTODE        : 188 227
OL_ESIGUAL           : 
OL_MAYORIGUALQUE     : 185 224
OL_MAYORQUE          : 184 223
OL_MENORIGUALQUE     : 186 225
OL_MENORQUE          : 183 222
O_DIVISION           : 164
O_EXPONENTE          : 165
O_MODULAR            : 166
O_PRODUCTO           : 128 163 282 287
O_RESTA              : 162 174
O_SUMA               : 161 175
R_ADD                : 252
R_ALL                : 280 318
R_ALTER              : 237 238 239 240 240 253
R_AND                : 191 192 193 208
R_ANY                : 
R_AS                 : 49 288 294
R_ASC                : 38 311
R_BETWEEN            : 191 192 193
R_BRIN               : 35
R_BTREE              : 31
R_BY                 : 297 305
R_CASE               : 168
R_CHECK              : 71 118
R_COLUMN             : 241 256 261 262 263 265 266
R_CONSTRAINT         : 75 264
R_COUNT              : 127 128
R_CREATE             : 17
R_CURRENT_DATE       : 147
R_CURRENT_TIME       : 148
R_CURRENT_USER       : 248
R_DATABASE           : 20 237 268
R_DATABASES          : 335
R_DATE_PART          : 141
R_DAY                : 100 137
R_DEFAULT            : 114 330
R_DELETE             : 331
R_DESC               : 37 312
R_DISTINCT           : 189 190 228 229 272
R_DROP               : 254 267 268 269
R_ELSE               : 172
R_END                : 168
R_ENUM               : 49
R_EXCEPT             : 276
R_EXISTS             : 50 204 270
R_EXTRACT            : 131 132
R_FALSE              : 157 198 202 215 218 236
R_FIRST              : 42 314
R_FOREIGN            : 74
R_FROM               : 131 132 189 190 228 229 278
R_FULL               : 
R_GIN                : 34
R_GIST               : 32
R_GROUP              : 297
R_HASH               : 30
R_HAVING             : 303
R_HOUR               : 101 138
R_IF                 : 50 270
R_IN                 : 205 206
R_INDEX              : 21 239 240 269
R_INHERITS           : 52
R_INNER              : 
R_INSERT             : 322
R_INTERSECT          : 275
R_INTERVAL           : 97 134 145
R_INTO               : 322
R_IS                 : 189 190 196 197 198 199 200 201 202 203 214 215 216 217 218 219 228 229
R_ISNULL             : 194
R_JOIN               : 
R_KEY                : 73 74 119
R_LAST               : 43 315
R_LEFT               : 
R_LIKE               : 336
R_LIMIT              : 317 318
R_MINUTE             : 102 139
R_MODE               : 59 60
R_MONTH              : 99 136
R_NATURAL            : 
R_NOT                : 50 115 190 192 200 201 202 203 206 210 217 218 219 229
R_NOTNULL            : 195
R_NOW                : 126 146
R_NULL               : 115 116 158 196 200
R_NULLS              : 40 314 315
R_OFFSET             : 320
R_ON                 : 21
R_OR                 : 47 209
R_ORDER              : 305
R_OUTER              : 
R_OWNER              : 54 55 56 57 246
R_PRIMARY            : 73 119
R_PROM               : 130
R_REFERENCES         : 74 120
R_RENAME             : 239 245 255
R_REPLACE            : 47
R_RIGHT              : 
R_SECOND             : 103 140
R_SELECT             : 272 273 279
R_SESSION_USER       : 249
R_SET                : 261 262 325
R_SHOW               : 335
R_SOME               : 
R_SPGIST             : 33
R_SUM                : 129
R_SYMMETRIC          : 193
R_TABLE              : 19 238 267 333
R_THEN               : 171
R_TIMESTAMP          : 88 133 142
R_TO                 : 239 245 246 266
R_TRUE               : 156 197 201 214 217 235
R_TRUNCATE           : 332
R_TYPE               : 49 263
R_UNION              : 274
R_UNIQUE             : 45 72 117 260
R_UNKNOWN            : 199 203 216 219
R_UPDATE             : 325
R_USE                : 338
R_USING              : 30 31 32 33 34 35
R_VALUES             : 322
R_WHEN               : 171
R_WHERE              : 295
R_YEAR               : 98 135
STRING               : 15 55 57 133 134 141 142 143 144 145 153 232 336
S_COMA               : 24 62 77 141 150 159 250 284 291 299 300 307 326
S_IGUAL              : 56 57 60 187 226 328
S_PARDER             : 19 21 28 29 49 52 71 72 73 74 74 105 118 123 124 125 126 127 128 129 130 131 132 141 146 182 204 205 206 211 260 277 294 322 323
S_PARIZQ             : 19 21 28 29 49 52 71 72 73 74 74 105 118 123 124 125 126 127 128 129 130 131 132 141 146 182 204 205 206 211 260 277 294 322 323
S_PUNTO              : 221 287
S_PUNTOCOMA          : 4 5 6 7 8 9 10 11 12 13
T_BIGINT             : 82
T_BOOLEAN            : 87
T_CHAR               : 95
T_CHARACTER          : 94 96
T_DATE               : 89 143
T_DECIMAL            : 91
T_DOUBLE             : 84
T_INTEGER            : 81
T_MONEY              : 85
T_NUMERIC            : 92
T_PRECISION          : 84
T_REAL               : 83
T_SMALLINT           : 80
T_TEXT               : 86
T_TIME               : 90 144
T_VARCHAR            : 93
T_VARYING            : 96
error                : 

Nonterminals, with rules where they appear

allOpt               : 274 275 276
alterAdd             : 252
alterAlter           : 253
alterDb              : 237
alterDrop            : 254
alterRename          : 255
alterStmt            : 6
alterTable           : 250 251
alterTableList       : 238 250
boolean              : 213
booleanCheck         : 71 118
caseList             : 168 169
caseWhen             : 169 170
colOptions           : 107 108
colOptionsList       : 69 107
column               : 240
columnIndex          : 24 25
columnName           : 132 176 299 301 309
columnOpt            : 26 29
constrName           : 71 74 117 118 260
constraintOpt        : 111
createBody           : 17
createColumns        : 64
createConstraint     : 65 257
createForeign        : 68 259
createMode           : 20
createOpts           : 18
createOwner          : 20
createPrimary        : 67 258
createStmt           : 4
createTable          : 62 63
createTableList      : 19 62
createUnique         : 66
current              : 181
datatype             : 121 127 129 130 159 160 161 161 162 162 163 163 164 164 165 165 166 166 167 167 174 175 182 183 183 184 184 185 185 186 186 187 187 188 188 189 189 190 190 191 191 191 192 192 192 193 193 193 194 195 196 197 198 199 200 201 202 203 205 206 329
datePart             : 180
dateSource           : 141
defaultVal           : 109 262
deleteStmt           : 10
dropStmt             : 7
expBool              : 122 171 208 208 209 209 210 211 212 295 303
expComp              : 207
expresion            : 286
extract              : 179
firstLast            : 40
fromBody             : 291 292 325
fromCl               : 272 273 331
funcCall             : 178
groupByCl            : 272 273
groupList            : 297 299 300
havingCl             : 297
idList               : 72 73 74 74 77 269 323
idOrLiteral          : 222 222 223 223 224 224 225 225 226 226 227 227 228 228 229 229
idOrNumber           : 240
idOrString           : 19 20 237 238 239 239 240 240 245 247 267 268 288 289 294
ifExists             : 239 240 267 268 269
ifNotExists          : 19 20 49
indexList            : 21 24
indexName            : 21
indexNull            : 26
indexOrder           : 26
indexUnique          : 21
inheritsOpt          : 19
init                 : 0
insertStmt           : 8
intervalFields       : 97
likeOpt              : 335
limitCl              : 272 273
literal              : 114 150 151 171 172 177
literalList          : 105 150
nullOpt              : 110 261
offsetLimit          : 317 318
optAlias             : 284 285 293
optBoolPredicate     : 212
optElse              : 168
optParams            : 91 92 93 94 95 96
optsExtract          : 131 132
orReplace            : 20
orderByCl            : 272 273
orderByElem          : 307 308
orderList            : 305 307
orderNull            : 309 310
orderOpts            : 309 310
ownerOPts            : 246
paramsColumn         : 322
paramsList           : 49 124 159 322
primaryOpt           : 112
referencesOpt        : 113
selectList           : 283 284
selectListParams     : 284 285
selectParams         : 272 273 279
selectStmt           : 13 123 204 205 206 274 274 275 275 276 276 277 294
showStmt             : 5
stmt                 : 2 3
stmtList             : 1 2
tableExp             : 278 291
tableOpt             : 332
timeStamp            : 131 149
truncateStmt         : 11
types                : 64 256 263
updateCols           : 325 326
updateExp            : 328
updateStmt           : 9
updateVals           : 326 327
useStmt              : 12
usingMethod          : 21
whereCl              : 21 272 273 325 331

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . stmtList
    (2) stmtList -> . stmtList stmt
    (3) stmtList -> . stmt
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (17) createStmt -> . R_CREATE createBody
    (335) showStmt -> . R_SHOW R_DATABASES likeOpt
    (237) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (238) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (239) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_RENAME R_TO idOrString
    (240) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER column idOrString idOrNumber
    (267) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (268) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (269) dropStmt -> . R_DROP R_INDEX ifExists idList
    (322) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (325) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (331) deleteStmt -> . R_DELETE fromCl whereCl
    (332) truncateStmt -> . R_TRUNCATE tableOpt ID
    (338) useStmt -> . R_USE ID
    (272) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (274) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (275) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (276) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (277) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (279) selectStmt -> . R_SELECT selectParams

    R_CREATE        shift and go to state 14
    R_SHOW          shift and go to state 15
    R_ALTER         shift and go to state 16
    R_DROP          shift and go to state 17
    R_INSERT        shift and go to state 18
    R_UPDATE        shift and go to state 20
    R_DELETE        shift and go to state 21
    R_TRUNCATE      shift and go to state 22
    R_USE           shift and go to state 23
    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    init                           shift and go to state 1
    stmtList                       shift and go to state 2
    stmt                           shift and go to state 3
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13

state 1

    (0) S' -> init .



state 2

    (1) init -> stmtList .
    (2) stmtList -> stmtList . stmt
    (4) stmt -> . createStmt S_PUNTOCOMA
    (5) stmt -> . showStmt S_PUNTOCOMA
    (6) stmt -> . alterStmt S_PUNTOCOMA
    (7) stmt -> . dropStmt S_PUNTOCOMA
    (8) stmt -> . insertStmt S_PUNTOCOMA
    (9) stmt -> . updateStmt S_PUNTOCOMA
    (10) stmt -> . deleteStmt S_PUNTOCOMA
    (11) stmt -> . truncateStmt S_PUNTOCOMA
    (12) stmt -> . useStmt S_PUNTOCOMA
    (13) stmt -> . selectStmt S_PUNTOCOMA
    (17) createStmt -> . R_CREATE createBody
    (335) showStmt -> . R_SHOW R_DATABASES likeOpt
    (237) alterStmt -> . R_ALTER R_DATABASE idOrString alterDb
    (238) alterStmt -> . R_ALTER R_TABLE idOrString alterTableList
    (239) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_RENAME R_TO idOrString
    (240) alterStmt -> . R_ALTER R_INDEX ifExists idOrString R_ALTER column idOrString idOrNumber
    (267) dropStmt -> . R_DROP R_TABLE ifExists idOrString
    (268) dropStmt -> . R_DROP R_DATABASE ifExists idOrString
    (269) dropStmt -> . R_DROP R_INDEX ifExists idList
    (322) insertStmt -> . R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (325) updateStmt -> . R_UPDATE fromBody R_SET updateCols whereCl
    (331) deleteStmt -> . R_DELETE fromCl whereCl
    (332) truncateStmt -> . R_TRUNCATE tableOpt ID
    (338) useStmt -> . R_USE ID
    (272) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (274) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (275) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (276) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (277) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (279) selectStmt -> . R_SELECT selectParams

    $end            reduce using rule 1 (init -> stmtList .)
    R_CREATE        shift and go to state 14
    R_SHOW          shift and go to state 15
    R_ALTER         shift and go to state 16
    R_DROP          shift and go to state 17
    R_INSERT        shift and go to state 18
    R_UPDATE        shift and go to state 20
    R_DELETE        shift and go to state 21
    R_TRUNCATE      shift and go to state 22
    R_USE           shift and go to state 23
    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    stmt                           shift and go to state 25
    createStmt                     shift and go to state 4
    showStmt                       shift and go to state 5
    alterStmt                      shift and go to state 6
    dropStmt                       shift and go to state 7
    insertStmt                     shift and go to state 8
    updateStmt                     shift and go to state 9
    deleteStmt                     shift and go to state 10
    truncateStmt                   shift and go to state 11
    useStmt                        shift and go to state 12
    selectStmt                     shift and go to state 13

state 3

    (3) stmtList -> stmt .

    R_CREATE        reduce using rule 3 (stmtList -> stmt .)
    R_SHOW          reduce using rule 3 (stmtList -> stmt .)
    R_ALTER         reduce using rule 3 (stmtList -> stmt .)
    R_DROP          reduce using rule 3 (stmtList -> stmt .)
    R_INSERT        reduce using rule 3 (stmtList -> stmt .)
    R_UPDATE        reduce using rule 3 (stmtList -> stmt .)
    R_DELETE        reduce using rule 3 (stmtList -> stmt .)
    R_TRUNCATE      reduce using rule 3 (stmtList -> stmt .)
    R_USE           reduce using rule 3 (stmtList -> stmt .)
    R_SELECT        reduce using rule 3 (stmtList -> stmt .)
    S_PARIZQ        reduce using rule 3 (stmtList -> stmt .)
    $end            reduce using rule 3 (stmtList -> stmt .)


state 4

    (4) stmt -> createStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 26


state 5

    (5) stmt -> showStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 27


state 6

    (6) stmt -> alterStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 28


state 7

    (7) stmt -> dropStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 29


state 8

    (8) stmt -> insertStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 30


state 9

    (9) stmt -> updateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 31


state 10

    (10) stmt -> deleteStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 32


state 11

    (11) stmt -> truncateStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 33


state 12

    (12) stmt -> useStmt . S_PUNTOCOMA

    S_PUNTOCOMA     shift and go to state 34


state 13

    (13) stmt -> selectStmt . S_PUNTOCOMA
    (274) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (275) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (276) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     shift and go to state 35
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 14

    (17) createStmt -> R_CREATE . createBody
    (18) createBody -> . createOpts
    (19) createOpts -> . R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (20) createOpts -> . orReplace R_DATABASE ifNotExists idOrString createOwner createMode
    (21) createOpts -> . indexUnique R_INDEX indexName R_ON ID usingMethod S_PARIZQ indexList S_PARDER whereCl
    (49) createOpts -> . R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (47) orReplace -> . R_OR R_REPLACE
    (48) orReplace -> .
    (45) indexUnique -> . R_UNIQUE
    (46) indexUnique -> .

    R_TABLE         shift and go to state 41
    R_TYPE          shift and go to state 44
    R_OR            shift and go to state 45
    R_DATABASE      reduce using rule 48 (orReplace -> .)
    R_UNIQUE        shift and go to state 46
    R_INDEX         reduce using rule 46 (indexUnique -> .)

    createBody                     shift and go to state 39
    createOpts                     shift and go to state 40
    orReplace                      shift and go to state 42
    indexUnique                    shift and go to state 43

state 15

    (335) showStmt -> R_SHOW . R_DATABASES likeOpt

    R_DATABASES     shift and go to state 47


state 16

    (237) alterStmt -> R_ALTER . R_DATABASE idOrString alterDb
    (238) alterStmt -> R_ALTER . R_TABLE idOrString alterTableList
    (239) alterStmt -> R_ALTER . R_INDEX ifExists idOrString R_RENAME R_TO idOrString
    (240) alterStmt -> R_ALTER . R_INDEX ifExists idOrString R_ALTER column idOrString idOrNumber

    R_DATABASE      shift and go to state 48
    R_TABLE         shift and go to state 49
    R_INDEX         shift and go to state 50


state 17

    (267) dropStmt -> R_DROP . R_TABLE ifExists idOrString
    (268) dropStmt -> R_DROP . R_DATABASE ifExists idOrString
    (269) dropStmt -> R_DROP . R_INDEX ifExists idList

    R_TABLE         shift and go to state 51
    R_DATABASE      shift and go to state 52
    R_INDEX         shift and go to state 53


state 18

    (322) insertStmt -> R_INSERT . R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    R_INTO          shift and go to state 54


state 19

    (277) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (272) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (274) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (275) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (276) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (277) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (279) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 55

state 20

    (325) updateStmt -> R_UPDATE . fromBody R_SET updateCols whereCl
    (293) fromBody -> . ID optAlias
    (294) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 57
    S_PARIZQ        shift and go to state 58

    fromBody                       shift and go to state 56

state 21

    (331) deleteStmt -> R_DELETE . fromCl whereCl
    (278) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 60

    fromCl                         shift and go to state 59

state 22

    (332) truncateStmt -> R_TRUNCATE . tableOpt ID
    (333) tableOpt -> . R_TABLE
    (334) tableOpt -> .

    R_TABLE         shift and go to state 62
    ID              reduce using rule 334 (tableOpt -> .)

    tableOpt                       shift and go to state 61

state 23

    (338) useStmt -> R_USE . ID

    ID              shift and go to state 63


state 24

    (272) selectStmt -> R_SELECT . R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> R_SELECT . selectParams fromCl whereCl groupByCl limitCl orderByCl
    (279) selectStmt -> R_SELECT . selectParams
    (282) selectParams -> . O_PRODUCTO
    (283) selectParams -> . selectList
    (284) selectList -> . selectList S_COMA selectListParams optAlias
    (285) selectList -> . selectListParams optAlias
    (286) selectListParams -> . expresion
    (287) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (121) expresion -> . datatype
    (122) expresion -> . expBool
    (123) expresion -> . S_PARIZQ selectStmt S_PARDER
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (208) expBool -> . expBool R_AND expBool
    (209) expBool -> . expBool R_OR expBool
    (210) expBool -> . R_NOT expBool
    (211) expBool -> . S_PARIZQ expBool S_PARDER
    (212) expBool -> . expBool optBoolPredicate
    (213) expBool -> . boolean
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (204) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (205) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . expComp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING
    (183) expComp -> . datatype OL_MENORQUE datatype
    (184) expComp -> . datatype OL_MAYORQUE datatype
    (185) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (186) expComp -> . datatype OL_MENORIGUALQUE datatype
    (187) expComp -> . datatype S_IGUAL datatype
    (188) expComp -> . datatype OL_DISTINTODE datatype
    (189) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (192) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> . datatype R_ISNULL
    (195) expComp -> . datatype R_NOTNULL
    (196) expComp -> . datatype R_IS R_NULL
    (197) expComp -> . datatype R_IS R_TRUE
    (198) expComp -> . datatype R_IS R_FALSE
    (199) expComp -> . datatype R_IS R_UNKNOWN
    (200) expComp -> . datatype R_IS R_NOT R_NULL
    (201) expComp -> . datatype R_IS R_NOT R_TRUE
    (202) expComp -> . datatype R_IS R_NOT R_FALSE
    (203) expComp -> . datatype R_IS R_NOT R_UNKNOWN

    R_DISTINCT      shift and go to state 64
    O_PRODUCTO      shift and go to state 66
    ID              shift and go to state 70
    S_PARIZQ        shift and go to state 73
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    R_NOT           shift and go to state 83
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_EXISTS        shift and go to state 101
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    selectParams                   shift and go to state 65
    selectList                     shift and go to state 67
    selectListParams               shift and go to state 68
    expresion                      shift and go to state 69
    datatype                       shift and go to state 71
    expBool                        shift and go to state 72
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    boolean                        shift and go to state 84
    timeStamp                      shift and go to state 97
    expComp                        shift and go to state 102

state 25

    (2) stmtList -> stmtList stmt .

    R_CREATE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_SHOW          reduce using rule 2 (stmtList -> stmtList stmt .)
    R_ALTER         reduce using rule 2 (stmtList -> stmtList stmt .)
    R_DROP          reduce using rule 2 (stmtList -> stmtList stmt .)
    R_INSERT        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_UPDATE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_DELETE        reduce using rule 2 (stmtList -> stmtList stmt .)
    R_TRUNCATE      reduce using rule 2 (stmtList -> stmtList stmt .)
    R_USE           reduce using rule 2 (stmtList -> stmtList stmt .)
    R_SELECT        reduce using rule 2 (stmtList -> stmtList stmt .)
    S_PARIZQ        reduce using rule 2 (stmtList -> stmtList stmt .)
    $end            reduce using rule 2 (stmtList -> stmtList stmt .)


state 26

    (4) stmt -> createStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)
    $end            reduce using rule 4 (stmt -> createStmt S_PUNTOCOMA .)


state 27

    (5) stmt -> showStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)
    $end            reduce using rule 5 (stmt -> showStmt S_PUNTOCOMA .)


state 28

    (6) stmt -> alterStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)
    $end            reduce using rule 6 (stmt -> alterStmt S_PUNTOCOMA .)


state 29

    (7) stmt -> dropStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)
    $end            reduce using rule 7 (stmt -> dropStmt S_PUNTOCOMA .)


state 30

    (8) stmt -> insertStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)
    $end            reduce using rule 8 (stmt -> insertStmt S_PUNTOCOMA .)


state 31

    (9) stmt -> updateStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)
    $end            reduce using rule 9 (stmt -> updateStmt S_PUNTOCOMA .)


state 32

    (10) stmt -> deleteStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)
    $end            reduce using rule 10 (stmt -> deleteStmt S_PUNTOCOMA .)


state 33

    (11) stmt -> truncateStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)
    $end            reduce using rule 11 (stmt -> truncateStmt S_PUNTOCOMA .)


state 34

    (12) stmt -> useStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)
    $end            reduce using rule 12 (stmt -> useStmt S_PUNTOCOMA .)


state 35

    (13) stmt -> selectStmt S_PUNTOCOMA .

    R_CREATE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_SHOW          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_ALTER         reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_DROP          reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_INSERT        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_UPDATE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_DELETE        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_TRUNCATE      reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_USE           reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    R_SELECT        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    S_PARIZQ        reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)
    $end            reduce using rule 13 (stmt -> selectStmt S_PUNTOCOMA .)


state 36

    (274) selectStmt -> selectStmt R_UNION . allOpt selectStmt
    (280) allOpt -> . R_ALL
    (281) allOpt -> .

    R_ALL           shift and go to state 106
    R_SELECT        reduce using rule 281 (allOpt -> .)
    S_PARIZQ        reduce using rule 281 (allOpt -> .)

    allOpt                         shift and go to state 105

state 37

    (275) selectStmt -> selectStmt R_INTERSECT . allOpt selectStmt
    (280) allOpt -> . R_ALL
    (281) allOpt -> .

    R_ALL           shift and go to state 106
    R_SELECT        reduce using rule 281 (allOpt -> .)
    S_PARIZQ        reduce using rule 281 (allOpt -> .)

    allOpt                         shift and go to state 107

state 38

    (276) selectStmt -> selectStmt R_EXCEPT . allOpt selectStmt
    (280) allOpt -> . R_ALL
    (281) allOpt -> .

    R_ALL           shift and go to state 106
    R_SELECT        reduce using rule 281 (allOpt -> .)
    S_PARIZQ        reduce using rule 281 (allOpt -> .)

    allOpt                         shift and go to state 108

state 39

    (17) createStmt -> R_CREATE createBody .

    S_PUNTOCOMA     reduce using rule 17 (createStmt -> R_CREATE createBody .)


state 40

    (18) createBody -> createOpts .

    S_PUNTOCOMA     reduce using rule 18 (createBody -> createOpts .)


state 41

    (19) createOpts -> R_TABLE . ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (50) ifNotExists -> . R_IF R_NOT R_EXISTS
    (51) ifNotExists -> .

    R_IF            shift and go to state 110
    ID              reduce using rule 51 (ifNotExists -> .)
    STRING          reduce using rule 51 (ifNotExists -> .)
    CHARACTER       reduce using rule 51 (ifNotExists -> .)

    ifNotExists                    shift and go to state 109

state 42

    (20) createOpts -> orReplace . R_DATABASE ifNotExists idOrString createOwner createMode

    R_DATABASE      shift and go to state 111


state 43

    (21) createOpts -> indexUnique . R_INDEX indexName R_ON ID usingMethod S_PARIZQ indexList S_PARDER whereCl

    R_INDEX         shift and go to state 112


state 44

    (49) createOpts -> R_TYPE . ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER
    (50) ifNotExists -> . R_IF R_NOT R_EXISTS
    (51) ifNotExists -> .

    R_IF            shift and go to state 110
    ID              reduce using rule 51 (ifNotExists -> .)

    ifNotExists                    shift and go to state 113

state 45

    (47) orReplace -> R_OR . R_REPLACE

    R_REPLACE       shift and go to state 114


state 46

    (45) indexUnique -> R_UNIQUE .

    R_INDEX         reduce using rule 45 (indexUnique -> R_UNIQUE .)


state 47

    (335) showStmt -> R_SHOW R_DATABASES . likeOpt
    (336) likeOpt -> . R_LIKE STRING
    (337) likeOpt -> .

    R_LIKE          shift and go to state 116
    S_PUNTOCOMA     reduce using rule 337 (likeOpt -> .)

    likeOpt                        shift and go to state 115

state 48

    (237) alterStmt -> R_ALTER R_DATABASE . idOrString alterDb
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 117

state 49

    (238) alterStmt -> R_ALTER R_TABLE . idOrString alterTableList
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 121

state 50

    (239) alterStmt -> R_ALTER R_INDEX . ifExists idOrString R_RENAME R_TO idOrString
    (240) alterStmt -> R_ALTER R_INDEX . ifExists idOrString R_ALTER column idOrString idOrNumber
    (270) ifExists -> . R_IF R_EXISTS
    (271) ifExists -> .

    R_IF            shift and go to state 123
    ID              reduce using rule 271 (ifExists -> .)
    STRING          reduce using rule 271 (ifExists -> .)
    CHARACTER       reduce using rule 271 (ifExists -> .)

    ifExists                       shift and go to state 122

state 51

    (267) dropStmt -> R_DROP R_TABLE . ifExists idOrString
    (270) ifExists -> . R_IF R_EXISTS
    (271) ifExists -> .

    R_IF            shift and go to state 123
    ID              reduce using rule 271 (ifExists -> .)
    STRING          reduce using rule 271 (ifExists -> .)
    CHARACTER       reduce using rule 271 (ifExists -> .)

    ifExists                       shift and go to state 124

state 52

    (268) dropStmt -> R_DROP R_DATABASE . ifExists idOrString
    (270) ifExists -> . R_IF R_EXISTS
    (271) ifExists -> .

    R_IF            shift and go to state 123
    ID              reduce using rule 271 (ifExists -> .)
    STRING          reduce using rule 271 (ifExists -> .)
    CHARACTER       reduce using rule 271 (ifExists -> .)

    ifExists                       shift and go to state 125

state 53

    (269) dropStmt -> R_DROP R_INDEX . ifExists idList
    (270) ifExists -> . R_IF R_EXISTS
    (271) ifExists -> .

    R_IF            shift and go to state 123
    ID              reduce using rule 271 (ifExists -> .)

    ifExists                       shift and go to state 126

state 54

    (322) insertStmt -> R_INSERT R_INTO . ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 127


state 55

    (277) selectStmt -> S_PARIZQ selectStmt . S_PARDER
    (274) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (275) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (276) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 128
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 56

    (325) updateStmt -> R_UPDATE fromBody . R_SET updateCols whereCl

    R_SET           shift and go to state 129


state 57

    (293) fromBody -> ID . optAlias
    (288) optAlias -> . R_AS idOrString
    (289) optAlias -> . idOrString
    (290) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_AS            shift and go to state 131
    R_SET           reduce using rule 290 (optAlias -> .)
    S_COMA          reduce using rule 290 (optAlias -> .)
    R_WHERE         reduce using rule 290 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 290 (optAlias -> .)
    R_GROUP         reduce using rule 290 (optAlias -> .)
    R_LIMIT         reduce using rule 290 (optAlias -> .)
    R_ORDER         reduce using rule 290 (optAlias -> .)
    R_UNION         reduce using rule 290 (optAlias -> .)
    R_INTERSECT     reduce using rule 290 (optAlias -> .)
    R_EXCEPT        reduce using rule 290 (optAlias -> .)
    S_PARDER        reduce using rule 290 (optAlias -> .)
    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    optAlias                       shift and go to state 130
    idOrString                     shift and go to state 132

state 58

    (294) fromBody -> S_PARIZQ . selectStmt S_PARDER R_AS idOrString
    (272) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (274) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (275) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (276) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (277) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (279) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 133

state 59

    (331) deleteStmt -> R_DELETE fromCl . whereCl
    (295) whereCl -> . R_WHERE expBool
    (296) whereCl -> .

    R_WHERE         shift and go to state 135
    S_PUNTOCOMA     reduce using rule 296 (whereCl -> .)

    whereCl                        shift and go to state 134

state 60

    (278) fromCl -> R_FROM . tableExp
    (291) tableExp -> . tableExp S_COMA fromBody
    (292) tableExp -> . fromBody
    (293) fromBody -> . ID optAlias
    (294) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 57
    S_PARIZQ        shift and go to state 58

    tableExp                       shift and go to state 136
    fromBody                       shift and go to state 137

state 61

    (332) truncateStmt -> R_TRUNCATE tableOpt . ID

    ID              shift and go to state 138


state 62

    (333) tableOpt -> R_TABLE .

    ID              reduce using rule 333 (tableOpt -> R_TABLE .)


state 63

    (338) useStmt -> R_USE ID .

    S_PUNTOCOMA     reduce using rule 338 (useStmt -> R_USE ID .)


state 64

    (272) selectStmt -> R_SELECT R_DISTINCT . selectParams fromCl whereCl groupByCl limitCl orderByCl
    (282) selectParams -> . O_PRODUCTO
    (283) selectParams -> . selectList
    (284) selectList -> . selectList S_COMA selectListParams optAlias
    (285) selectList -> . selectListParams optAlias
    (286) selectListParams -> . expresion
    (287) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (121) expresion -> . datatype
    (122) expresion -> . expBool
    (123) expresion -> . S_PARIZQ selectStmt S_PARDER
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (208) expBool -> . expBool R_AND expBool
    (209) expBool -> . expBool R_OR expBool
    (210) expBool -> . R_NOT expBool
    (211) expBool -> . S_PARIZQ expBool S_PARDER
    (212) expBool -> . expBool optBoolPredicate
    (213) expBool -> . boolean
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (204) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (205) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . expComp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING
    (183) expComp -> . datatype OL_MENORQUE datatype
    (184) expComp -> . datatype OL_MAYORQUE datatype
    (185) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (186) expComp -> . datatype OL_MENORIGUALQUE datatype
    (187) expComp -> . datatype S_IGUAL datatype
    (188) expComp -> . datatype OL_DISTINTODE datatype
    (189) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (192) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> . datatype R_ISNULL
    (195) expComp -> . datatype R_NOTNULL
    (196) expComp -> . datatype R_IS R_NULL
    (197) expComp -> . datatype R_IS R_TRUE
    (198) expComp -> . datatype R_IS R_FALSE
    (199) expComp -> . datatype R_IS R_UNKNOWN
    (200) expComp -> . datatype R_IS R_NOT R_NULL
    (201) expComp -> . datatype R_IS R_NOT R_TRUE
    (202) expComp -> . datatype R_IS R_NOT R_FALSE
    (203) expComp -> . datatype R_IS R_NOT R_UNKNOWN

    O_PRODUCTO      shift and go to state 66
    ID              shift and go to state 70
    S_PARIZQ        shift and go to state 73
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    R_NOT           shift and go to state 83
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_EXISTS        shift and go to state 101
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    selectParams                   shift and go to state 139
    selectList                     shift and go to state 67
    selectListParams               shift and go to state 68
    expresion                      shift and go to state 69
    datatype                       shift and go to state 71
    expBool                        shift and go to state 72
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    boolean                        shift and go to state 84
    timeStamp                      shift and go to state 97
    expComp                        shift and go to state 102

state 65

    (273) selectStmt -> R_SELECT selectParams . fromCl whereCl groupByCl limitCl orderByCl
    (279) selectStmt -> R_SELECT selectParams .
    (278) fromCl -> . R_FROM tableExp

    S_PUNTOCOMA     reduce using rule 279 (selectStmt -> R_SELECT selectParams .)
    R_UNION         reduce using rule 279 (selectStmt -> R_SELECT selectParams .)
    R_INTERSECT     reduce using rule 279 (selectStmt -> R_SELECT selectParams .)
    R_EXCEPT        reduce using rule 279 (selectStmt -> R_SELECT selectParams .)
    S_PARDER        reduce using rule 279 (selectStmt -> R_SELECT selectParams .)
    R_FROM          shift and go to state 60

    fromCl                         shift and go to state 140

state 66

    (282) selectParams -> O_PRODUCTO .

    R_FROM          reduce using rule 282 (selectParams -> O_PRODUCTO .)
    S_PUNTOCOMA     reduce using rule 282 (selectParams -> O_PRODUCTO .)
    R_UNION         reduce using rule 282 (selectParams -> O_PRODUCTO .)
    R_INTERSECT     reduce using rule 282 (selectParams -> O_PRODUCTO .)
    R_EXCEPT        reduce using rule 282 (selectParams -> O_PRODUCTO .)
    S_PARDER        reduce using rule 282 (selectParams -> O_PRODUCTO .)


state 67

    (283) selectParams -> selectList .
    (284) selectList -> selectList . S_COMA selectListParams optAlias

    R_FROM          reduce using rule 283 (selectParams -> selectList .)
    S_PUNTOCOMA     reduce using rule 283 (selectParams -> selectList .)
    R_UNION         reduce using rule 283 (selectParams -> selectList .)
    R_INTERSECT     reduce using rule 283 (selectParams -> selectList .)
    R_EXCEPT        reduce using rule 283 (selectParams -> selectList .)
    S_PARDER        reduce using rule 283 (selectParams -> selectList .)
    S_COMA          shift and go to state 141


state 68

    (285) selectList -> selectListParams . optAlias
    (288) optAlias -> . R_AS idOrString
    (289) optAlias -> . idOrString
    (290) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_AS            shift and go to state 131
    S_COMA          reduce using rule 290 (optAlias -> .)
    R_FROM          reduce using rule 290 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 290 (optAlias -> .)
    R_UNION         reduce using rule 290 (optAlias -> .)
    R_INTERSECT     reduce using rule 290 (optAlias -> .)
    R_EXCEPT        reduce using rule 290 (optAlias -> .)
    S_PARDER        reduce using rule 290 (optAlias -> .)
    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    optAlias                       shift and go to state 142
    idOrString                     shift and go to state 132

state 69

    (286) selectListParams -> expresion .

    R_AS            reduce using rule 286 (selectListParams -> expresion .)
    ID              reduce using rule 286 (selectListParams -> expresion .)
    STRING          reduce using rule 286 (selectListParams -> expresion .)
    CHARACTER       reduce using rule 286 (selectListParams -> expresion .)
    S_COMA          reduce using rule 286 (selectListParams -> expresion .)
    R_FROM          reduce using rule 286 (selectListParams -> expresion .)
    S_PUNTOCOMA     reduce using rule 286 (selectListParams -> expresion .)
    R_UNION         reduce using rule 286 (selectListParams -> expresion .)
    R_INTERSECT     reduce using rule 286 (selectListParams -> expresion .)
    R_EXCEPT        reduce using rule 286 (selectListParams -> expresion .)
    S_PARDER        reduce using rule 286 (selectListParams -> expresion .)


state 70

    (287) selectListParams -> ID . S_PUNTO O_PRODUCTO
    (220) columnName -> ID .
    (221) columnName -> ID . S_PUNTO ID
    (124) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (125) funcCall -> ID . S_PARIZQ S_PARDER

    S_PUNTO         shift and go to state 143
    O_SUMA          reduce using rule 220 (columnName -> ID .)
    O_RESTA         reduce using rule 220 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 220 (columnName -> ID .)
    O_DIVISION      reduce using rule 220 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 220 (columnName -> ID .)
    O_MODULAR       reduce using rule 220 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 220 (columnName -> ID .)
    R_IN            reduce using rule 220 (columnName -> ID .)
    R_NOT           reduce using rule 220 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 220 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 220 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 220 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 220 (columnName -> ID .)
    S_IGUAL         reduce using rule 220 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 220 (columnName -> ID .)
    R_IS            reduce using rule 220 (columnName -> ID .)
    R_BETWEEN       reduce using rule 220 (columnName -> ID .)
    R_ISNULL        reduce using rule 220 (columnName -> ID .)
    R_NOTNULL       reduce using rule 220 (columnName -> ID .)
    R_AS            reduce using rule 220 (columnName -> ID .)
    ID              reduce using rule 220 (columnName -> ID .)
    STRING          reduce using rule 220 (columnName -> ID .)
    CHARACTER       reduce using rule 220 (columnName -> ID .)
    S_COMA          reduce using rule 220 (columnName -> ID .)
    R_FROM          reduce using rule 220 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 220 (columnName -> ID .)
    R_UNION         reduce using rule 220 (columnName -> ID .)
    R_INTERSECT     reduce using rule 220 (columnName -> ID .)
    R_EXCEPT        reduce using rule 220 (columnName -> ID .)
    S_PARDER        reduce using rule 220 (columnName -> ID .)
    S_PARIZQ        shift and go to state 144


state 71

    (121) expresion -> datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype
    (205) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (183) expComp -> datatype . OL_MENORQUE datatype
    (184) expComp -> datatype . OL_MAYORQUE datatype
    (185) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (186) expComp -> datatype . OL_MENORIGUALQUE datatype
    (187) expComp -> datatype . S_IGUAL datatype
    (188) expComp -> datatype . OL_DISTINTODE datatype
    (189) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (192) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> datatype . R_ISNULL
    (195) expComp -> datatype . R_NOTNULL
    (196) expComp -> datatype . R_IS R_NULL
    (197) expComp -> datatype . R_IS R_TRUE
    (198) expComp -> datatype . R_IS R_FALSE
    (199) expComp -> datatype . R_IS R_UNKNOWN
    (200) expComp -> datatype . R_IS R_NOT R_NULL
    (201) expComp -> datatype . R_IS R_NOT R_TRUE
    (202) expComp -> datatype . R_IS R_NOT R_FALSE
    (203) expComp -> datatype . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 121 (expresion -> datatype .)
    ID              reduce using rule 121 (expresion -> datatype .)
    STRING          reduce using rule 121 (expresion -> datatype .)
    CHARACTER       reduce using rule 121 (expresion -> datatype .)
    S_COMA          reduce using rule 121 (expresion -> datatype .)
    R_FROM          reduce using rule 121 (expresion -> datatype .)
    S_PUNTOCOMA     reduce using rule 121 (expresion -> datatype .)
    R_UNION         reduce using rule 121 (expresion -> datatype .)
    R_INTERSECT     reduce using rule 121 (expresion -> datatype .)
    R_EXCEPT        reduce using rule 121 (expresion -> datatype .)
    S_PARDER        reduce using rule 121 (expresion -> datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151
    R_IN            shift and go to state 152
    R_NOT           shift and go to state 153
    OL_MENORQUE     shift and go to state 154
    OL_MAYORQUE     shift and go to state 155
    OL_MAYORIGUALQUE shift and go to state 156
    OL_MENORIGUALQUE shift and go to state 157
    S_IGUAL         shift and go to state 158
    OL_DISTINTODE   shift and go to state 159
    R_IS            shift and go to state 160
    R_BETWEEN       shift and go to state 161
    R_ISNULL        shift and go to state 162
    R_NOTNULL       shift and go to state 163


state 72

    (122) expresion -> expBool .
    (208) expBool -> expBool . R_AND expBool
    (209) expBool -> expBool . R_OR expBool
    (212) expBool -> expBool . optBoolPredicate
    (214) optBoolPredicate -> . R_IS R_TRUE
    (215) optBoolPredicate -> . R_IS R_FALSE
    (216) optBoolPredicate -> . R_IS R_UNKNOWN
    (217) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (218) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (219) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 122 (expresion -> expBool .)
    ID              reduce using rule 122 (expresion -> expBool .)
    STRING          reduce using rule 122 (expresion -> expBool .)
    CHARACTER       reduce using rule 122 (expresion -> expBool .)
    S_COMA          reduce using rule 122 (expresion -> expBool .)
    R_FROM          reduce using rule 122 (expresion -> expBool .)
    S_PUNTOCOMA     reduce using rule 122 (expresion -> expBool .)
    R_UNION         reduce using rule 122 (expresion -> expBool .)
    R_INTERSECT     reduce using rule 122 (expresion -> expBool .)
    R_EXCEPT        reduce using rule 122 (expresion -> expBool .)
    S_PARDER        reduce using rule 122 (expresion -> expBool .)
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

    optBoolPredicate               shift and go to state 166

state 73

    (123) expresion -> S_PARIZQ . selectStmt S_PARDER
    (182) datatype -> S_PARIZQ . datatype S_PARDER
    (211) expBool -> S_PARIZQ . expBool S_PARDER
    (272) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (274) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (275) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (276) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (277) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (279) selectStmt -> . R_SELECT selectParams
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (208) expBool -> . expBool R_AND expBool
    (209) expBool -> . expBool R_OR expBool
    (210) expBool -> . R_NOT expBool
    (211) expBool -> . S_PARIZQ expBool S_PARDER
    (212) expBool -> . expBool optBoolPredicate
    (213) expBool -> . boolean
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (204) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (205) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . expComp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING
    (183) expComp -> . datatype OL_MENORQUE datatype
    (184) expComp -> . datatype OL_MAYORQUE datatype
    (185) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (186) expComp -> . datatype OL_MENORIGUALQUE datatype
    (187) expComp -> . datatype S_IGUAL datatype
    (188) expComp -> . datatype OL_DISTINTODE datatype
    (189) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (192) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> . datatype R_ISNULL
    (195) expComp -> . datatype R_NOTNULL
    (196) expComp -> . datatype R_IS R_NULL
    (197) expComp -> . datatype R_IS R_TRUE
    (198) expComp -> . datatype R_IS R_FALSE
    (199) expComp -> . datatype R_IS R_UNKNOWN
    (200) expComp -> . datatype R_IS R_NOT R_NULL
    (201) expComp -> . datatype R_IS R_NOT R_TRUE
    (202) expComp -> . datatype R_IS R_NOT R_FALSE
    (203) expComp -> . datatype R_IS R_NOT R_UNKNOWN

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 168
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    R_NOT           shift and go to state 83
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_EXISTS        shift and go to state 101
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    selectStmt                     shift and go to state 169
    datatype                       shift and go to state 170
    expBool                        shift and go to state 171
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    boolean                        shift and go to state 84
    timeStamp                      shift and go to state 97
    expComp                        shift and go to state 102

state 74

    (175) datatype -> O_SUMA . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 173
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 75

    (174) datatype -> O_RESTA . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 175
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 76

    (168) datatype -> R_CASE . caseList optElse R_END
    (169) caseList -> . caseList caseWhen
    (170) caseList -> . caseWhen
    (171) caseWhen -> . R_WHEN expBool R_THEN literal

    R_WHEN          shift and go to state 178

    caseList                       shift and go to state 176
    caseWhen                       shift and go to state 177

state 77

    (176) datatype -> columnName .

    O_SUMA          reduce using rule 176 (datatype -> columnName .)
    O_RESTA         reduce using rule 176 (datatype -> columnName .)
    O_PRODUCTO      reduce using rule 176 (datatype -> columnName .)
    O_DIVISION      reduce using rule 176 (datatype -> columnName .)
    O_EXPONENTE     reduce using rule 176 (datatype -> columnName .)
    O_MODULAR       reduce using rule 176 (datatype -> columnName .)
    OC_CONCATENAR   reduce using rule 176 (datatype -> columnName .)
    R_IN            reduce using rule 176 (datatype -> columnName .)
    R_NOT           reduce using rule 176 (datatype -> columnName .)
    OL_MENORQUE     reduce using rule 176 (datatype -> columnName .)
    OL_MAYORQUE     reduce using rule 176 (datatype -> columnName .)
    OL_MAYORIGUALQUE reduce using rule 176 (datatype -> columnName .)
    OL_MENORIGUALQUE reduce using rule 176 (datatype -> columnName .)
    S_IGUAL         reduce using rule 176 (datatype -> columnName .)
    OL_DISTINTODE   reduce using rule 176 (datatype -> columnName .)
    R_IS            reduce using rule 176 (datatype -> columnName .)
    R_BETWEEN       reduce using rule 176 (datatype -> columnName .)
    R_ISNULL        reduce using rule 176 (datatype -> columnName .)
    R_NOTNULL       reduce using rule 176 (datatype -> columnName .)
    R_AS            reduce using rule 176 (datatype -> columnName .)
    ID              reduce using rule 176 (datatype -> columnName .)
    STRING          reduce using rule 176 (datatype -> columnName .)
    CHARACTER       reduce using rule 176 (datatype -> columnName .)
    S_COMA          reduce using rule 176 (datatype -> columnName .)
    R_FROM          reduce using rule 176 (datatype -> columnName .)
    S_PUNTOCOMA     reduce using rule 176 (datatype -> columnName .)
    R_UNION         reduce using rule 176 (datatype -> columnName .)
    R_INTERSECT     reduce using rule 176 (datatype -> columnName .)
    R_EXCEPT        reduce using rule 176 (datatype -> columnName .)
    S_PARDER        reduce using rule 176 (datatype -> columnName .)
    R_AND           reduce using rule 176 (datatype -> columnName .)
    R_OR            reduce using rule 176 (datatype -> columnName .)
    R_GROUP         reduce using rule 176 (datatype -> columnName .)
    R_LIMIT         reduce using rule 176 (datatype -> columnName .)
    R_ORDER         reduce using rule 176 (datatype -> columnName .)
    R_THEN          reduce using rule 176 (datatype -> columnName .)
    R_WHERE         reduce using rule 176 (datatype -> columnName .)


state 78

    (177) datatype -> literal .

    O_SUMA          reduce using rule 177 (datatype -> literal .)
    O_RESTA         reduce using rule 177 (datatype -> literal .)
    O_PRODUCTO      reduce using rule 177 (datatype -> literal .)
    O_DIVISION      reduce using rule 177 (datatype -> literal .)
    O_EXPONENTE     reduce using rule 177 (datatype -> literal .)
    O_MODULAR       reduce using rule 177 (datatype -> literal .)
    OC_CONCATENAR   reduce using rule 177 (datatype -> literal .)
    R_IN            reduce using rule 177 (datatype -> literal .)
    R_NOT           reduce using rule 177 (datatype -> literal .)
    OL_MENORQUE     reduce using rule 177 (datatype -> literal .)
    OL_MAYORQUE     reduce using rule 177 (datatype -> literal .)
    OL_MAYORIGUALQUE reduce using rule 177 (datatype -> literal .)
    OL_MENORIGUALQUE reduce using rule 177 (datatype -> literal .)
    S_IGUAL         reduce using rule 177 (datatype -> literal .)
    OL_DISTINTODE   reduce using rule 177 (datatype -> literal .)
    R_IS            reduce using rule 177 (datatype -> literal .)
    R_BETWEEN       reduce using rule 177 (datatype -> literal .)
    R_ISNULL        reduce using rule 177 (datatype -> literal .)
    R_NOTNULL       reduce using rule 177 (datatype -> literal .)
    R_AS            reduce using rule 177 (datatype -> literal .)
    ID              reduce using rule 177 (datatype -> literal .)
    STRING          reduce using rule 177 (datatype -> literal .)
    CHARACTER       reduce using rule 177 (datatype -> literal .)
    S_COMA          reduce using rule 177 (datatype -> literal .)
    R_FROM          reduce using rule 177 (datatype -> literal .)
    S_PUNTOCOMA     reduce using rule 177 (datatype -> literal .)
    R_UNION         reduce using rule 177 (datatype -> literal .)
    R_INTERSECT     reduce using rule 177 (datatype -> literal .)
    R_EXCEPT        reduce using rule 177 (datatype -> literal .)
    S_PARDER        reduce using rule 177 (datatype -> literal .)
    R_AND           reduce using rule 177 (datatype -> literal .)
    R_OR            reduce using rule 177 (datatype -> literal .)
    R_GROUP         reduce using rule 177 (datatype -> literal .)
    R_LIMIT         reduce using rule 177 (datatype -> literal .)
    R_ORDER         reduce using rule 177 (datatype -> literal .)
    R_THEN          reduce using rule 177 (datatype -> literal .)
    R_WHERE         reduce using rule 177 (datatype -> literal .)


state 79

    (178) datatype -> funcCall .

    O_SUMA          reduce using rule 178 (datatype -> funcCall .)
    O_RESTA         reduce using rule 178 (datatype -> funcCall .)
    O_PRODUCTO      reduce using rule 178 (datatype -> funcCall .)
    O_DIVISION      reduce using rule 178 (datatype -> funcCall .)
    O_EXPONENTE     reduce using rule 178 (datatype -> funcCall .)
    O_MODULAR       reduce using rule 178 (datatype -> funcCall .)
    OC_CONCATENAR   reduce using rule 178 (datatype -> funcCall .)
    R_IN            reduce using rule 178 (datatype -> funcCall .)
    R_NOT           reduce using rule 178 (datatype -> funcCall .)
    OL_MENORQUE     reduce using rule 178 (datatype -> funcCall .)
    OL_MAYORQUE     reduce using rule 178 (datatype -> funcCall .)
    OL_MAYORIGUALQUE reduce using rule 178 (datatype -> funcCall .)
    OL_MENORIGUALQUE reduce using rule 178 (datatype -> funcCall .)
    S_IGUAL         reduce using rule 178 (datatype -> funcCall .)
    OL_DISTINTODE   reduce using rule 178 (datatype -> funcCall .)
    R_IS            reduce using rule 178 (datatype -> funcCall .)
    R_BETWEEN       reduce using rule 178 (datatype -> funcCall .)
    R_ISNULL        reduce using rule 178 (datatype -> funcCall .)
    R_NOTNULL       reduce using rule 178 (datatype -> funcCall .)
    R_AS            reduce using rule 178 (datatype -> funcCall .)
    ID              reduce using rule 178 (datatype -> funcCall .)
    STRING          reduce using rule 178 (datatype -> funcCall .)
    CHARACTER       reduce using rule 178 (datatype -> funcCall .)
    S_COMA          reduce using rule 178 (datatype -> funcCall .)
    R_FROM          reduce using rule 178 (datatype -> funcCall .)
    S_PUNTOCOMA     reduce using rule 178 (datatype -> funcCall .)
    R_UNION         reduce using rule 178 (datatype -> funcCall .)
    R_INTERSECT     reduce using rule 178 (datatype -> funcCall .)
    R_EXCEPT        reduce using rule 178 (datatype -> funcCall .)
    S_PARDER        reduce using rule 178 (datatype -> funcCall .)
    R_AND           reduce using rule 178 (datatype -> funcCall .)
    R_OR            reduce using rule 178 (datatype -> funcCall .)
    R_GROUP         reduce using rule 178 (datatype -> funcCall .)
    R_LIMIT         reduce using rule 178 (datatype -> funcCall .)
    R_ORDER         reduce using rule 178 (datatype -> funcCall .)
    R_THEN          reduce using rule 178 (datatype -> funcCall .)
    R_WHERE         reduce using rule 178 (datatype -> funcCall .)


state 80

    (179) datatype -> extract .

    O_SUMA          reduce using rule 179 (datatype -> extract .)
    O_RESTA         reduce using rule 179 (datatype -> extract .)
    O_PRODUCTO      reduce using rule 179 (datatype -> extract .)
    O_DIVISION      reduce using rule 179 (datatype -> extract .)
    O_EXPONENTE     reduce using rule 179 (datatype -> extract .)
    O_MODULAR       reduce using rule 179 (datatype -> extract .)
    OC_CONCATENAR   reduce using rule 179 (datatype -> extract .)
    R_IN            reduce using rule 179 (datatype -> extract .)
    R_NOT           reduce using rule 179 (datatype -> extract .)
    OL_MENORQUE     reduce using rule 179 (datatype -> extract .)
    OL_MAYORQUE     reduce using rule 179 (datatype -> extract .)
    OL_MAYORIGUALQUE reduce using rule 179 (datatype -> extract .)
    OL_MENORIGUALQUE reduce using rule 179 (datatype -> extract .)
    S_IGUAL         reduce using rule 179 (datatype -> extract .)
    OL_DISTINTODE   reduce using rule 179 (datatype -> extract .)
    R_IS            reduce using rule 179 (datatype -> extract .)
    R_BETWEEN       reduce using rule 179 (datatype -> extract .)
    R_ISNULL        reduce using rule 179 (datatype -> extract .)
    R_NOTNULL       reduce using rule 179 (datatype -> extract .)
    R_AS            reduce using rule 179 (datatype -> extract .)
    ID              reduce using rule 179 (datatype -> extract .)
    STRING          reduce using rule 179 (datatype -> extract .)
    CHARACTER       reduce using rule 179 (datatype -> extract .)
    S_COMA          reduce using rule 179 (datatype -> extract .)
    R_FROM          reduce using rule 179 (datatype -> extract .)
    S_PUNTOCOMA     reduce using rule 179 (datatype -> extract .)
    R_UNION         reduce using rule 179 (datatype -> extract .)
    R_INTERSECT     reduce using rule 179 (datatype -> extract .)
    R_EXCEPT        reduce using rule 179 (datatype -> extract .)
    S_PARDER        reduce using rule 179 (datatype -> extract .)
    R_AND           reduce using rule 179 (datatype -> extract .)
    R_OR            reduce using rule 179 (datatype -> extract .)
    R_GROUP         reduce using rule 179 (datatype -> extract .)
    R_LIMIT         reduce using rule 179 (datatype -> extract .)
    R_ORDER         reduce using rule 179 (datatype -> extract .)
    R_THEN          reduce using rule 179 (datatype -> extract .)
    R_WHERE         reduce using rule 179 (datatype -> extract .)


state 81

    (180) datatype -> datePart .

    O_SUMA          reduce using rule 180 (datatype -> datePart .)
    O_RESTA         reduce using rule 180 (datatype -> datePart .)
    O_PRODUCTO      reduce using rule 180 (datatype -> datePart .)
    O_DIVISION      reduce using rule 180 (datatype -> datePart .)
    O_EXPONENTE     reduce using rule 180 (datatype -> datePart .)
    O_MODULAR       reduce using rule 180 (datatype -> datePart .)
    OC_CONCATENAR   reduce using rule 180 (datatype -> datePart .)
    R_IN            reduce using rule 180 (datatype -> datePart .)
    R_NOT           reduce using rule 180 (datatype -> datePart .)
    OL_MENORQUE     reduce using rule 180 (datatype -> datePart .)
    OL_MAYORQUE     reduce using rule 180 (datatype -> datePart .)
    OL_MAYORIGUALQUE reduce using rule 180 (datatype -> datePart .)
    OL_MENORIGUALQUE reduce using rule 180 (datatype -> datePart .)
    S_IGUAL         reduce using rule 180 (datatype -> datePart .)
    OL_DISTINTODE   reduce using rule 180 (datatype -> datePart .)
    R_IS            reduce using rule 180 (datatype -> datePart .)
    R_BETWEEN       reduce using rule 180 (datatype -> datePart .)
    R_ISNULL        reduce using rule 180 (datatype -> datePart .)
    R_NOTNULL       reduce using rule 180 (datatype -> datePart .)
    R_AS            reduce using rule 180 (datatype -> datePart .)
    ID              reduce using rule 180 (datatype -> datePart .)
    STRING          reduce using rule 180 (datatype -> datePart .)
    CHARACTER       reduce using rule 180 (datatype -> datePart .)
    S_COMA          reduce using rule 180 (datatype -> datePart .)
    R_FROM          reduce using rule 180 (datatype -> datePart .)
    S_PUNTOCOMA     reduce using rule 180 (datatype -> datePart .)
    R_UNION         reduce using rule 180 (datatype -> datePart .)
    R_INTERSECT     reduce using rule 180 (datatype -> datePart .)
    R_EXCEPT        reduce using rule 180 (datatype -> datePart .)
    S_PARDER        reduce using rule 180 (datatype -> datePart .)
    R_AND           reduce using rule 180 (datatype -> datePart .)
    R_OR            reduce using rule 180 (datatype -> datePart .)
    R_GROUP         reduce using rule 180 (datatype -> datePart .)
    R_LIMIT         reduce using rule 180 (datatype -> datePart .)
    R_ORDER         reduce using rule 180 (datatype -> datePart .)
    R_THEN          reduce using rule 180 (datatype -> datePart .)
    R_WHERE         reduce using rule 180 (datatype -> datePart .)


state 82

    (181) datatype -> current .

    O_SUMA          reduce using rule 181 (datatype -> current .)
    O_RESTA         reduce using rule 181 (datatype -> current .)
    O_PRODUCTO      reduce using rule 181 (datatype -> current .)
    O_DIVISION      reduce using rule 181 (datatype -> current .)
    O_EXPONENTE     reduce using rule 181 (datatype -> current .)
    O_MODULAR       reduce using rule 181 (datatype -> current .)
    OC_CONCATENAR   reduce using rule 181 (datatype -> current .)
    R_IN            reduce using rule 181 (datatype -> current .)
    R_NOT           reduce using rule 181 (datatype -> current .)
    OL_MENORQUE     reduce using rule 181 (datatype -> current .)
    OL_MAYORQUE     reduce using rule 181 (datatype -> current .)
    OL_MAYORIGUALQUE reduce using rule 181 (datatype -> current .)
    OL_MENORIGUALQUE reduce using rule 181 (datatype -> current .)
    S_IGUAL         reduce using rule 181 (datatype -> current .)
    OL_DISTINTODE   reduce using rule 181 (datatype -> current .)
    R_IS            reduce using rule 181 (datatype -> current .)
    R_BETWEEN       reduce using rule 181 (datatype -> current .)
    R_ISNULL        reduce using rule 181 (datatype -> current .)
    R_NOTNULL       reduce using rule 181 (datatype -> current .)
    R_AS            reduce using rule 181 (datatype -> current .)
    ID              reduce using rule 181 (datatype -> current .)
    STRING          reduce using rule 181 (datatype -> current .)
    CHARACTER       reduce using rule 181 (datatype -> current .)
    S_COMA          reduce using rule 181 (datatype -> current .)
    R_FROM          reduce using rule 181 (datatype -> current .)
    S_PUNTOCOMA     reduce using rule 181 (datatype -> current .)
    R_UNION         reduce using rule 181 (datatype -> current .)
    R_INTERSECT     reduce using rule 181 (datatype -> current .)
    R_EXCEPT        reduce using rule 181 (datatype -> current .)
    S_PARDER        reduce using rule 181 (datatype -> current .)
    R_AND           reduce using rule 181 (datatype -> current .)
    R_OR            reduce using rule 181 (datatype -> current .)
    R_GROUP         reduce using rule 181 (datatype -> current .)
    R_LIMIT         reduce using rule 181 (datatype -> current .)
    R_ORDER         reduce using rule 181 (datatype -> current .)
    R_THEN          reduce using rule 181 (datatype -> current .)
    R_WHERE         reduce using rule 181 (datatype -> current .)


state 83

    (210) expBool -> R_NOT . expBool
    (208) expBool -> . expBool R_AND expBool
    (209) expBool -> . expBool R_OR expBool
    (210) expBool -> . R_NOT expBool
    (211) expBool -> . S_PARIZQ expBool S_PARDER
    (212) expBool -> . expBool optBoolPredicate
    (213) expBool -> . boolean
    (204) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (205) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . expComp
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (183) expComp -> . datatype OL_MENORQUE datatype
    (184) expComp -> . datatype OL_MAYORQUE datatype
    (185) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (186) expComp -> . datatype OL_MENORIGUALQUE datatype
    (187) expComp -> . datatype S_IGUAL datatype
    (188) expComp -> . datatype OL_DISTINTODE datatype
    (189) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (192) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> . datatype R_ISNULL
    (195) expComp -> . datatype R_NOTNULL
    (196) expComp -> . datatype R_IS R_NULL
    (197) expComp -> . datatype R_IS R_TRUE
    (198) expComp -> . datatype R_IS R_FALSE
    (199) expComp -> . datatype R_IS R_UNKNOWN
    (200) expComp -> . datatype R_IS R_NOT R_NULL
    (201) expComp -> . datatype R_IS R_NOT R_TRUE
    (202) expComp -> . datatype R_IS R_NOT R_FALSE
    (203) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 83
    S_PARIZQ        shift and go to state 180
    R_EXISTS        shift and go to state 101
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 179
    boolean                        shift and go to state 84
    datatype                       shift and go to state 181
    expComp                        shift and go to state 102
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 84

    (213) expBool -> boolean .

    R_AND           reduce using rule 213 (expBool -> boolean .)
    R_OR            reduce using rule 213 (expBool -> boolean .)
    R_IS            reduce using rule 213 (expBool -> boolean .)
    R_AS            reduce using rule 213 (expBool -> boolean .)
    ID              reduce using rule 213 (expBool -> boolean .)
    STRING          reduce using rule 213 (expBool -> boolean .)
    CHARACTER       reduce using rule 213 (expBool -> boolean .)
    S_COMA          reduce using rule 213 (expBool -> boolean .)
    R_FROM          reduce using rule 213 (expBool -> boolean .)
    S_PUNTOCOMA     reduce using rule 213 (expBool -> boolean .)
    R_UNION         reduce using rule 213 (expBool -> boolean .)
    R_INTERSECT     reduce using rule 213 (expBool -> boolean .)
    R_EXCEPT        reduce using rule 213 (expBool -> boolean .)
    S_PARDER        reduce using rule 213 (expBool -> boolean .)
    R_GROUP         reduce using rule 213 (expBool -> boolean .)
    R_LIMIT         reduce using rule 213 (expBool -> boolean .)
    R_ORDER         reduce using rule 213 (expBool -> boolean .)
    R_THEN          reduce using rule 213 (expBool -> boolean .)


state 85

    (152) literal -> INTEGER .

    O_SUMA          reduce using rule 152 (literal -> INTEGER .)
    O_RESTA         reduce using rule 152 (literal -> INTEGER .)
    O_PRODUCTO      reduce using rule 152 (literal -> INTEGER .)
    O_DIVISION      reduce using rule 152 (literal -> INTEGER .)
    O_EXPONENTE     reduce using rule 152 (literal -> INTEGER .)
    O_MODULAR       reduce using rule 152 (literal -> INTEGER .)
    OC_CONCATENAR   reduce using rule 152 (literal -> INTEGER .)
    R_IN            reduce using rule 152 (literal -> INTEGER .)
    R_NOT           reduce using rule 152 (literal -> INTEGER .)
    OL_MENORQUE     reduce using rule 152 (literal -> INTEGER .)
    OL_MAYORQUE     reduce using rule 152 (literal -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 152 (literal -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 152 (literal -> INTEGER .)
    S_IGUAL         reduce using rule 152 (literal -> INTEGER .)
    OL_DISTINTODE   reduce using rule 152 (literal -> INTEGER .)
    R_IS            reduce using rule 152 (literal -> INTEGER .)
    R_BETWEEN       reduce using rule 152 (literal -> INTEGER .)
    R_ISNULL        reduce using rule 152 (literal -> INTEGER .)
    R_NOTNULL       reduce using rule 152 (literal -> INTEGER .)
    R_AS            reduce using rule 152 (literal -> INTEGER .)
    ID              reduce using rule 152 (literal -> INTEGER .)
    STRING          reduce using rule 152 (literal -> INTEGER .)
    CHARACTER       reduce using rule 152 (literal -> INTEGER .)
    S_COMA          reduce using rule 152 (literal -> INTEGER .)
    R_FROM          reduce using rule 152 (literal -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 152 (literal -> INTEGER .)
    R_UNION         reduce using rule 152 (literal -> INTEGER .)
    R_INTERSECT     reduce using rule 152 (literal -> INTEGER .)
    R_EXCEPT        reduce using rule 152 (literal -> INTEGER .)
    S_PARDER        reduce using rule 152 (literal -> INTEGER .)
    R_AND           reduce using rule 152 (literal -> INTEGER .)
    R_OR            reduce using rule 152 (literal -> INTEGER .)
    R_GROUP         reduce using rule 152 (literal -> INTEGER .)
    R_LIMIT         reduce using rule 152 (literal -> INTEGER .)
    R_ORDER         reduce using rule 152 (literal -> INTEGER .)
    R_THEN          reduce using rule 152 (literal -> INTEGER .)
    R_WHERE         reduce using rule 152 (literal -> INTEGER .)
    R_END           reduce using rule 152 (literal -> INTEGER .)
    R_ELSE          reduce using rule 152 (literal -> INTEGER .)
    R_WHEN          reduce using rule 152 (literal -> INTEGER .)
    R_DEFAULT       reduce using rule 152 (literal -> INTEGER .)
    R_NULL          reduce using rule 152 (literal -> INTEGER .)
    R_PRIMARY       reduce using rule 152 (literal -> INTEGER .)
    R_REFERENCES    reduce using rule 152 (literal -> INTEGER .)
    R_CONSTRAINT    reduce using rule 152 (literal -> INTEGER .)
    R_UNIQUE        reduce using rule 152 (literal -> INTEGER .)
    R_CHECK         reduce using rule 152 (literal -> INTEGER .)


state 86

    (153) literal -> STRING .

    O_SUMA          reduce using rule 153 (literal -> STRING .)
    O_RESTA         reduce using rule 153 (literal -> STRING .)
    O_PRODUCTO      reduce using rule 153 (literal -> STRING .)
    O_DIVISION      reduce using rule 153 (literal -> STRING .)
    O_EXPONENTE     reduce using rule 153 (literal -> STRING .)
    O_MODULAR       reduce using rule 153 (literal -> STRING .)
    OC_CONCATENAR   reduce using rule 153 (literal -> STRING .)
    R_IN            reduce using rule 153 (literal -> STRING .)
    R_NOT           reduce using rule 153 (literal -> STRING .)
    OL_MENORQUE     reduce using rule 153 (literal -> STRING .)
    OL_MAYORQUE     reduce using rule 153 (literal -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 153 (literal -> STRING .)
    OL_MENORIGUALQUE reduce using rule 153 (literal -> STRING .)
    S_IGUAL         reduce using rule 153 (literal -> STRING .)
    OL_DISTINTODE   reduce using rule 153 (literal -> STRING .)
    R_IS            reduce using rule 153 (literal -> STRING .)
    R_BETWEEN       reduce using rule 153 (literal -> STRING .)
    R_ISNULL        reduce using rule 153 (literal -> STRING .)
    R_NOTNULL       reduce using rule 153 (literal -> STRING .)
    R_AS            reduce using rule 153 (literal -> STRING .)
    ID              reduce using rule 153 (literal -> STRING .)
    STRING          reduce using rule 153 (literal -> STRING .)
    CHARACTER       reduce using rule 153 (literal -> STRING .)
    S_COMA          reduce using rule 153 (literal -> STRING .)
    R_FROM          reduce using rule 153 (literal -> STRING .)
    S_PUNTOCOMA     reduce using rule 153 (literal -> STRING .)
    R_UNION         reduce using rule 153 (literal -> STRING .)
    R_INTERSECT     reduce using rule 153 (literal -> STRING .)
    R_EXCEPT        reduce using rule 153 (literal -> STRING .)
    S_PARDER        reduce using rule 153 (literal -> STRING .)
    R_AND           reduce using rule 153 (literal -> STRING .)
    R_OR            reduce using rule 153 (literal -> STRING .)
    R_GROUP         reduce using rule 153 (literal -> STRING .)
    R_LIMIT         reduce using rule 153 (literal -> STRING .)
    R_ORDER         reduce using rule 153 (literal -> STRING .)
    R_THEN          reduce using rule 153 (literal -> STRING .)
    R_WHERE         reduce using rule 153 (literal -> STRING .)
    R_END           reduce using rule 153 (literal -> STRING .)
    R_ELSE          reduce using rule 153 (literal -> STRING .)
    R_WHEN          reduce using rule 153 (literal -> STRING .)
    R_DEFAULT       reduce using rule 153 (literal -> STRING .)
    R_NULL          reduce using rule 153 (literal -> STRING .)
    R_PRIMARY       reduce using rule 153 (literal -> STRING .)
    R_REFERENCES    reduce using rule 153 (literal -> STRING .)
    R_CONSTRAINT    reduce using rule 153 (literal -> STRING .)
    R_UNIQUE        reduce using rule 153 (literal -> STRING .)
    R_CHECK         reduce using rule 153 (literal -> STRING .)


state 87

    (154) literal -> DECIMAL .

    O_SUMA          reduce using rule 154 (literal -> DECIMAL .)
    O_RESTA         reduce using rule 154 (literal -> DECIMAL .)
    O_PRODUCTO      reduce using rule 154 (literal -> DECIMAL .)
    O_DIVISION      reduce using rule 154 (literal -> DECIMAL .)
    O_EXPONENTE     reduce using rule 154 (literal -> DECIMAL .)
    O_MODULAR       reduce using rule 154 (literal -> DECIMAL .)
    OC_CONCATENAR   reduce using rule 154 (literal -> DECIMAL .)
    R_IN            reduce using rule 154 (literal -> DECIMAL .)
    R_NOT           reduce using rule 154 (literal -> DECIMAL .)
    OL_MENORQUE     reduce using rule 154 (literal -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 154 (literal -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 154 (literal -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 154 (literal -> DECIMAL .)
    S_IGUAL         reduce using rule 154 (literal -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 154 (literal -> DECIMAL .)
    R_IS            reduce using rule 154 (literal -> DECIMAL .)
    R_BETWEEN       reduce using rule 154 (literal -> DECIMAL .)
    R_ISNULL        reduce using rule 154 (literal -> DECIMAL .)
    R_NOTNULL       reduce using rule 154 (literal -> DECIMAL .)
    R_AS            reduce using rule 154 (literal -> DECIMAL .)
    ID              reduce using rule 154 (literal -> DECIMAL .)
    STRING          reduce using rule 154 (literal -> DECIMAL .)
    CHARACTER       reduce using rule 154 (literal -> DECIMAL .)
    S_COMA          reduce using rule 154 (literal -> DECIMAL .)
    R_FROM          reduce using rule 154 (literal -> DECIMAL .)
    S_PUNTOCOMA     reduce using rule 154 (literal -> DECIMAL .)
    R_UNION         reduce using rule 154 (literal -> DECIMAL .)
    R_INTERSECT     reduce using rule 154 (literal -> DECIMAL .)
    R_EXCEPT        reduce using rule 154 (literal -> DECIMAL .)
    S_PARDER        reduce using rule 154 (literal -> DECIMAL .)
    R_AND           reduce using rule 154 (literal -> DECIMAL .)
    R_OR            reduce using rule 154 (literal -> DECIMAL .)
    R_GROUP         reduce using rule 154 (literal -> DECIMAL .)
    R_LIMIT         reduce using rule 154 (literal -> DECIMAL .)
    R_ORDER         reduce using rule 154 (literal -> DECIMAL .)
    R_THEN          reduce using rule 154 (literal -> DECIMAL .)
    R_WHERE         reduce using rule 154 (literal -> DECIMAL .)
    R_END           reduce using rule 154 (literal -> DECIMAL .)
    R_ELSE          reduce using rule 154 (literal -> DECIMAL .)
    R_WHEN          reduce using rule 154 (literal -> DECIMAL .)
    R_DEFAULT       reduce using rule 154 (literal -> DECIMAL .)
    R_NULL          reduce using rule 154 (literal -> DECIMAL .)
    R_PRIMARY       reduce using rule 154 (literal -> DECIMAL .)
    R_REFERENCES    reduce using rule 154 (literal -> DECIMAL .)
    R_CONSTRAINT    reduce using rule 154 (literal -> DECIMAL .)
    R_UNIQUE        reduce using rule 154 (literal -> DECIMAL .)
    R_CHECK         reduce using rule 154 (literal -> DECIMAL .)


state 88

    (155) literal -> CHARACTER .

    O_SUMA          reduce using rule 155 (literal -> CHARACTER .)
    O_RESTA         reduce using rule 155 (literal -> CHARACTER .)
    O_PRODUCTO      reduce using rule 155 (literal -> CHARACTER .)
    O_DIVISION      reduce using rule 155 (literal -> CHARACTER .)
    O_EXPONENTE     reduce using rule 155 (literal -> CHARACTER .)
    O_MODULAR       reduce using rule 155 (literal -> CHARACTER .)
    OC_CONCATENAR   reduce using rule 155 (literal -> CHARACTER .)
    R_IN            reduce using rule 155 (literal -> CHARACTER .)
    R_NOT           reduce using rule 155 (literal -> CHARACTER .)
    OL_MENORQUE     reduce using rule 155 (literal -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 155 (literal -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 155 (literal -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 155 (literal -> CHARACTER .)
    S_IGUAL         reduce using rule 155 (literal -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 155 (literal -> CHARACTER .)
    R_IS            reduce using rule 155 (literal -> CHARACTER .)
    R_BETWEEN       reduce using rule 155 (literal -> CHARACTER .)
    R_ISNULL        reduce using rule 155 (literal -> CHARACTER .)
    R_NOTNULL       reduce using rule 155 (literal -> CHARACTER .)
    R_AS            reduce using rule 155 (literal -> CHARACTER .)
    ID              reduce using rule 155 (literal -> CHARACTER .)
    STRING          reduce using rule 155 (literal -> CHARACTER .)
    CHARACTER       reduce using rule 155 (literal -> CHARACTER .)
    S_COMA          reduce using rule 155 (literal -> CHARACTER .)
    R_FROM          reduce using rule 155 (literal -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 155 (literal -> CHARACTER .)
    R_UNION         reduce using rule 155 (literal -> CHARACTER .)
    R_INTERSECT     reduce using rule 155 (literal -> CHARACTER .)
    R_EXCEPT        reduce using rule 155 (literal -> CHARACTER .)
    S_PARDER        reduce using rule 155 (literal -> CHARACTER .)
    R_AND           reduce using rule 155 (literal -> CHARACTER .)
    R_OR            reduce using rule 155 (literal -> CHARACTER .)
    R_GROUP         reduce using rule 155 (literal -> CHARACTER .)
    R_LIMIT         reduce using rule 155 (literal -> CHARACTER .)
    R_ORDER         reduce using rule 155 (literal -> CHARACTER .)
    R_THEN          reduce using rule 155 (literal -> CHARACTER .)
    R_WHERE         reduce using rule 155 (literal -> CHARACTER .)
    R_END           reduce using rule 155 (literal -> CHARACTER .)
    R_ELSE          reduce using rule 155 (literal -> CHARACTER .)
    R_WHEN          reduce using rule 155 (literal -> CHARACTER .)
    R_DEFAULT       reduce using rule 155 (literal -> CHARACTER .)
    R_NULL          reduce using rule 155 (literal -> CHARACTER .)
    R_PRIMARY       reduce using rule 155 (literal -> CHARACTER .)
    R_REFERENCES    reduce using rule 155 (literal -> CHARACTER .)
    R_CONSTRAINT    reduce using rule 155 (literal -> CHARACTER .)
    R_UNIQUE        reduce using rule 155 (literal -> CHARACTER .)
    R_CHECK         reduce using rule 155 (literal -> CHARACTER .)


state 89

    (156) literal -> R_TRUE .

    O_SUMA          reduce using rule 156 (literal -> R_TRUE .)
    O_RESTA         reduce using rule 156 (literal -> R_TRUE .)
    O_PRODUCTO      reduce using rule 156 (literal -> R_TRUE .)
    O_DIVISION      reduce using rule 156 (literal -> R_TRUE .)
    O_EXPONENTE     reduce using rule 156 (literal -> R_TRUE .)
    O_MODULAR       reduce using rule 156 (literal -> R_TRUE .)
    OC_CONCATENAR   reduce using rule 156 (literal -> R_TRUE .)
    R_IN            reduce using rule 156 (literal -> R_TRUE .)
    R_NOT           reduce using rule 156 (literal -> R_TRUE .)
    OL_MENORQUE     reduce using rule 156 (literal -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 156 (literal -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 156 (literal -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 156 (literal -> R_TRUE .)
    S_IGUAL         reduce using rule 156 (literal -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 156 (literal -> R_TRUE .)
    R_IS            reduce using rule 156 (literal -> R_TRUE .)
    R_BETWEEN       reduce using rule 156 (literal -> R_TRUE .)
    R_ISNULL        reduce using rule 156 (literal -> R_TRUE .)
    R_NOTNULL       reduce using rule 156 (literal -> R_TRUE .)
    R_AS            reduce using rule 156 (literal -> R_TRUE .)
    ID              reduce using rule 156 (literal -> R_TRUE .)
    STRING          reduce using rule 156 (literal -> R_TRUE .)
    CHARACTER       reduce using rule 156 (literal -> R_TRUE .)
    S_COMA          reduce using rule 156 (literal -> R_TRUE .)
    R_FROM          reduce using rule 156 (literal -> R_TRUE .)
    S_PUNTOCOMA     reduce using rule 156 (literal -> R_TRUE .)
    R_UNION         reduce using rule 156 (literal -> R_TRUE .)
    R_INTERSECT     reduce using rule 156 (literal -> R_TRUE .)
    R_EXCEPT        reduce using rule 156 (literal -> R_TRUE .)
    S_PARDER        reduce using rule 156 (literal -> R_TRUE .)
    R_AND           reduce using rule 156 (literal -> R_TRUE .)
    R_OR            reduce using rule 156 (literal -> R_TRUE .)
    R_GROUP         reduce using rule 156 (literal -> R_TRUE .)
    R_LIMIT         reduce using rule 156 (literal -> R_TRUE .)
    R_ORDER         reduce using rule 156 (literal -> R_TRUE .)
    R_THEN          reduce using rule 156 (literal -> R_TRUE .)
    R_WHERE         reduce using rule 156 (literal -> R_TRUE .)
    R_END           reduce using rule 156 (literal -> R_TRUE .)
    R_ELSE          reduce using rule 156 (literal -> R_TRUE .)
    R_WHEN          reduce using rule 156 (literal -> R_TRUE .)
    R_DEFAULT       reduce using rule 156 (literal -> R_TRUE .)
    R_NULL          reduce using rule 156 (literal -> R_TRUE .)
    R_PRIMARY       reduce using rule 156 (literal -> R_TRUE .)
    R_REFERENCES    reduce using rule 156 (literal -> R_TRUE .)
    R_CONSTRAINT    reduce using rule 156 (literal -> R_TRUE .)
    R_UNIQUE        reduce using rule 156 (literal -> R_TRUE .)
    R_CHECK         reduce using rule 156 (literal -> R_TRUE .)


state 90

    (157) literal -> R_FALSE .

    O_SUMA          reduce using rule 157 (literal -> R_FALSE .)
    O_RESTA         reduce using rule 157 (literal -> R_FALSE .)
    O_PRODUCTO      reduce using rule 157 (literal -> R_FALSE .)
    O_DIVISION      reduce using rule 157 (literal -> R_FALSE .)
    O_EXPONENTE     reduce using rule 157 (literal -> R_FALSE .)
    O_MODULAR       reduce using rule 157 (literal -> R_FALSE .)
    OC_CONCATENAR   reduce using rule 157 (literal -> R_FALSE .)
    R_IN            reduce using rule 157 (literal -> R_FALSE .)
    R_NOT           reduce using rule 157 (literal -> R_FALSE .)
    OL_MENORQUE     reduce using rule 157 (literal -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 157 (literal -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 157 (literal -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 157 (literal -> R_FALSE .)
    S_IGUAL         reduce using rule 157 (literal -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 157 (literal -> R_FALSE .)
    R_IS            reduce using rule 157 (literal -> R_FALSE .)
    R_BETWEEN       reduce using rule 157 (literal -> R_FALSE .)
    R_ISNULL        reduce using rule 157 (literal -> R_FALSE .)
    R_NOTNULL       reduce using rule 157 (literal -> R_FALSE .)
    R_AS            reduce using rule 157 (literal -> R_FALSE .)
    ID              reduce using rule 157 (literal -> R_FALSE .)
    STRING          reduce using rule 157 (literal -> R_FALSE .)
    CHARACTER       reduce using rule 157 (literal -> R_FALSE .)
    S_COMA          reduce using rule 157 (literal -> R_FALSE .)
    R_FROM          reduce using rule 157 (literal -> R_FALSE .)
    S_PUNTOCOMA     reduce using rule 157 (literal -> R_FALSE .)
    R_UNION         reduce using rule 157 (literal -> R_FALSE .)
    R_INTERSECT     reduce using rule 157 (literal -> R_FALSE .)
    R_EXCEPT        reduce using rule 157 (literal -> R_FALSE .)
    S_PARDER        reduce using rule 157 (literal -> R_FALSE .)
    R_AND           reduce using rule 157 (literal -> R_FALSE .)
    R_OR            reduce using rule 157 (literal -> R_FALSE .)
    R_GROUP         reduce using rule 157 (literal -> R_FALSE .)
    R_LIMIT         reduce using rule 157 (literal -> R_FALSE .)
    R_ORDER         reduce using rule 157 (literal -> R_FALSE .)
    R_THEN          reduce using rule 157 (literal -> R_FALSE .)
    R_WHERE         reduce using rule 157 (literal -> R_FALSE .)
    R_END           reduce using rule 157 (literal -> R_FALSE .)
    R_ELSE          reduce using rule 157 (literal -> R_FALSE .)
    R_WHEN          reduce using rule 157 (literal -> R_FALSE .)
    R_DEFAULT       reduce using rule 157 (literal -> R_FALSE .)
    R_NULL          reduce using rule 157 (literal -> R_FALSE .)
    R_PRIMARY       reduce using rule 157 (literal -> R_FALSE .)
    R_REFERENCES    reduce using rule 157 (literal -> R_FALSE .)
    R_CONSTRAINT    reduce using rule 157 (literal -> R_FALSE .)
    R_UNIQUE        reduce using rule 157 (literal -> R_FALSE .)
    R_CHECK         reduce using rule 157 (literal -> R_FALSE .)


state 91

    (158) literal -> R_NULL .

    O_SUMA          reduce using rule 158 (literal -> R_NULL .)
    O_RESTA         reduce using rule 158 (literal -> R_NULL .)
    O_PRODUCTO      reduce using rule 158 (literal -> R_NULL .)
    O_DIVISION      reduce using rule 158 (literal -> R_NULL .)
    O_EXPONENTE     reduce using rule 158 (literal -> R_NULL .)
    O_MODULAR       reduce using rule 158 (literal -> R_NULL .)
    OC_CONCATENAR   reduce using rule 158 (literal -> R_NULL .)
    R_IN            reduce using rule 158 (literal -> R_NULL .)
    R_NOT           reduce using rule 158 (literal -> R_NULL .)
    OL_MENORQUE     reduce using rule 158 (literal -> R_NULL .)
    OL_MAYORQUE     reduce using rule 158 (literal -> R_NULL .)
    OL_MAYORIGUALQUE reduce using rule 158 (literal -> R_NULL .)
    OL_MENORIGUALQUE reduce using rule 158 (literal -> R_NULL .)
    S_IGUAL         reduce using rule 158 (literal -> R_NULL .)
    OL_DISTINTODE   reduce using rule 158 (literal -> R_NULL .)
    R_IS            reduce using rule 158 (literal -> R_NULL .)
    R_BETWEEN       reduce using rule 158 (literal -> R_NULL .)
    R_ISNULL        reduce using rule 158 (literal -> R_NULL .)
    R_NOTNULL       reduce using rule 158 (literal -> R_NULL .)
    R_AS            reduce using rule 158 (literal -> R_NULL .)
    ID              reduce using rule 158 (literal -> R_NULL .)
    STRING          reduce using rule 158 (literal -> R_NULL .)
    CHARACTER       reduce using rule 158 (literal -> R_NULL .)
    S_COMA          reduce using rule 158 (literal -> R_NULL .)
    R_FROM          reduce using rule 158 (literal -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 158 (literal -> R_NULL .)
    R_UNION         reduce using rule 158 (literal -> R_NULL .)
    R_INTERSECT     reduce using rule 158 (literal -> R_NULL .)
    R_EXCEPT        reduce using rule 158 (literal -> R_NULL .)
    S_PARDER        reduce using rule 158 (literal -> R_NULL .)
    R_AND           reduce using rule 158 (literal -> R_NULL .)
    R_OR            reduce using rule 158 (literal -> R_NULL .)
    R_GROUP         reduce using rule 158 (literal -> R_NULL .)
    R_LIMIT         reduce using rule 158 (literal -> R_NULL .)
    R_ORDER         reduce using rule 158 (literal -> R_NULL .)
    R_THEN          reduce using rule 158 (literal -> R_NULL .)
    R_WHERE         reduce using rule 158 (literal -> R_NULL .)
    R_END           reduce using rule 158 (literal -> R_NULL .)
    R_ELSE          reduce using rule 158 (literal -> R_NULL .)
    R_WHEN          reduce using rule 158 (literal -> R_NULL .)
    R_DEFAULT       reduce using rule 158 (literal -> R_NULL .)
    R_NULL          reduce using rule 158 (literal -> R_NULL .)
    R_PRIMARY       reduce using rule 158 (literal -> R_NULL .)
    R_REFERENCES    reduce using rule 158 (literal -> R_NULL .)
    R_CONSTRAINT    reduce using rule 158 (literal -> R_NULL .)
    R_UNIQUE        reduce using rule 158 (literal -> R_NULL .)
    R_CHECK         reduce using rule 158 (literal -> R_NULL .)


state 92

    (126) funcCall -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 182


state 93

    (127) funcCall -> R_COUNT . S_PARIZQ datatype S_PARDER
    (128) funcCall -> R_COUNT . S_PARIZQ O_PRODUCTO S_PARDER

    S_PARIZQ        shift and go to state 183


state 94

    (129) funcCall -> R_SUM . S_PARIZQ datatype S_PARDER

    S_PARIZQ        shift and go to state 184


state 95

    (130) funcCall -> R_PROM . S_PARIZQ datatype S_PARDER

    S_PARIZQ        shift and go to state 185


state 96

    (131) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> R_EXTRACT . S_PARIZQ optsExtract R_FROM columnName S_PARDER

    S_PARIZQ        shift and go to state 186


state 97

    (149) current -> timeStamp .

    O_SUMA          reduce using rule 149 (current -> timeStamp .)
    O_RESTA         reduce using rule 149 (current -> timeStamp .)
    O_PRODUCTO      reduce using rule 149 (current -> timeStamp .)
    O_DIVISION      reduce using rule 149 (current -> timeStamp .)
    O_EXPONENTE     reduce using rule 149 (current -> timeStamp .)
    O_MODULAR       reduce using rule 149 (current -> timeStamp .)
    OC_CONCATENAR   reduce using rule 149 (current -> timeStamp .)
    R_IN            reduce using rule 149 (current -> timeStamp .)
    R_NOT           reduce using rule 149 (current -> timeStamp .)
    OL_MENORQUE     reduce using rule 149 (current -> timeStamp .)
    OL_MAYORQUE     reduce using rule 149 (current -> timeStamp .)
    OL_MAYORIGUALQUE reduce using rule 149 (current -> timeStamp .)
    OL_MENORIGUALQUE reduce using rule 149 (current -> timeStamp .)
    S_IGUAL         reduce using rule 149 (current -> timeStamp .)
    OL_DISTINTODE   reduce using rule 149 (current -> timeStamp .)
    R_IS            reduce using rule 149 (current -> timeStamp .)
    R_BETWEEN       reduce using rule 149 (current -> timeStamp .)
    R_ISNULL        reduce using rule 149 (current -> timeStamp .)
    R_NOTNULL       reduce using rule 149 (current -> timeStamp .)
    R_AS            reduce using rule 149 (current -> timeStamp .)
    ID              reduce using rule 149 (current -> timeStamp .)
    STRING          reduce using rule 149 (current -> timeStamp .)
    CHARACTER       reduce using rule 149 (current -> timeStamp .)
    S_COMA          reduce using rule 149 (current -> timeStamp .)
    R_FROM          reduce using rule 149 (current -> timeStamp .)
    S_PUNTOCOMA     reduce using rule 149 (current -> timeStamp .)
    R_UNION         reduce using rule 149 (current -> timeStamp .)
    R_INTERSECT     reduce using rule 149 (current -> timeStamp .)
    R_EXCEPT        reduce using rule 149 (current -> timeStamp .)
    S_PARDER        reduce using rule 149 (current -> timeStamp .)
    R_AND           reduce using rule 149 (current -> timeStamp .)
    R_OR            reduce using rule 149 (current -> timeStamp .)
    R_GROUP         reduce using rule 149 (current -> timeStamp .)
    R_LIMIT         reduce using rule 149 (current -> timeStamp .)
    R_ORDER         reduce using rule 149 (current -> timeStamp .)
    R_THEN          reduce using rule 149 (current -> timeStamp .)
    R_WHERE         reduce using rule 149 (current -> timeStamp .)


state 98

    (141) datePart -> R_DATE_PART . S_PARIZQ STRING S_COMA dateSource S_PARDER

    S_PARIZQ        shift and go to state 187


state 99

    (147) current -> R_CURRENT_DATE .

    O_SUMA          reduce using rule 147 (current -> R_CURRENT_DATE .)
    O_RESTA         reduce using rule 147 (current -> R_CURRENT_DATE .)
    O_PRODUCTO      reduce using rule 147 (current -> R_CURRENT_DATE .)
    O_DIVISION      reduce using rule 147 (current -> R_CURRENT_DATE .)
    O_EXPONENTE     reduce using rule 147 (current -> R_CURRENT_DATE .)
    O_MODULAR       reduce using rule 147 (current -> R_CURRENT_DATE .)
    OC_CONCATENAR   reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_IN            reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_NOT           reduce using rule 147 (current -> R_CURRENT_DATE .)
    OL_MENORQUE     reduce using rule 147 (current -> R_CURRENT_DATE .)
    OL_MAYORQUE     reduce using rule 147 (current -> R_CURRENT_DATE .)
    OL_MAYORIGUALQUE reduce using rule 147 (current -> R_CURRENT_DATE .)
    OL_MENORIGUALQUE reduce using rule 147 (current -> R_CURRENT_DATE .)
    S_IGUAL         reduce using rule 147 (current -> R_CURRENT_DATE .)
    OL_DISTINTODE   reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_IS            reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_BETWEEN       reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_ISNULL        reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_NOTNULL       reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_AS            reduce using rule 147 (current -> R_CURRENT_DATE .)
    ID              reduce using rule 147 (current -> R_CURRENT_DATE .)
    STRING          reduce using rule 147 (current -> R_CURRENT_DATE .)
    CHARACTER       reduce using rule 147 (current -> R_CURRENT_DATE .)
    S_COMA          reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_FROM          reduce using rule 147 (current -> R_CURRENT_DATE .)
    S_PUNTOCOMA     reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_UNION         reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_INTERSECT     reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_EXCEPT        reduce using rule 147 (current -> R_CURRENT_DATE .)
    S_PARDER        reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_AND           reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_OR            reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_GROUP         reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_LIMIT         reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_ORDER         reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_THEN          reduce using rule 147 (current -> R_CURRENT_DATE .)
    R_WHERE         reduce using rule 147 (current -> R_CURRENT_DATE .)


state 100

    (148) current -> R_CURRENT_TIME .

    O_SUMA          reduce using rule 148 (current -> R_CURRENT_TIME .)
    O_RESTA         reduce using rule 148 (current -> R_CURRENT_TIME .)
    O_PRODUCTO      reduce using rule 148 (current -> R_CURRENT_TIME .)
    O_DIVISION      reduce using rule 148 (current -> R_CURRENT_TIME .)
    O_EXPONENTE     reduce using rule 148 (current -> R_CURRENT_TIME .)
    O_MODULAR       reduce using rule 148 (current -> R_CURRENT_TIME .)
    OC_CONCATENAR   reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_IN            reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_NOT           reduce using rule 148 (current -> R_CURRENT_TIME .)
    OL_MENORQUE     reduce using rule 148 (current -> R_CURRENT_TIME .)
    OL_MAYORQUE     reduce using rule 148 (current -> R_CURRENT_TIME .)
    OL_MAYORIGUALQUE reduce using rule 148 (current -> R_CURRENT_TIME .)
    OL_MENORIGUALQUE reduce using rule 148 (current -> R_CURRENT_TIME .)
    S_IGUAL         reduce using rule 148 (current -> R_CURRENT_TIME .)
    OL_DISTINTODE   reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_IS            reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_BETWEEN       reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_ISNULL        reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_NOTNULL       reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_AS            reduce using rule 148 (current -> R_CURRENT_TIME .)
    ID              reduce using rule 148 (current -> R_CURRENT_TIME .)
    STRING          reduce using rule 148 (current -> R_CURRENT_TIME .)
    CHARACTER       reduce using rule 148 (current -> R_CURRENT_TIME .)
    S_COMA          reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_FROM          reduce using rule 148 (current -> R_CURRENT_TIME .)
    S_PUNTOCOMA     reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_UNION         reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_INTERSECT     reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_EXCEPT        reduce using rule 148 (current -> R_CURRENT_TIME .)
    S_PARDER        reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_AND           reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_OR            reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_GROUP         reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_LIMIT         reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_ORDER         reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_THEN          reduce using rule 148 (current -> R_CURRENT_TIME .)
    R_WHERE         reduce using rule 148 (current -> R_CURRENT_TIME .)


state 101

    (204) boolean -> R_EXISTS . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 188


state 102

    (207) boolean -> expComp .

    R_AND           reduce using rule 207 (boolean -> expComp .)
    R_OR            reduce using rule 207 (boolean -> expComp .)
    R_IS            reduce using rule 207 (boolean -> expComp .)
    R_AS            reduce using rule 207 (boolean -> expComp .)
    ID              reduce using rule 207 (boolean -> expComp .)
    STRING          reduce using rule 207 (boolean -> expComp .)
    CHARACTER       reduce using rule 207 (boolean -> expComp .)
    S_COMA          reduce using rule 207 (boolean -> expComp .)
    R_FROM          reduce using rule 207 (boolean -> expComp .)
    S_PUNTOCOMA     reduce using rule 207 (boolean -> expComp .)
    R_UNION         reduce using rule 207 (boolean -> expComp .)
    R_INTERSECT     reduce using rule 207 (boolean -> expComp .)
    R_EXCEPT        reduce using rule 207 (boolean -> expComp .)
    S_PARDER        reduce using rule 207 (boolean -> expComp .)
    R_GROUP         reduce using rule 207 (boolean -> expComp .)
    R_LIMIT         reduce using rule 207 (boolean -> expComp .)
    R_ORDER         reduce using rule 207 (boolean -> expComp .)
    R_THEN          reduce using rule 207 (boolean -> expComp .)


state 103

    (133) timeStamp -> R_TIMESTAMP . STRING

    STRING          shift and go to state 189


state 104

    (134) timeStamp -> R_INTERVAL . STRING

    STRING          shift and go to state 190


state 105

    (274) selectStmt -> selectStmt R_UNION allOpt . selectStmt
    (272) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (274) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (275) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (276) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (277) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (279) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 191

state 106

    (280) allOpt -> R_ALL .

    R_SELECT        reduce using rule 280 (allOpt -> R_ALL .)
    S_PARIZQ        reduce using rule 280 (allOpt -> R_ALL .)


state 107

    (275) selectStmt -> selectStmt R_INTERSECT allOpt . selectStmt
    (272) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (274) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (275) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (276) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (277) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (279) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 192

state 108

    (276) selectStmt -> selectStmt R_EXCEPT allOpt . selectStmt
    (272) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (274) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (275) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (276) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (277) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (279) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 193

state 109

    (19) createOpts -> R_TABLE ifNotExists . idOrString S_PARIZQ createTableList S_PARDER inheritsOpt
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 194

state 110

    (50) ifNotExists -> R_IF . R_NOT R_EXISTS

    R_NOT           shift and go to state 195


state 111

    (20) createOpts -> orReplace R_DATABASE . ifNotExists idOrString createOwner createMode
    (50) ifNotExists -> . R_IF R_NOT R_EXISTS
    (51) ifNotExists -> .

    R_IF            shift and go to state 110
    ID              reduce using rule 51 (ifNotExists -> .)
    STRING          reduce using rule 51 (ifNotExists -> .)
    CHARACTER       reduce using rule 51 (ifNotExists -> .)

    ifNotExists                    shift and go to state 196

state 112

    (21) createOpts -> indexUnique R_INDEX . indexName R_ON ID usingMethod S_PARIZQ indexList S_PARDER whereCl
    (22) indexName -> . ID
    (23) indexName -> .

    ID              shift and go to state 198
    R_ON            reduce using rule 23 (indexName -> .)

    indexName                      shift and go to state 197

state 113

    (49) createOpts -> R_TYPE ifNotExists . ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    ID              shift and go to state 199


state 114

    (47) orReplace -> R_OR R_REPLACE .

    R_DATABASE      reduce using rule 47 (orReplace -> R_OR R_REPLACE .)


state 115

    (335) showStmt -> R_SHOW R_DATABASES likeOpt .

    S_PUNTOCOMA     reduce using rule 335 (showStmt -> R_SHOW R_DATABASES likeOpt .)


state 116

    (336) likeOpt -> R_LIKE . STRING

    STRING          shift and go to state 200


state 117

    (237) alterStmt -> R_ALTER R_DATABASE idOrString . alterDb
    (245) alterDb -> . R_RENAME R_TO idOrString
    (246) alterDb -> . R_OWNER R_TO ownerOPts

    R_RENAME        shift and go to state 202
    R_OWNER         shift and go to state 203

    alterDb                        shift and go to state 201

state 118

    (14) idOrString -> ID .

    R_RENAME        reduce using rule 14 (idOrString -> ID .)
    R_OWNER         reduce using rule 14 (idOrString -> ID .)
    R_ADD           reduce using rule 14 (idOrString -> ID .)
    R_ALTER         reduce using rule 14 (idOrString -> ID .)
    R_DROP          reduce using rule 14 (idOrString -> ID .)
    R_SET           reduce using rule 14 (idOrString -> ID .)
    S_COMA          reduce using rule 14 (idOrString -> ID .)
    R_WHERE         reduce using rule 14 (idOrString -> ID .)
    S_PUNTOCOMA     reduce using rule 14 (idOrString -> ID .)
    R_GROUP         reduce using rule 14 (idOrString -> ID .)
    R_LIMIT         reduce using rule 14 (idOrString -> ID .)
    R_ORDER         reduce using rule 14 (idOrString -> ID .)
    R_UNION         reduce using rule 14 (idOrString -> ID .)
    R_INTERSECT     reduce using rule 14 (idOrString -> ID .)
    R_EXCEPT        reduce using rule 14 (idOrString -> ID .)
    S_PARDER        reduce using rule 14 (idOrString -> ID .)
    R_FROM          reduce using rule 14 (idOrString -> ID .)
    S_PARIZQ        reduce using rule 14 (idOrString -> ID .)
    R_MODE          reduce using rule 14 (idOrString -> ID .)
    ID              reduce using rule 14 (idOrString -> ID .)
    INTEGER         reduce using rule 14 (idOrString -> ID .)


state 119

    (15) idOrString -> STRING .

    R_RENAME        reduce using rule 15 (idOrString -> STRING .)
    R_OWNER         reduce using rule 15 (idOrString -> STRING .)
    R_ADD           reduce using rule 15 (idOrString -> STRING .)
    R_ALTER         reduce using rule 15 (idOrString -> STRING .)
    R_DROP          reduce using rule 15 (idOrString -> STRING .)
    R_SET           reduce using rule 15 (idOrString -> STRING .)
    S_COMA          reduce using rule 15 (idOrString -> STRING .)
    R_WHERE         reduce using rule 15 (idOrString -> STRING .)
    S_PUNTOCOMA     reduce using rule 15 (idOrString -> STRING .)
    R_GROUP         reduce using rule 15 (idOrString -> STRING .)
    R_LIMIT         reduce using rule 15 (idOrString -> STRING .)
    R_ORDER         reduce using rule 15 (idOrString -> STRING .)
    R_UNION         reduce using rule 15 (idOrString -> STRING .)
    R_INTERSECT     reduce using rule 15 (idOrString -> STRING .)
    R_EXCEPT        reduce using rule 15 (idOrString -> STRING .)
    S_PARDER        reduce using rule 15 (idOrString -> STRING .)
    R_FROM          reduce using rule 15 (idOrString -> STRING .)
    S_PARIZQ        reduce using rule 15 (idOrString -> STRING .)
    R_MODE          reduce using rule 15 (idOrString -> STRING .)
    ID              reduce using rule 15 (idOrString -> STRING .)
    INTEGER         reduce using rule 15 (idOrString -> STRING .)


state 120

    (16) idOrString -> CHARACTER .

    R_RENAME        reduce using rule 16 (idOrString -> CHARACTER .)
    R_OWNER         reduce using rule 16 (idOrString -> CHARACTER .)
    R_ADD           reduce using rule 16 (idOrString -> CHARACTER .)
    R_ALTER         reduce using rule 16 (idOrString -> CHARACTER .)
    R_DROP          reduce using rule 16 (idOrString -> CHARACTER .)
    R_SET           reduce using rule 16 (idOrString -> CHARACTER .)
    S_COMA          reduce using rule 16 (idOrString -> CHARACTER .)
    R_WHERE         reduce using rule 16 (idOrString -> CHARACTER .)
    S_PUNTOCOMA     reduce using rule 16 (idOrString -> CHARACTER .)
    R_GROUP         reduce using rule 16 (idOrString -> CHARACTER .)
    R_LIMIT         reduce using rule 16 (idOrString -> CHARACTER .)
    R_ORDER         reduce using rule 16 (idOrString -> CHARACTER .)
    R_UNION         reduce using rule 16 (idOrString -> CHARACTER .)
    R_INTERSECT     reduce using rule 16 (idOrString -> CHARACTER .)
    R_EXCEPT        reduce using rule 16 (idOrString -> CHARACTER .)
    S_PARDER        reduce using rule 16 (idOrString -> CHARACTER .)
    R_FROM          reduce using rule 16 (idOrString -> CHARACTER .)
    S_PARIZQ        reduce using rule 16 (idOrString -> CHARACTER .)
    R_MODE          reduce using rule 16 (idOrString -> CHARACTER .)
    ID              reduce using rule 16 (idOrString -> CHARACTER .)
    INTEGER         reduce using rule 16 (idOrString -> CHARACTER .)


state 121

    (238) alterStmt -> R_ALTER R_TABLE idOrString . alterTableList
    (250) alterTableList -> . alterTableList S_COMA alterTable
    (251) alterTableList -> . alterTable
    (252) alterTable -> . R_ADD alterAdd
    (253) alterTable -> . R_ALTER alterAlter
    (254) alterTable -> . R_DROP alterDrop
    (255) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 207
    R_ALTER         shift and go to state 204
    R_DROP          shift and go to state 208
    R_RENAME        shift and go to state 209

    alterTableList                 shift and go to state 205
    alterTable                     shift and go to state 206

state 122

    (239) alterStmt -> R_ALTER R_INDEX ifExists . idOrString R_RENAME R_TO idOrString
    (240) alterStmt -> R_ALTER R_INDEX ifExists . idOrString R_ALTER column idOrString idOrNumber
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 210

state 123

    (270) ifExists -> R_IF . R_EXISTS

    R_EXISTS        shift and go to state 211


state 124

    (267) dropStmt -> R_DROP R_TABLE ifExists . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 212

state 125

    (268) dropStmt -> R_DROP R_DATABASE ifExists . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 213

state 126

    (269) dropStmt -> R_DROP R_INDEX ifExists . idList
    (77) idList -> . idList S_COMA ID
    (78) idList -> . ID

    ID              shift and go to state 215

    idList                         shift and go to state 214

state 127

    (322) insertStmt -> R_INSERT R_INTO ID . paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER
    (323) paramsColumn -> . S_PARIZQ idList S_PARDER
    (324) paramsColumn -> .

    S_PARIZQ        shift and go to state 217
    R_VALUES        reduce using rule 324 (paramsColumn -> .)

    paramsColumn                   shift and go to state 216

state 128

    (277) selectStmt -> S_PARIZQ selectStmt S_PARDER .

    S_PUNTOCOMA     reduce using rule 277 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 277 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 277 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 277 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 277 (selectStmt -> S_PARIZQ selectStmt S_PARDER .)


state 129

    (325) updateStmt -> R_UPDATE fromBody R_SET . updateCols whereCl
    (326) updateCols -> . updateCols S_COMA updateVals
    (327) updateCols -> . updateVals
    (328) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 220

    updateCols                     shift and go to state 218
    updateVals                     shift and go to state 219

state 130

    (293) fromBody -> ID optAlias .

    R_SET           reduce using rule 293 (fromBody -> ID optAlias .)
    S_COMA          reduce using rule 293 (fromBody -> ID optAlias .)
    R_WHERE         reduce using rule 293 (fromBody -> ID optAlias .)
    S_PUNTOCOMA     reduce using rule 293 (fromBody -> ID optAlias .)
    R_GROUP         reduce using rule 293 (fromBody -> ID optAlias .)
    R_LIMIT         reduce using rule 293 (fromBody -> ID optAlias .)
    R_ORDER         reduce using rule 293 (fromBody -> ID optAlias .)
    R_UNION         reduce using rule 293 (fromBody -> ID optAlias .)
    R_INTERSECT     reduce using rule 293 (fromBody -> ID optAlias .)
    R_EXCEPT        reduce using rule 293 (fromBody -> ID optAlias .)
    S_PARDER        reduce using rule 293 (fromBody -> ID optAlias .)


state 131

    (288) optAlias -> R_AS . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 221

state 132

    (289) optAlias -> idOrString .

    R_SET           reduce using rule 289 (optAlias -> idOrString .)
    S_COMA          reduce using rule 289 (optAlias -> idOrString .)
    R_WHERE         reduce using rule 289 (optAlias -> idOrString .)
    S_PUNTOCOMA     reduce using rule 289 (optAlias -> idOrString .)
    R_GROUP         reduce using rule 289 (optAlias -> idOrString .)
    R_LIMIT         reduce using rule 289 (optAlias -> idOrString .)
    R_ORDER         reduce using rule 289 (optAlias -> idOrString .)
    R_UNION         reduce using rule 289 (optAlias -> idOrString .)
    R_INTERSECT     reduce using rule 289 (optAlias -> idOrString .)
    R_EXCEPT        reduce using rule 289 (optAlias -> idOrString .)
    S_PARDER        reduce using rule 289 (optAlias -> idOrString .)
    R_FROM          reduce using rule 289 (optAlias -> idOrString .)


state 133

    (294) fromBody -> S_PARIZQ selectStmt . S_PARDER R_AS idOrString
    (274) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (275) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (276) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 222
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 134

    (331) deleteStmt -> R_DELETE fromCl whereCl .

    S_PUNTOCOMA     reduce using rule 331 (deleteStmt -> R_DELETE fromCl whereCl .)


state 135

    (295) whereCl -> R_WHERE . expBool
    (208) expBool -> . expBool R_AND expBool
    (209) expBool -> . expBool R_OR expBool
    (210) expBool -> . R_NOT expBool
    (211) expBool -> . S_PARIZQ expBool S_PARDER
    (212) expBool -> . expBool optBoolPredicate
    (213) expBool -> . boolean
    (204) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (205) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . expComp
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (183) expComp -> . datatype OL_MENORQUE datatype
    (184) expComp -> . datatype OL_MAYORQUE datatype
    (185) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (186) expComp -> . datatype OL_MENORIGUALQUE datatype
    (187) expComp -> . datatype S_IGUAL datatype
    (188) expComp -> . datatype OL_DISTINTODE datatype
    (189) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (192) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> . datatype R_ISNULL
    (195) expComp -> . datatype R_NOTNULL
    (196) expComp -> . datatype R_IS R_NULL
    (197) expComp -> . datatype R_IS R_TRUE
    (198) expComp -> . datatype R_IS R_FALSE
    (199) expComp -> . datatype R_IS R_UNKNOWN
    (200) expComp -> . datatype R_IS R_NOT R_NULL
    (201) expComp -> . datatype R_IS R_NOT R_TRUE
    (202) expComp -> . datatype R_IS R_NOT R_FALSE
    (203) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 83
    S_PARIZQ        shift and go to state 180
    R_EXISTS        shift and go to state 101
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 223
    boolean                        shift and go to state 84
    datatype                       shift and go to state 181
    expComp                        shift and go to state 102
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 136

    (278) fromCl -> R_FROM tableExp .
    (291) tableExp -> tableExp . S_COMA fromBody

    R_WHERE         reduce using rule 278 (fromCl -> R_FROM tableExp .)
    S_PUNTOCOMA     reduce using rule 278 (fromCl -> R_FROM tableExp .)
    R_GROUP         reduce using rule 278 (fromCl -> R_FROM tableExp .)
    R_LIMIT         reduce using rule 278 (fromCl -> R_FROM tableExp .)
    R_ORDER         reduce using rule 278 (fromCl -> R_FROM tableExp .)
    R_UNION         reduce using rule 278 (fromCl -> R_FROM tableExp .)
    R_INTERSECT     reduce using rule 278 (fromCl -> R_FROM tableExp .)
    R_EXCEPT        reduce using rule 278 (fromCl -> R_FROM tableExp .)
    S_PARDER        reduce using rule 278 (fromCl -> R_FROM tableExp .)
    S_COMA          shift and go to state 224


state 137

    (292) tableExp -> fromBody .

    S_COMA          reduce using rule 292 (tableExp -> fromBody .)
    R_WHERE         reduce using rule 292 (tableExp -> fromBody .)
    S_PUNTOCOMA     reduce using rule 292 (tableExp -> fromBody .)
    R_GROUP         reduce using rule 292 (tableExp -> fromBody .)
    R_LIMIT         reduce using rule 292 (tableExp -> fromBody .)
    R_ORDER         reduce using rule 292 (tableExp -> fromBody .)
    R_UNION         reduce using rule 292 (tableExp -> fromBody .)
    R_INTERSECT     reduce using rule 292 (tableExp -> fromBody .)
    R_EXCEPT        reduce using rule 292 (tableExp -> fromBody .)
    S_PARDER        reduce using rule 292 (tableExp -> fromBody .)


state 138

    (332) truncateStmt -> R_TRUNCATE tableOpt ID .

    S_PUNTOCOMA     reduce using rule 332 (truncateStmt -> R_TRUNCATE tableOpt ID .)


state 139

    (272) selectStmt -> R_SELECT R_DISTINCT selectParams . fromCl whereCl groupByCl limitCl orderByCl
    (278) fromCl -> . R_FROM tableExp

    R_FROM          shift and go to state 60

    fromCl                         shift and go to state 225

state 140

    (273) selectStmt -> R_SELECT selectParams fromCl . whereCl groupByCl limitCl orderByCl
    (295) whereCl -> . R_WHERE expBool
    (296) whereCl -> .

    R_WHERE         shift and go to state 135
    R_GROUP         reduce using rule 296 (whereCl -> .)
    R_LIMIT         reduce using rule 296 (whereCl -> .)
    R_ORDER         reduce using rule 296 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 296 (whereCl -> .)
    R_UNION         reduce using rule 296 (whereCl -> .)
    R_INTERSECT     reduce using rule 296 (whereCl -> .)
    R_EXCEPT        reduce using rule 296 (whereCl -> .)
    S_PARDER        reduce using rule 296 (whereCl -> .)

    whereCl                        shift and go to state 226

state 141

    (284) selectList -> selectList S_COMA . selectListParams optAlias
    (286) selectListParams -> . expresion
    (287) selectListParams -> . ID S_PUNTO O_PRODUCTO
    (121) expresion -> . datatype
    (122) expresion -> . expBool
    (123) expresion -> . S_PARIZQ selectStmt S_PARDER
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (208) expBool -> . expBool R_AND expBool
    (209) expBool -> . expBool R_OR expBool
    (210) expBool -> . R_NOT expBool
    (211) expBool -> . S_PARIZQ expBool S_PARDER
    (212) expBool -> . expBool optBoolPredicate
    (213) expBool -> . boolean
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (204) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (205) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . expComp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING
    (183) expComp -> . datatype OL_MENORQUE datatype
    (184) expComp -> . datatype OL_MAYORQUE datatype
    (185) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (186) expComp -> . datatype OL_MENORIGUALQUE datatype
    (187) expComp -> . datatype S_IGUAL datatype
    (188) expComp -> . datatype OL_DISTINTODE datatype
    (189) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (192) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> . datatype R_ISNULL
    (195) expComp -> . datatype R_NOTNULL
    (196) expComp -> . datatype R_IS R_NULL
    (197) expComp -> . datatype R_IS R_TRUE
    (198) expComp -> . datatype R_IS R_FALSE
    (199) expComp -> . datatype R_IS R_UNKNOWN
    (200) expComp -> . datatype R_IS R_NOT R_NULL
    (201) expComp -> . datatype R_IS R_NOT R_TRUE
    (202) expComp -> . datatype R_IS R_NOT R_FALSE
    (203) expComp -> . datatype R_IS R_NOT R_UNKNOWN

    ID              shift and go to state 70
    S_PARIZQ        shift and go to state 73
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    R_NOT           shift and go to state 83
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_EXISTS        shift and go to state 101
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    selectListParams               shift and go to state 227
    expresion                      shift and go to state 69
    datatype                       shift and go to state 71
    expBool                        shift and go to state 72
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    boolean                        shift and go to state 84
    timeStamp                      shift and go to state 97
    expComp                        shift and go to state 102

state 142

    (285) selectList -> selectListParams optAlias .

    S_COMA          reduce using rule 285 (selectList -> selectListParams optAlias .)
    R_FROM          reduce using rule 285 (selectList -> selectListParams optAlias .)
    S_PUNTOCOMA     reduce using rule 285 (selectList -> selectListParams optAlias .)
    R_UNION         reduce using rule 285 (selectList -> selectListParams optAlias .)
    R_INTERSECT     reduce using rule 285 (selectList -> selectListParams optAlias .)
    R_EXCEPT        reduce using rule 285 (selectList -> selectListParams optAlias .)
    S_PARDER        reduce using rule 285 (selectList -> selectListParams optAlias .)


state 143

    (287) selectListParams -> ID S_PUNTO . O_PRODUCTO
    (221) columnName -> ID S_PUNTO . ID

    O_PRODUCTO      shift and go to state 229
    ID              shift and go to state 228


state 144

    (124) funcCall -> ID S_PARIZQ . paramsList S_PARDER
    (125) funcCall -> ID S_PARIZQ . S_PARDER
    (159) paramsList -> . paramsList S_COMA datatype
    (160) paramsList -> . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    S_PARDER        shift and go to state 231
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    paramsList                     shift and go to state 230
    datatype                       shift and go to state 232
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 145

    (161) datatype -> datatype O_SUMA . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 233
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 146

    (162) datatype -> datatype O_RESTA . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 234
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 147

    (163) datatype -> datatype O_PRODUCTO . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 235
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 148

    (164) datatype -> datatype O_DIVISION . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 236
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 149

    (165) datatype -> datatype O_EXPONENTE . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 237
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 150

    (166) datatype -> datatype O_MODULAR . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 238
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 151

    (167) datatype -> datatype OC_CONCATENAR . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 239
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 152

    (205) boolean -> datatype R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 240


state 153

    (206) boolean -> datatype R_NOT . R_IN S_PARIZQ selectStmt S_PARDER
    (192) expComp -> datatype R_NOT . R_BETWEEN datatype R_AND datatype

    R_IN            shift and go to state 241
    R_BETWEEN       shift and go to state 242


state 154

    (183) expComp -> datatype OL_MENORQUE . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 243
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 155

    (184) expComp -> datatype OL_MAYORQUE . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 244
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 156

    (185) expComp -> datatype OL_MAYORIGUALQUE . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 245
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 157

    (186) expComp -> datatype OL_MENORIGUALQUE . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 246
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 158

    (187) expComp -> datatype S_IGUAL . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 247
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 159

    (188) expComp -> datatype OL_DISTINTODE . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 248
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 160

    (189) expComp -> datatype R_IS . R_DISTINCT R_FROM datatype
    (190) expComp -> datatype R_IS . R_NOT R_DISTINCT R_FROM datatype
    (196) expComp -> datatype R_IS . R_NULL
    (197) expComp -> datatype R_IS . R_TRUE
    (198) expComp -> datatype R_IS . R_FALSE
    (199) expComp -> datatype R_IS . R_UNKNOWN
    (200) expComp -> datatype R_IS . R_NOT R_NULL
    (201) expComp -> datatype R_IS . R_NOT R_TRUE
    (202) expComp -> datatype R_IS . R_NOT R_FALSE
    (203) expComp -> datatype R_IS . R_NOT R_UNKNOWN

    R_DISTINCT      shift and go to state 249
    R_NOT           shift and go to state 250
    R_NULL          shift and go to state 251
    R_TRUE          shift and go to state 252
    R_FALSE         shift and go to state 253
    R_UNKNOWN       shift and go to state 254


state 161

    (191) expComp -> datatype R_BETWEEN . datatype R_AND datatype
    (193) expComp -> datatype R_BETWEEN . R_SYMMETRIC datatype R_AND datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_SYMMETRIC     shift and go to state 256
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 255
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 162

    (194) expComp -> datatype R_ISNULL .

    R_AND           reduce using rule 194 (expComp -> datatype R_ISNULL .)
    R_OR            reduce using rule 194 (expComp -> datatype R_ISNULL .)
    R_IS            reduce using rule 194 (expComp -> datatype R_ISNULL .)
    R_AS            reduce using rule 194 (expComp -> datatype R_ISNULL .)
    ID              reduce using rule 194 (expComp -> datatype R_ISNULL .)
    STRING          reduce using rule 194 (expComp -> datatype R_ISNULL .)
    CHARACTER       reduce using rule 194 (expComp -> datatype R_ISNULL .)
    S_COMA          reduce using rule 194 (expComp -> datatype R_ISNULL .)
    R_FROM          reduce using rule 194 (expComp -> datatype R_ISNULL .)
    S_PUNTOCOMA     reduce using rule 194 (expComp -> datatype R_ISNULL .)
    R_UNION         reduce using rule 194 (expComp -> datatype R_ISNULL .)
    R_INTERSECT     reduce using rule 194 (expComp -> datatype R_ISNULL .)
    R_EXCEPT        reduce using rule 194 (expComp -> datatype R_ISNULL .)
    S_PARDER        reduce using rule 194 (expComp -> datatype R_ISNULL .)
    R_GROUP         reduce using rule 194 (expComp -> datatype R_ISNULL .)
    R_LIMIT         reduce using rule 194 (expComp -> datatype R_ISNULL .)
    R_ORDER         reduce using rule 194 (expComp -> datatype R_ISNULL .)
    R_THEN          reduce using rule 194 (expComp -> datatype R_ISNULL .)


state 163

    (195) expComp -> datatype R_NOTNULL .

    R_AND           reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    R_OR            reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    R_IS            reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    R_AS            reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    ID              reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    STRING          reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    CHARACTER       reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    S_COMA          reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    R_FROM          reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    S_PUNTOCOMA     reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    R_UNION         reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    R_INTERSECT     reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    R_EXCEPT        reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    S_PARDER        reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    R_GROUP         reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    R_LIMIT         reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    R_ORDER         reduce using rule 195 (expComp -> datatype R_NOTNULL .)
    R_THEN          reduce using rule 195 (expComp -> datatype R_NOTNULL .)


state 164

    (208) expBool -> expBool R_AND . expBool
    (208) expBool -> . expBool R_AND expBool
    (209) expBool -> . expBool R_OR expBool
    (210) expBool -> . R_NOT expBool
    (211) expBool -> . S_PARIZQ expBool S_PARDER
    (212) expBool -> . expBool optBoolPredicate
    (213) expBool -> . boolean
    (204) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (205) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . expComp
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (183) expComp -> . datatype OL_MENORQUE datatype
    (184) expComp -> . datatype OL_MAYORQUE datatype
    (185) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (186) expComp -> . datatype OL_MENORIGUALQUE datatype
    (187) expComp -> . datatype S_IGUAL datatype
    (188) expComp -> . datatype OL_DISTINTODE datatype
    (189) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (192) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> . datatype R_ISNULL
    (195) expComp -> . datatype R_NOTNULL
    (196) expComp -> . datatype R_IS R_NULL
    (197) expComp -> . datatype R_IS R_TRUE
    (198) expComp -> . datatype R_IS R_FALSE
    (199) expComp -> . datatype R_IS R_UNKNOWN
    (200) expComp -> . datatype R_IS R_NOT R_NULL
    (201) expComp -> . datatype R_IS R_NOT R_TRUE
    (202) expComp -> . datatype R_IS R_NOT R_FALSE
    (203) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 83
    S_PARIZQ        shift and go to state 180
    R_EXISTS        shift and go to state 101
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 257
    boolean                        shift and go to state 84
    datatype                       shift and go to state 181
    expComp                        shift and go to state 102
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 165

    (209) expBool -> expBool R_OR . expBool
    (208) expBool -> . expBool R_AND expBool
    (209) expBool -> . expBool R_OR expBool
    (210) expBool -> . R_NOT expBool
    (211) expBool -> . S_PARIZQ expBool S_PARDER
    (212) expBool -> . expBool optBoolPredicate
    (213) expBool -> . boolean
    (204) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (205) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . expComp
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (183) expComp -> . datatype OL_MENORQUE datatype
    (184) expComp -> . datatype OL_MAYORQUE datatype
    (185) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (186) expComp -> . datatype OL_MENORIGUALQUE datatype
    (187) expComp -> . datatype S_IGUAL datatype
    (188) expComp -> . datatype OL_DISTINTODE datatype
    (189) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (192) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> . datatype R_ISNULL
    (195) expComp -> . datatype R_NOTNULL
    (196) expComp -> . datatype R_IS R_NULL
    (197) expComp -> . datatype R_IS R_TRUE
    (198) expComp -> . datatype R_IS R_FALSE
    (199) expComp -> . datatype R_IS R_UNKNOWN
    (200) expComp -> . datatype R_IS R_NOT R_NULL
    (201) expComp -> . datatype R_IS R_NOT R_TRUE
    (202) expComp -> . datatype R_IS R_NOT R_FALSE
    (203) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 83
    S_PARIZQ        shift and go to state 180
    R_EXISTS        shift and go to state 101
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 258
    boolean                        shift and go to state 84
    datatype                       shift and go to state 181
    expComp                        shift and go to state 102
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 166

    (212) expBool -> expBool optBoolPredicate .

    R_AND           reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    R_OR            reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    R_IS            reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    R_AS            reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    ID              reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    STRING          reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    CHARACTER       reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    S_COMA          reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    R_FROM          reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    S_PUNTOCOMA     reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    R_UNION         reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    R_INTERSECT     reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    R_EXCEPT        reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    S_PARDER        reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    R_GROUP         reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    R_LIMIT         reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    R_ORDER         reduce using rule 212 (expBool -> expBool optBoolPredicate .)
    R_THEN          reduce using rule 212 (expBool -> expBool optBoolPredicate .)


state 167

    (214) optBoolPredicate -> R_IS . R_TRUE
    (215) optBoolPredicate -> R_IS . R_FALSE
    (216) optBoolPredicate -> R_IS . R_UNKNOWN
    (217) optBoolPredicate -> R_IS . R_NOT R_TRUE
    (218) optBoolPredicate -> R_IS . R_NOT R_FALSE
    (219) optBoolPredicate -> R_IS . R_NOT R_UNKNOWN

    R_TRUE          shift and go to state 259
    R_FALSE         shift and go to state 260
    R_UNKNOWN       shift and go to state 261
    R_NOT           shift and go to state 262


state 168

    (277) selectStmt -> S_PARIZQ . selectStmt S_PARDER
    (182) datatype -> S_PARIZQ . datatype S_PARDER
    (211) expBool -> S_PARIZQ . expBool S_PARDER
    (272) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (274) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (275) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (276) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (277) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (279) selectStmt -> . R_SELECT selectParams
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (208) expBool -> . expBool R_AND expBool
    (209) expBool -> . expBool R_OR expBool
    (210) expBool -> . R_NOT expBool
    (211) expBool -> . S_PARIZQ expBool S_PARDER
    (212) expBool -> . expBool optBoolPredicate
    (213) expBool -> . boolean
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (204) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (205) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . expComp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING
    (183) expComp -> . datatype OL_MENORQUE datatype
    (184) expComp -> . datatype OL_MAYORQUE datatype
    (185) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (186) expComp -> . datatype OL_MENORIGUALQUE datatype
    (187) expComp -> . datatype S_IGUAL datatype
    (188) expComp -> . datatype OL_DISTINTODE datatype
    (189) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (192) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> . datatype R_ISNULL
    (195) expComp -> . datatype R_NOTNULL
    (196) expComp -> . datatype R_IS R_NULL
    (197) expComp -> . datatype R_IS R_TRUE
    (198) expComp -> . datatype R_IS R_FALSE
    (199) expComp -> . datatype R_IS R_UNKNOWN
    (200) expComp -> . datatype R_IS R_NOT R_NULL
    (201) expComp -> . datatype R_IS R_NOT R_TRUE
    (202) expComp -> . datatype R_IS R_NOT R_FALSE
    (203) expComp -> . datatype R_IS R_NOT R_UNKNOWN

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 168
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    R_NOT           shift and go to state 83
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_EXISTS        shift and go to state 101
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    selectStmt                     shift and go to state 55
    datatype                       shift and go to state 170
    expBool                        shift and go to state 171
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    boolean                        shift and go to state 84
    timeStamp                      shift and go to state 97
    expComp                        shift and go to state 102

state 169

    (123) expresion -> S_PARIZQ selectStmt . S_PARDER
    (274) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (275) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (276) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 263
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 170

    (182) datatype -> S_PARIZQ datatype . S_PARDER
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype
    (205) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (183) expComp -> datatype . OL_MENORQUE datatype
    (184) expComp -> datatype . OL_MAYORQUE datatype
    (185) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (186) expComp -> datatype . OL_MENORIGUALQUE datatype
    (187) expComp -> datatype . S_IGUAL datatype
    (188) expComp -> datatype . OL_DISTINTODE datatype
    (189) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (192) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> datatype . R_ISNULL
    (195) expComp -> datatype . R_NOTNULL
    (196) expComp -> datatype . R_IS R_NULL
    (197) expComp -> datatype . R_IS R_TRUE
    (198) expComp -> datatype . R_IS R_FALSE
    (199) expComp -> datatype . R_IS R_UNKNOWN
    (200) expComp -> datatype . R_IS R_NOT R_NULL
    (201) expComp -> datatype . R_IS R_NOT R_TRUE
    (202) expComp -> datatype . R_IS R_NOT R_FALSE
    (203) expComp -> datatype . R_IS R_NOT R_UNKNOWN

    S_PARDER        shift and go to state 264
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151
    R_IN            shift and go to state 152
    R_NOT           shift and go to state 153
    OL_MENORQUE     shift and go to state 154
    OL_MAYORQUE     shift and go to state 155
    OL_MAYORIGUALQUE shift and go to state 156
    OL_MENORIGUALQUE shift and go to state 157
    S_IGUAL         shift and go to state 158
    OL_DISTINTODE   shift and go to state 159
    R_IS            shift and go to state 160
    R_BETWEEN       shift and go to state 161
    R_ISNULL        shift and go to state 162
    R_NOTNULL       shift and go to state 163


state 171

    (211) expBool -> S_PARIZQ expBool . S_PARDER
    (208) expBool -> expBool . R_AND expBool
    (209) expBool -> expBool . R_OR expBool
    (212) expBool -> expBool . optBoolPredicate
    (214) optBoolPredicate -> . R_IS R_TRUE
    (215) optBoolPredicate -> . R_IS R_FALSE
    (216) optBoolPredicate -> . R_IS R_UNKNOWN
    (217) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (218) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (219) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PARDER        shift and go to state 265
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

    optBoolPredicate               shift and go to state 166

state 172

    (220) columnName -> ID .
    (221) columnName -> ID . S_PUNTO ID
    (124) funcCall -> ID . S_PARIZQ paramsList S_PARDER
    (125) funcCall -> ID . S_PARIZQ S_PARDER

    S_PARDER        reduce using rule 220 (columnName -> ID .)
    O_SUMA          reduce using rule 220 (columnName -> ID .)
    O_RESTA         reduce using rule 220 (columnName -> ID .)
    O_PRODUCTO      reduce using rule 220 (columnName -> ID .)
    O_DIVISION      reduce using rule 220 (columnName -> ID .)
    O_EXPONENTE     reduce using rule 220 (columnName -> ID .)
    O_MODULAR       reduce using rule 220 (columnName -> ID .)
    OC_CONCATENAR   reduce using rule 220 (columnName -> ID .)
    R_IN            reduce using rule 220 (columnName -> ID .)
    R_NOT           reduce using rule 220 (columnName -> ID .)
    OL_MENORQUE     reduce using rule 220 (columnName -> ID .)
    OL_MAYORQUE     reduce using rule 220 (columnName -> ID .)
    OL_MAYORIGUALQUE reduce using rule 220 (columnName -> ID .)
    OL_MENORIGUALQUE reduce using rule 220 (columnName -> ID .)
    S_IGUAL         reduce using rule 220 (columnName -> ID .)
    OL_DISTINTODE   reduce using rule 220 (columnName -> ID .)
    R_IS            reduce using rule 220 (columnName -> ID .)
    R_BETWEEN       reduce using rule 220 (columnName -> ID .)
    R_ISNULL        reduce using rule 220 (columnName -> ID .)
    R_NOTNULL       reduce using rule 220 (columnName -> ID .)
    R_AS            reduce using rule 220 (columnName -> ID .)
    ID              reduce using rule 220 (columnName -> ID .)
    STRING          reduce using rule 220 (columnName -> ID .)
    CHARACTER       reduce using rule 220 (columnName -> ID .)
    S_COMA          reduce using rule 220 (columnName -> ID .)
    R_FROM          reduce using rule 220 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 220 (columnName -> ID .)
    R_UNION         reduce using rule 220 (columnName -> ID .)
    R_INTERSECT     reduce using rule 220 (columnName -> ID .)
    R_EXCEPT        reduce using rule 220 (columnName -> ID .)
    R_AND           reduce using rule 220 (columnName -> ID .)
    R_OR            reduce using rule 220 (columnName -> ID .)
    R_GROUP         reduce using rule 220 (columnName -> ID .)
    R_LIMIT         reduce using rule 220 (columnName -> ID .)
    R_ORDER         reduce using rule 220 (columnName -> ID .)
    R_THEN          reduce using rule 220 (columnName -> ID .)
    R_WHERE         reduce using rule 220 (columnName -> ID .)
    S_PUNTO         shift and go to state 266
    S_PARIZQ        shift and go to state 144


state 173

    (175) datatype -> O_SUMA datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 175 (datatype -> O_SUMA datatype .)
    O_RESTA         reduce using rule 175 (datatype -> O_SUMA datatype .)
    O_PRODUCTO      reduce using rule 175 (datatype -> O_SUMA datatype .)
    O_DIVISION      reduce using rule 175 (datatype -> O_SUMA datatype .)
    O_MODULAR       reduce using rule 175 (datatype -> O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_IN            reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_NOT           reduce using rule 175 (datatype -> O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 175 (datatype -> O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 175 (datatype -> O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 175 (datatype -> O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 175 (datatype -> O_SUMA datatype .)
    S_IGUAL         reduce using rule 175 (datatype -> O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_IS            reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_BETWEEN       reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_ISNULL        reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_NOTNULL       reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_AS            reduce using rule 175 (datatype -> O_SUMA datatype .)
    ID              reduce using rule 175 (datatype -> O_SUMA datatype .)
    STRING          reduce using rule 175 (datatype -> O_SUMA datatype .)
    CHARACTER       reduce using rule 175 (datatype -> O_SUMA datatype .)
    S_COMA          reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_FROM          reduce using rule 175 (datatype -> O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_UNION         reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_INTERSECT     reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_EXCEPT        reduce using rule 175 (datatype -> O_SUMA datatype .)
    S_PARDER        reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_AND           reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_OR            reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_GROUP         reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_LIMIT         reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_ORDER         reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_THEN          reduce using rule 175 (datatype -> O_SUMA datatype .)
    R_WHERE         reduce using rule 175 (datatype -> O_SUMA datatype .)
    O_EXPONENTE     shift and go to state 149

  ! O_EXPONENTE     [ reduce using rule 175 (datatype -> O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 145 ]
  ! O_RESTA         [ shift and go to state 146 ]
  ! O_PRODUCTO      [ shift and go to state 147 ]
  ! O_DIVISION      [ shift and go to state 148 ]
  ! O_MODULAR       [ shift and go to state 150 ]
  ! OC_CONCATENAR   [ shift and go to state 151 ]


state 174

    (182) datatype -> S_PARIZQ . datatype S_PARDER
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 267
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 175

    (174) datatype -> O_RESTA datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 174 (datatype -> O_RESTA datatype .)
    O_RESTA         reduce using rule 174 (datatype -> O_RESTA datatype .)
    O_PRODUCTO      reduce using rule 174 (datatype -> O_RESTA datatype .)
    O_DIVISION      reduce using rule 174 (datatype -> O_RESTA datatype .)
    O_MODULAR       reduce using rule 174 (datatype -> O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_IN            reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_NOT           reduce using rule 174 (datatype -> O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 174 (datatype -> O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 174 (datatype -> O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 174 (datatype -> O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 174 (datatype -> O_RESTA datatype .)
    S_IGUAL         reduce using rule 174 (datatype -> O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_IS            reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_BETWEEN       reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_ISNULL        reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_NOTNULL       reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_AS            reduce using rule 174 (datatype -> O_RESTA datatype .)
    ID              reduce using rule 174 (datatype -> O_RESTA datatype .)
    STRING          reduce using rule 174 (datatype -> O_RESTA datatype .)
    CHARACTER       reduce using rule 174 (datatype -> O_RESTA datatype .)
    S_COMA          reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_FROM          reduce using rule 174 (datatype -> O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_UNION         reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_INTERSECT     reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_EXCEPT        reduce using rule 174 (datatype -> O_RESTA datatype .)
    S_PARDER        reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_AND           reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_OR            reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_GROUP         reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_LIMIT         reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_ORDER         reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_THEN          reduce using rule 174 (datatype -> O_RESTA datatype .)
    R_WHERE         reduce using rule 174 (datatype -> O_RESTA datatype .)
    O_EXPONENTE     shift and go to state 149

  ! O_EXPONENTE     [ reduce using rule 174 (datatype -> O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 145 ]
  ! O_RESTA         [ shift and go to state 146 ]
  ! O_PRODUCTO      [ shift and go to state 147 ]
  ! O_DIVISION      [ shift and go to state 148 ]
  ! O_MODULAR       [ shift and go to state 150 ]
  ! OC_CONCATENAR   [ shift and go to state 151 ]


state 176

    (168) datatype -> R_CASE caseList . optElse R_END
    (169) caseList -> caseList . caseWhen
    (172) optElse -> . R_ELSE literal
    (173) optElse -> .
    (171) caseWhen -> . R_WHEN expBool R_THEN literal

    R_ELSE          shift and go to state 270
    R_END           reduce using rule 173 (optElse -> .)
    R_WHEN          shift and go to state 178

    optElse                        shift and go to state 268
    caseWhen                       shift and go to state 269

state 177

    (170) caseList -> caseWhen .

    R_ELSE          reduce using rule 170 (caseList -> caseWhen .)
    R_WHEN          reduce using rule 170 (caseList -> caseWhen .)
    R_END           reduce using rule 170 (caseList -> caseWhen .)


state 178

    (171) caseWhen -> R_WHEN . expBool R_THEN literal
    (208) expBool -> . expBool R_AND expBool
    (209) expBool -> . expBool R_OR expBool
    (210) expBool -> . R_NOT expBool
    (211) expBool -> . S_PARIZQ expBool S_PARDER
    (212) expBool -> . expBool optBoolPredicate
    (213) expBool -> . boolean
    (204) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (205) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . expComp
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (183) expComp -> . datatype OL_MENORQUE datatype
    (184) expComp -> . datatype OL_MAYORQUE datatype
    (185) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (186) expComp -> . datatype OL_MENORIGUALQUE datatype
    (187) expComp -> . datatype S_IGUAL datatype
    (188) expComp -> . datatype OL_DISTINTODE datatype
    (189) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (192) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> . datatype R_ISNULL
    (195) expComp -> . datatype R_NOTNULL
    (196) expComp -> . datatype R_IS R_NULL
    (197) expComp -> . datatype R_IS R_TRUE
    (198) expComp -> . datatype R_IS R_FALSE
    (199) expComp -> . datatype R_IS R_UNKNOWN
    (200) expComp -> . datatype R_IS R_NOT R_NULL
    (201) expComp -> . datatype R_IS R_NOT R_TRUE
    (202) expComp -> . datatype R_IS R_NOT R_FALSE
    (203) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 83
    S_PARIZQ        shift and go to state 180
    R_EXISTS        shift and go to state 101
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 271
    literal                        shift and go to state 78
    boolean                        shift and go to state 84
    datatype                       shift and go to state 181
    expComp                        shift and go to state 102
    columnName                     shift and go to state 77
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 179

    (210) expBool -> R_NOT expBool .
    (208) expBool -> expBool . R_AND expBool
    (209) expBool -> expBool . R_OR expBool
    (212) expBool -> expBool . optBoolPredicate
    (214) optBoolPredicate -> . R_IS R_TRUE
    (215) optBoolPredicate -> . R_IS R_FALSE
    (216) optBoolPredicate -> . R_IS R_UNKNOWN
    (217) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (218) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (219) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AS            reduce using rule 210 (expBool -> R_NOT expBool .)
    ID              reduce using rule 210 (expBool -> R_NOT expBool .)
    STRING          reduce using rule 210 (expBool -> R_NOT expBool .)
    CHARACTER       reduce using rule 210 (expBool -> R_NOT expBool .)
    S_COMA          reduce using rule 210 (expBool -> R_NOT expBool .)
    R_FROM          reduce using rule 210 (expBool -> R_NOT expBool .)
    S_PUNTOCOMA     reduce using rule 210 (expBool -> R_NOT expBool .)
    R_UNION         reduce using rule 210 (expBool -> R_NOT expBool .)
    R_INTERSECT     reduce using rule 210 (expBool -> R_NOT expBool .)
    R_EXCEPT        reduce using rule 210 (expBool -> R_NOT expBool .)
    S_PARDER        reduce using rule 210 (expBool -> R_NOT expBool .)
    R_GROUP         reduce using rule 210 (expBool -> R_NOT expBool .)
    R_LIMIT         reduce using rule 210 (expBool -> R_NOT expBool .)
    R_ORDER         reduce using rule 210 (expBool -> R_NOT expBool .)
    R_THEN          reduce using rule 210 (expBool -> R_NOT expBool .)
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

  ! R_AND           [ reduce using rule 210 (expBool -> R_NOT expBool .) ]
  ! R_OR            [ reduce using rule 210 (expBool -> R_NOT expBool .) ]
  ! R_IS            [ reduce using rule 210 (expBool -> R_NOT expBool .) ]

    optBoolPredicate               shift and go to state 166

state 180

    (211) expBool -> S_PARIZQ . expBool S_PARDER
    (182) datatype -> S_PARIZQ . datatype S_PARDER
    (208) expBool -> . expBool R_AND expBool
    (209) expBool -> . expBool R_OR expBool
    (210) expBool -> . R_NOT expBool
    (211) expBool -> . S_PARIZQ expBool S_PARDER
    (212) expBool -> . expBool optBoolPredicate
    (213) expBool -> . boolean
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (204) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (205) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . expComp
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (183) expComp -> . datatype OL_MENORQUE datatype
    (184) expComp -> . datatype OL_MAYORQUE datatype
    (185) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (186) expComp -> . datatype OL_MENORIGUALQUE datatype
    (187) expComp -> . datatype S_IGUAL datatype
    (188) expComp -> . datatype OL_DISTINTODE datatype
    (189) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (192) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> . datatype R_ISNULL
    (195) expComp -> . datatype R_NOTNULL
    (196) expComp -> . datatype R_IS R_NULL
    (197) expComp -> . datatype R_IS R_TRUE
    (198) expComp -> . datatype R_IS R_FALSE
    (199) expComp -> . datatype R_IS R_UNKNOWN
    (200) expComp -> . datatype R_IS R_NOT R_NULL
    (201) expComp -> . datatype R_IS R_NOT R_TRUE
    (202) expComp -> . datatype R_IS R_NOT R_FALSE
    (203) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 83
    S_PARIZQ        shift and go to state 180
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    R_EXISTS        shift and go to state 101
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 171
    datatype                       shift and go to state 170
    boolean                        shift and go to state 84
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    expComp                        shift and go to state 102
    timeStamp                      shift and go to state 97

state 181

    (205) boolean -> datatype . R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> datatype . R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype
    (183) expComp -> datatype . OL_MENORQUE datatype
    (184) expComp -> datatype . OL_MAYORQUE datatype
    (185) expComp -> datatype . OL_MAYORIGUALQUE datatype
    (186) expComp -> datatype . OL_MENORIGUALQUE datatype
    (187) expComp -> datatype . S_IGUAL datatype
    (188) expComp -> datatype . OL_DISTINTODE datatype
    (189) expComp -> datatype . R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> datatype . R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> datatype . R_BETWEEN datatype R_AND datatype
    (192) expComp -> datatype . R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> datatype . R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> datatype . R_ISNULL
    (195) expComp -> datatype . R_NOTNULL
    (196) expComp -> datatype . R_IS R_NULL
    (197) expComp -> datatype . R_IS R_TRUE
    (198) expComp -> datatype . R_IS R_FALSE
    (199) expComp -> datatype . R_IS R_UNKNOWN
    (200) expComp -> datatype . R_IS R_NOT R_NULL
    (201) expComp -> datatype . R_IS R_NOT R_TRUE
    (202) expComp -> datatype . R_IS R_NOT R_FALSE
    (203) expComp -> datatype . R_IS R_NOT R_UNKNOWN

    R_IN            shift and go to state 152
    R_NOT           shift and go to state 153
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151
    OL_MENORQUE     shift and go to state 154
    OL_MAYORQUE     shift and go to state 155
    OL_MAYORIGUALQUE shift and go to state 156
    OL_MENORIGUALQUE shift and go to state 157
    S_IGUAL         shift and go to state 158
    OL_DISTINTODE   shift and go to state 159
    R_IS            shift and go to state 160
    R_BETWEEN       shift and go to state 161
    R_ISNULL        shift and go to state 162
    R_NOTNULL       shift and go to state 163


state 182

    (126) funcCall -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 272


state 183

    (127) funcCall -> R_COUNT S_PARIZQ . datatype S_PARDER
    (128) funcCall -> R_COUNT S_PARIZQ . O_PRODUCTO S_PARDER
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    O_PRODUCTO      shift and go to state 274
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 273
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 184

    (129) funcCall -> R_SUM S_PARIZQ . datatype S_PARDER
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 275
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 185

    (130) funcCall -> R_PROM S_PARIZQ . datatype S_PARDER
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 276
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 186

    (131) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> R_EXTRACT S_PARIZQ . optsExtract R_FROM columnName S_PARDER
    (135) optsExtract -> . R_YEAR
    (136) optsExtract -> . R_MONTH
    (137) optsExtract -> . R_DAY
    (138) optsExtract -> . R_HOUR
    (139) optsExtract -> . R_MINUTE
    (140) optsExtract -> . R_SECOND

    R_YEAR          shift and go to state 278
    R_MONTH         shift and go to state 279
    R_DAY           shift and go to state 280
    R_HOUR          shift and go to state 281
    R_MINUTE        shift and go to state 282
    R_SECOND        shift and go to state 283

    optsExtract                    shift and go to state 277

state 187

    (141) datePart -> R_DATE_PART S_PARIZQ . STRING S_COMA dateSource S_PARDER

    STRING          shift and go to state 284


state 188

    (204) boolean -> R_EXISTS S_PARIZQ . selectStmt S_PARDER
    (272) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (274) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (275) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (276) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (277) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (279) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 285

state 189

    (133) timeStamp -> R_TIMESTAMP STRING .

    O_SUMA          reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    O_RESTA         reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    O_PRODUCTO      reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    O_DIVISION      reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    O_EXPONENTE     reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    O_MODULAR       reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    OC_CONCATENAR   reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_IN            reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOT           reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORQUE     reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORQUE     reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MAYORIGUALQUE reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    OL_MENORIGUALQUE reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    S_IGUAL         reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    OL_DISTINTODE   reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_IS            reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_BETWEEN       reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_ISNULL        reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_NOTNULL       reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_AS            reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    ID              reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    STRING          reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    CHARACTER       reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    S_COMA          reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_FROM          reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    S_PUNTOCOMA     reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_UNION         reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_INTERSECT     reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_EXCEPT        reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    S_PARDER        reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_AND           reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_OR            reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_GROUP         reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_LIMIT         reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_ORDER         reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_THEN          reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)
    R_WHERE         reduce using rule 133 (timeStamp -> R_TIMESTAMP STRING .)


state 190

    (134) timeStamp -> R_INTERVAL STRING .

    O_SUMA          reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    O_RESTA         reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    O_PRODUCTO      reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    O_DIVISION      reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    O_EXPONENTE     reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    O_MODULAR       reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    OC_CONCATENAR   reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_IN            reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_NOT           reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORQUE     reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORQUE     reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    OL_MAYORIGUALQUE reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    OL_MENORIGUALQUE reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    S_IGUAL         reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    OL_DISTINTODE   reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_IS            reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_BETWEEN       reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_ISNULL        reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_NOTNULL       reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_AS            reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    ID              reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    STRING          reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    CHARACTER       reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    S_COMA          reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_FROM          reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    S_PUNTOCOMA     reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_UNION         reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_INTERSECT     reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_EXCEPT        reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    S_PARDER        reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_AND           reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_OR            reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_GROUP         reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_LIMIT         reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_ORDER         reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_THEN          reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)
    R_WHERE         reduce using rule 134 (timeStamp -> R_INTERVAL STRING .)


state 191

    (274) selectStmt -> selectStmt R_UNION allOpt selectStmt .
    (274) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (275) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (276) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 274 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_UNION         reduce using rule 274 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_INTERSECT     reduce using rule 274 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    R_EXCEPT        reduce using rule 274 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)
    S_PARDER        reduce using rule 274 (selectStmt -> selectStmt R_UNION allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 36 ]
  ! R_INTERSECT     [ shift and go to state 37 ]
  ! R_EXCEPT        [ shift and go to state 38 ]


state 192

    (275) selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .
    (274) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (275) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (276) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 275 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_UNION         reduce using rule 275 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_INTERSECT     reduce using rule 275 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    R_EXCEPT        reduce using rule 275 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)
    S_PARDER        reduce using rule 275 (selectStmt -> selectStmt R_INTERSECT allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 36 ]
  ! R_INTERSECT     [ shift and go to state 37 ]
  ! R_EXCEPT        [ shift and go to state 38 ]


state 193

    (276) selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .
    (274) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (275) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (276) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PUNTOCOMA     reduce using rule 276 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_UNION         reduce using rule 276 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_INTERSECT     reduce using rule 276 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    R_EXCEPT        reduce using rule 276 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)
    S_PARDER        reduce using rule 276 (selectStmt -> selectStmt R_EXCEPT allOpt selectStmt .)

  ! R_UNION         [ shift and go to state 36 ]
  ! R_INTERSECT     [ shift and go to state 37 ]
  ! R_EXCEPT        [ shift and go to state 38 ]


state 194

    (19) createOpts -> R_TABLE ifNotExists idOrString . S_PARIZQ createTableList S_PARDER inheritsOpt

    S_PARIZQ        shift and go to state 286


state 195

    (50) ifNotExists -> R_IF R_NOT . R_EXISTS

    R_EXISTS        shift and go to state 287


state 196

    (20) createOpts -> orReplace R_DATABASE ifNotExists . idOrString createOwner createMode
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 288

state 197

    (21) createOpts -> indexUnique R_INDEX indexName . R_ON ID usingMethod S_PARIZQ indexList S_PARDER whereCl

    R_ON            shift and go to state 289


state 198

    (22) indexName -> ID .

    R_ON            reduce using rule 22 (indexName -> ID .)


state 199

    (49) createOpts -> R_TYPE ifNotExists ID . R_AS R_ENUM S_PARIZQ paramsList S_PARDER

    R_AS            shift and go to state 290


state 200

    (336) likeOpt -> R_LIKE STRING .

    S_PUNTOCOMA     reduce using rule 336 (likeOpt -> R_LIKE STRING .)


state 201

    (237) alterStmt -> R_ALTER R_DATABASE idOrString alterDb .

    S_PUNTOCOMA     reduce using rule 237 (alterStmt -> R_ALTER R_DATABASE idOrString alterDb .)


state 202

    (245) alterDb -> R_RENAME . R_TO idOrString

    R_TO            shift and go to state 291


state 203

    (246) alterDb -> R_OWNER . R_TO ownerOPts

    R_TO            shift and go to state 292


state 204

    (253) alterTable -> R_ALTER . alterAlter
    (261) alterAlter -> . R_COLUMN ID R_SET nullOpt
    (262) alterAlter -> . R_COLUMN ID R_SET defaultVal
    (263) alterAlter -> . R_COLUMN ID R_TYPE types

    R_COLUMN        shift and go to state 294

    alterAlter                     shift and go to state 293

state 205

    (238) alterStmt -> R_ALTER R_TABLE idOrString alterTableList .
    (250) alterTableList -> alterTableList . S_COMA alterTable

    S_PUNTOCOMA     reduce using rule 238 (alterStmt -> R_ALTER R_TABLE idOrString alterTableList .)
    S_COMA          shift and go to state 295


state 206

    (251) alterTableList -> alterTable .

    S_COMA          reduce using rule 251 (alterTableList -> alterTable .)
    S_PUNTOCOMA     reduce using rule 251 (alterTableList -> alterTable .)


state 207

    (252) alterTable -> R_ADD . alterAdd
    (256) alterAdd -> . R_COLUMN ID types
    (257) alterAdd -> . createConstraint
    (258) alterAdd -> . createPrimary
    (259) alterAdd -> . createForeign
    (260) alterAdd -> . constrName R_UNIQUE S_PARIZQ ID S_PARDER
    (71) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (73) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (74) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (75) constrName -> . R_CONSTRAINT ID
    (76) constrName -> .

    R_COLUMN        shift and go to state 297
    R_PRIMARY       shift and go to state 302
    R_CONSTRAINT    shift and go to state 303
    R_UNIQUE        reduce using rule 76 (constrName -> .)
    R_CHECK         reduce using rule 76 (constrName -> .)
    R_FOREIGN       reduce using rule 76 (constrName -> .)

    alterAdd                       shift and go to state 296
    createConstraint               shift and go to state 298
    createPrimary                  shift and go to state 299
    createForeign                  shift and go to state 300
    constrName                     shift and go to state 301

state 208

    (254) alterTable -> R_DROP . alterDrop
    (264) alterDrop -> . R_CONSTRAINT ID
    (265) alterDrop -> . R_COLUMN ID

    R_CONSTRAINT    shift and go to state 305
    R_COLUMN        shift and go to state 306

    alterDrop                      shift and go to state 304

state 209

    (255) alterTable -> R_RENAME . alterRename
    (266) alterRename -> . R_COLUMN ID R_TO ID

    R_COLUMN        shift and go to state 308

    alterRename                    shift and go to state 307

state 210

    (239) alterStmt -> R_ALTER R_INDEX ifExists idOrString . R_RENAME R_TO idOrString
    (240) alterStmt -> R_ALTER R_INDEX ifExists idOrString . R_ALTER column idOrString idOrNumber

    R_RENAME        shift and go to state 310
    R_ALTER         shift and go to state 309


state 211

    (270) ifExists -> R_IF R_EXISTS .

    ID              reduce using rule 270 (ifExists -> R_IF R_EXISTS .)
    STRING          reduce using rule 270 (ifExists -> R_IF R_EXISTS .)
    CHARACTER       reduce using rule 270 (ifExists -> R_IF R_EXISTS .)


state 212

    (267) dropStmt -> R_DROP R_TABLE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 267 (dropStmt -> R_DROP R_TABLE ifExists idOrString .)


state 213

    (268) dropStmt -> R_DROP R_DATABASE ifExists idOrString .

    S_PUNTOCOMA     reduce using rule 268 (dropStmt -> R_DROP R_DATABASE ifExists idOrString .)


state 214

    (269) dropStmt -> R_DROP R_INDEX ifExists idList .
    (77) idList -> idList . S_COMA ID

    S_PUNTOCOMA     reduce using rule 269 (dropStmt -> R_DROP R_INDEX ifExists idList .)
    S_COMA          shift and go to state 311


state 215

    (78) idList -> ID .

    S_COMA          reduce using rule 78 (idList -> ID .)
    S_PUNTOCOMA     reduce using rule 78 (idList -> ID .)
    S_PARDER        reduce using rule 78 (idList -> ID .)


state 216

    (322) insertStmt -> R_INSERT R_INTO ID paramsColumn . R_VALUES S_PARIZQ paramsList S_PARDER

    R_VALUES        shift and go to state 312


state 217

    (323) paramsColumn -> S_PARIZQ . idList S_PARDER
    (77) idList -> . idList S_COMA ID
    (78) idList -> . ID

    ID              shift and go to state 215

    idList                         shift and go to state 313

state 218

    (325) updateStmt -> R_UPDATE fromBody R_SET updateCols . whereCl
    (326) updateCols -> updateCols . S_COMA updateVals
    (295) whereCl -> . R_WHERE expBool
    (296) whereCl -> .

    S_COMA          shift and go to state 315
    R_WHERE         shift and go to state 135
    S_PUNTOCOMA     reduce using rule 296 (whereCl -> .)

    whereCl                        shift and go to state 314

state 219

    (327) updateCols -> updateVals .

    S_COMA          reduce using rule 327 (updateCols -> updateVals .)
    R_WHERE         reduce using rule 327 (updateCols -> updateVals .)
    S_PUNTOCOMA     reduce using rule 327 (updateCols -> updateVals .)


state 220

    (328) updateVals -> ID . S_IGUAL updateExp

    S_IGUAL         shift and go to state 316


state 221

    (288) optAlias -> R_AS idOrString .

    R_SET           reduce using rule 288 (optAlias -> R_AS idOrString .)
    S_COMA          reduce using rule 288 (optAlias -> R_AS idOrString .)
    R_WHERE         reduce using rule 288 (optAlias -> R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 288 (optAlias -> R_AS idOrString .)
    R_GROUP         reduce using rule 288 (optAlias -> R_AS idOrString .)
    R_LIMIT         reduce using rule 288 (optAlias -> R_AS idOrString .)
    R_ORDER         reduce using rule 288 (optAlias -> R_AS idOrString .)
    R_UNION         reduce using rule 288 (optAlias -> R_AS idOrString .)
    R_INTERSECT     reduce using rule 288 (optAlias -> R_AS idOrString .)
    R_EXCEPT        reduce using rule 288 (optAlias -> R_AS idOrString .)
    S_PARDER        reduce using rule 288 (optAlias -> R_AS idOrString .)
    R_FROM          reduce using rule 288 (optAlias -> R_AS idOrString .)


state 222

    (294) fromBody -> S_PARIZQ selectStmt S_PARDER . R_AS idOrString

    R_AS            shift and go to state 317


state 223

    (295) whereCl -> R_WHERE expBool .
    (208) expBool -> expBool . R_AND expBool
    (209) expBool -> expBool . R_OR expBool
    (212) expBool -> expBool . optBoolPredicate
    (214) optBoolPredicate -> . R_IS R_TRUE
    (215) optBoolPredicate -> . R_IS R_FALSE
    (216) optBoolPredicate -> . R_IS R_UNKNOWN
    (217) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (218) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (219) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    S_PUNTOCOMA     reduce using rule 295 (whereCl -> R_WHERE expBool .)
    R_GROUP         reduce using rule 295 (whereCl -> R_WHERE expBool .)
    R_LIMIT         reduce using rule 295 (whereCl -> R_WHERE expBool .)
    R_ORDER         reduce using rule 295 (whereCl -> R_WHERE expBool .)
    R_UNION         reduce using rule 295 (whereCl -> R_WHERE expBool .)
    R_INTERSECT     reduce using rule 295 (whereCl -> R_WHERE expBool .)
    R_EXCEPT        reduce using rule 295 (whereCl -> R_WHERE expBool .)
    S_PARDER        reduce using rule 295 (whereCl -> R_WHERE expBool .)
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

    optBoolPredicate               shift and go to state 166

state 224

    (291) tableExp -> tableExp S_COMA . fromBody
    (293) fromBody -> . ID optAlias
    (294) fromBody -> . S_PARIZQ selectStmt S_PARDER R_AS idOrString

    ID              shift and go to state 57
    S_PARIZQ        shift and go to state 58

    fromBody                       shift and go to state 318

state 225

    (272) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl . whereCl groupByCl limitCl orderByCl
    (295) whereCl -> . R_WHERE expBool
    (296) whereCl -> .

    R_WHERE         shift and go to state 135
    R_GROUP         reduce using rule 296 (whereCl -> .)
    R_LIMIT         reduce using rule 296 (whereCl -> .)
    R_ORDER         reduce using rule 296 (whereCl -> .)
    S_PUNTOCOMA     reduce using rule 296 (whereCl -> .)
    R_UNION         reduce using rule 296 (whereCl -> .)
    R_INTERSECT     reduce using rule 296 (whereCl -> .)
    R_EXCEPT        reduce using rule 296 (whereCl -> .)
    S_PARDER        reduce using rule 296 (whereCl -> .)

    whereCl                        shift and go to state 319

state 226

    (273) selectStmt -> R_SELECT selectParams fromCl whereCl . groupByCl limitCl orderByCl
    (297) groupByCl -> . R_GROUP R_BY groupList havingCl
    (298) groupByCl -> .

    R_GROUP         shift and go to state 321
    R_LIMIT         reduce using rule 298 (groupByCl -> .)
    R_ORDER         reduce using rule 298 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 298 (groupByCl -> .)
    R_UNION         reduce using rule 298 (groupByCl -> .)
    R_INTERSECT     reduce using rule 298 (groupByCl -> .)
    R_EXCEPT        reduce using rule 298 (groupByCl -> .)
    S_PARDER        reduce using rule 298 (groupByCl -> .)

    groupByCl                      shift and go to state 320

state 227

    (284) selectList -> selectList S_COMA selectListParams . optAlias
    (288) optAlias -> . R_AS idOrString
    (289) optAlias -> . idOrString
    (290) optAlias -> .
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_AS            shift and go to state 131
    S_COMA          reduce using rule 290 (optAlias -> .)
    R_FROM          reduce using rule 290 (optAlias -> .)
    S_PUNTOCOMA     reduce using rule 290 (optAlias -> .)
    R_UNION         reduce using rule 290 (optAlias -> .)
    R_INTERSECT     reduce using rule 290 (optAlias -> .)
    R_EXCEPT        reduce using rule 290 (optAlias -> .)
    S_PARDER        reduce using rule 290 (optAlias -> .)
    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    optAlias                       shift and go to state 322
    idOrString                     shift and go to state 132

state 228

    (221) columnName -> ID S_PUNTO ID .

    O_SUMA          reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    O_RESTA         reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    O_PRODUCTO      reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    O_DIVISION      reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    O_EXPONENTE     reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    O_MODULAR       reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    OC_CONCATENAR   reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_IN            reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_NOT           reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    OL_MENORQUE     reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    OL_MAYORQUE     reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    OL_MAYORIGUALQUE reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    OL_MENORIGUALQUE reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    S_IGUAL         reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    OL_DISTINTODE   reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_IS            reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_BETWEEN       reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_ISNULL        reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_NOTNULL       reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_AS            reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    ID              reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    STRING          reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    CHARACTER       reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    S_COMA          reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_FROM          reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    S_PUNTOCOMA     reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_UNION         reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_INTERSECT     reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_EXCEPT        reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    S_PARDER        reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_AND           reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_OR            reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_GROUP         reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_LIMIT         reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_ORDER         reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_THEN          reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_WHERE         reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_HAVING        reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_ASC           reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_DESC          reduce using rule 221 (columnName -> ID S_PUNTO ID .)
    R_NULLS         reduce using rule 221 (columnName -> ID S_PUNTO ID .)


state 229

    (287) selectListParams -> ID S_PUNTO O_PRODUCTO .

    R_AS            reduce using rule 287 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    ID              reduce using rule 287 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    STRING          reduce using rule 287 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    CHARACTER       reduce using rule 287 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_COMA          reduce using rule 287 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_FROM          reduce using rule 287 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_PUNTOCOMA     reduce using rule 287 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_UNION         reduce using rule 287 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_INTERSECT     reduce using rule 287 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    R_EXCEPT        reduce using rule 287 (selectListParams -> ID S_PUNTO O_PRODUCTO .)
    S_PARDER        reduce using rule 287 (selectListParams -> ID S_PUNTO O_PRODUCTO .)


state 230

    (124) funcCall -> ID S_PARIZQ paramsList . S_PARDER
    (159) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 323
    S_COMA          shift and go to state 324


state 231

    (125) funcCall -> ID S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    ID              reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    STRING          reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 125 (funcCall -> ID S_PARIZQ S_PARDER .)


state 232

    (160) paramsList -> datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 160 (paramsList -> datatype .)
    S_COMA          reduce using rule 160 (paramsList -> datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 233

    (161) datatype -> datatype O_SUMA datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    O_RESTA         reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    OC_CONCATENAR   reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_IN            reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_NOT           reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    OL_MENORQUE     reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORQUE     reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    OL_MAYORIGUALQUE reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    OL_MENORIGUALQUE reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    S_IGUAL         reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    OL_DISTINTODE   reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_IS            reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_BETWEEN       reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_ISNULL        reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_NOTNULL       reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_AS            reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    ID              reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    STRING          reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    CHARACTER       reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    S_COMA          reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_FROM          reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    S_PUNTOCOMA     reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_UNION         reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_INTERSECT     reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_EXCEPT        reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    S_PARDER        reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_AND           reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_OR            reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_GROUP         reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_LIMIT         reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_ORDER         reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_THEN          reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    R_WHERE         reduce using rule 161 (datatype -> datatype O_SUMA datatype .)
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150

  ! O_PRODUCTO      [ reduce using rule 161 (datatype -> datatype O_SUMA datatype .) ]
  ! O_DIVISION      [ reduce using rule 161 (datatype -> datatype O_SUMA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 161 (datatype -> datatype O_SUMA datatype .) ]
  ! O_MODULAR       [ reduce using rule 161 (datatype -> datatype O_SUMA datatype .) ]
  ! O_SUMA          [ shift and go to state 145 ]
  ! O_RESTA         [ shift and go to state 146 ]
  ! OC_CONCATENAR   [ shift and go to state 151 ]


state 234

    (162) datatype -> datatype O_RESTA datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    O_RESTA         reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    OC_CONCATENAR   reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_IN            reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_NOT           reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    OL_MENORQUE     reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORQUE     reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    OL_MAYORIGUALQUE reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    OL_MENORIGUALQUE reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    S_IGUAL         reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    OL_DISTINTODE   reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_IS            reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_BETWEEN       reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_ISNULL        reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_NOTNULL       reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_AS            reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    ID              reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    STRING          reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    CHARACTER       reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    S_COMA          reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_FROM          reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    S_PUNTOCOMA     reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_UNION         reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_INTERSECT     reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_EXCEPT        reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    S_PARDER        reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_AND           reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_OR            reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_GROUP         reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_LIMIT         reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_ORDER         reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_THEN          reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    R_WHERE         reduce using rule 162 (datatype -> datatype O_RESTA datatype .)
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150

  ! O_PRODUCTO      [ reduce using rule 162 (datatype -> datatype O_RESTA datatype .) ]
  ! O_DIVISION      [ reduce using rule 162 (datatype -> datatype O_RESTA datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 162 (datatype -> datatype O_RESTA datatype .) ]
  ! O_MODULAR       [ reduce using rule 162 (datatype -> datatype O_RESTA datatype .) ]
  ! O_SUMA          [ shift and go to state 145 ]
  ! O_RESTA         [ shift and go to state 146 ]
  ! OC_CONCATENAR   [ shift and go to state 151 ]


state 235

    (163) datatype -> datatype O_PRODUCTO datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    O_RESTA         reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    O_PRODUCTO      reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    O_DIVISION      reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    O_MODULAR       reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    OC_CONCATENAR   reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_IN            reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOT           reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORQUE     reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORQUE     reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MAYORIGUALQUE reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    OL_MENORIGUALQUE reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    S_IGUAL         reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    OL_DISTINTODE   reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_IS            reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_BETWEEN       reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_ISNULL        reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_NOTNULL       reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_AS            reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    ID              reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    STRING          reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    CHARACTER       reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    S_COMA          reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_FROM          reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    S_PUNTOCOMA     reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_UNION         reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_INTERSECT     reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_EXCEPT        reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    S_PARDER        reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_AND           reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_OR            reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_GROUP         reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_LIMIT         reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_ORDER         reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_THEN          reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    R_WHERE         reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .)
    O_EXPONENTE     shift and go to state 149

  ! O_EXPONENTE     [ reduce using rule 163 (datatype -> datatype O_PRODUCTO datatype .) ]
  ! O_SUMA          [ shift and go to state 145 ]
  ! O_RESTA         [ shift and go to state 146 ]
  ! O_PRODUCTO      [ shift and go to state 147 ]
  ! O_DIVISION      [ shift and go to state 148 ]
  ! O_MODULAR       [ shift and go to state 150 ]
  ! OC_CONCATENAR   [ shift and go to state 151 ]


state 236

    (164) datatype -> datatype O_DIVISION datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    O_RESTA         reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    O_PRODUCTO      reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    O_DIVISION      reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    O_MODULAR       reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    OC_CONCATENAR   reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_IN            reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_NOT           reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORQUE     reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORQUE     reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    OL_MAYORIGUALQUE reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    OL_MENORIGUALQUE reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    S_IGUAL         reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    OL_DISTINTODE   reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_IS            reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_BETWEEN       reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_ISNULL        reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_NOTNULL       reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_AS            reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    ID              reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    STRING          reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    CHARACTER       reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    S_COMA          reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_FROM          reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    S_PUNTOCOMA     reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_UNION         reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_INTERSECT     reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_EXCEPT        reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    S_PARDER        reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_AND           reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_OR            reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_GROUP         reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_LIMIT         reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_ORDER         reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_THEN          reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    R_WHERE         reduce using rule 164 (datatype -> datatype O_DIVISION datatype .)
    O_EXPONENTE     shift and go to state 149

  ! O_EXPONENTE     [ reduce using rule 164 (datatype -> datatype O_DIVISION datatype .) ]
  ! O_SUMA          [ shift and go to state 145 ]
  ! O_RESTA         [ shift and go to state 146 ]
  ! O_PRODUCTO      [ shift and go to state 147 ]
  ! O_DIVISION      [ shift and go to state 148 ]
  ! O_MODULAR       [ shift and go to state 150 ]
  ! OC_CONCATENAR   [ shift and go to state 151 ]


state 237

    (165) datatype -> datatype O_EXPONENTE datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    O_RESTA         reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    O_PRODUCTO      reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    O_DIVISION      reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    O_EXPONENTE     reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    O_MODULAR       reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    OC_CONCATENAR   reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_IN            reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOT           reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORQUE     reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORQUE     reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MAYORIGUALQUE reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    OL_MENORIGUALQUE reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    S_IGUAL         reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    OL_DISTINTODE   reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_IS            reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_BETWEEN       reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_ISNULL        reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_NOTNULL       reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_AS            reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    ID              reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    STRING          reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    CHARACTER       reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    S_COMA          reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_FROM          reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    S_PUNTOCOMA     reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_UNION         reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_INTERSECT     reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_EXCEPT        reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    S_PARDER        reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_AND           reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_OR            reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_GROUP         reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_LIMIT         reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_ORDER         reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_THEN          reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)
    R_WHERE         reduce using rule 165 (datatype -> datatype O_EXPONENTE datatype .)

  ! O_SUMA          [ shift and go to state 145 ]
  ! O_RESTA         [ shift and go to state 146 ]
  ! O_PRODUCTO      [ shift and go to state 147 ]
  ! O_DIVISION      [ shift and go to state 148 ]
  ! O_EXPONENTE     [ shift and go to state 149 ]
  ! O_MODULAR       [ shift and go to state 150 ]
  ! OC_CONCATENAR   [ shift and go to state 151 ]


state 238

    (166) datatype -> datatype O_MODULAR datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    O_SUMA          reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    O_RESTA         reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    O_PRODUCTO      reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    O_DIVISION      reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    O_MODULAR       reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    OC_CONCATENAR   reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_IN            reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_NOT           reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORQUE     reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORQUE     reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    OL_MENORIGUALQUE reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    S_IGUAL         reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    OL_DISTINTODE   reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_IS            reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_BETWEEN       reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_ISNULL        reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_NOTNULL       reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_AS            reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    ID              reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    STRING          reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    CHARACTER       reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    S_COMA          reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_FROM          reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    S_PUNTOCOMA     reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_UNION         reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_INTERSECT     reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_EXCEPT        reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    S_PARDER        reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_AND           reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_OR            reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_GROUP         reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_LIMIT         reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_ORDER         reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_THEN          reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    R_WHERE         reduce using rule 166 (datatype -> datatype O_MODULAR datatype .)
    O_EXPONENTE     shift and go to state 149

  ! O_EXPONENTE     [ reduce using rule 166 (datatype -> datatype O_MODULAR datatype .) ]
  ! O_SUMA          [ shift and go to state 145 ]
  ! O_RESTA         [ shift and go to state 146 ]
  ! O_PRODUCTO      [ shift and go to state 147 ]
  ! O_DIVISION      [ shift and go to state 148 ]
  ! O_MODULAR       [ shift and go to state 150 ]
  ! OC_CONCATENAR   [ shift and go to state 151 ]


state 239

    (167) datatype -> datatype OC_CONCATENAR datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    OC_CONCATENAR   reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IN            reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOT           reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORQUE     reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORQUE     reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MAYORIGUALQUE reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_MENORIGUALQUE reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    S_IGUAL         reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    OL_DISTINTODE   reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_IS            reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_BETWEEN       reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ISNULL        reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_NOTNULL       reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AS            reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    ID              reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    STRING          reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    CHARACTER       reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    S_COMA          reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_FROM          reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PUNTOCOMA     reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_UNION         reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_INTERSECT     reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_EXCEPT        reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    S_PARDER        reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_AND           reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_OR            reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_GROUP         reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_LIMIT         reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_ORDER         reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_THEN          reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    R_WHERE         reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150

  ! O_SUMA          [ reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_RESTA         [ reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_PRODUCTO      [ reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_DIVISION      [ reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_EXPONENTE     [ reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! O_MODULAR       [ reduce using rule 167 (datatype -> datatype OC_CONCATENAR datatype .) ]
  ! OC_CONCATENAR   [ shift and go to state 151 ]


state 240

    (205) boolean -> datatype R_IN S_PARIZQ . selectStmt S_PARDER
    (272) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (274) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (275) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (276) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (277) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (279) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 325

state 241

    (206) boolean -> datatype R_NOT R_IN . S_PARIZQ selectStmt S_PARDER

    S_PARIZQ        shift and go to state 326


state 242

    (192) expComp -> datatype R_NOT R_BETWEEN . datatype R_AND datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 327
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 243

    (183) expComp -> datatype OL_MENORQUE datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    R_OR            reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    R_IS            reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    R_AS            reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    ID              reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    STRING          reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    CHARACTER       reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    S_COMA          reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    R_FROM          reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    R_UNION         reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    R_INTERSECT     reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    R_EXCEPT        reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    S_PARDER        reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    R_GROUP         reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    R_LIMIT         reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    R_ORDER         reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    R_THEN          reduce using rule 183 (expComp -> datatype OL_MENORQUE datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 244

    (184) expComp -> datatype OL_MAYORQUE datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    R_OR            reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    R_IS            reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    R_AS            reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    ID              reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    STRING          reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    CHARACTER       reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    S_COMA          reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    R_FROM          reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PUNTOCOMA     reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    R_UNION         reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    R_INTERSECT     reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    R_EXCEPT        reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    S_PARDER        reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    R_GROUP         reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    R_LIMIT         reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    R_ORDER         reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    R_THEN          reduce using rule 184 (expComp -> datatype OL_MAYORQUE datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 245

    (185) expComp -> datatype OL_MAYORIGUALQUE datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_OR            reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_IS            reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_AS            reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    ID              reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    STRING          reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    CHARACTER       reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_COMA          reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_FROM          reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_UNION         reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    S_PARDER        reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_GROUP         reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_ORDER         reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    R_THEN          reduce using rule 185 (expComp -> datatype OL_MAYORIGUALQUE datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 246

    (186) expComp -> datatype OL_MENORIGUALQUE datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_OR            reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_IS            reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_AS            reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    ID              reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    STRING          reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    CHARACTER       reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_COMA          reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_FROM          reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PUNTOCOMA     reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_UNION         reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_INTERSECT     reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_EXCEPT        reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    S_PARDER        reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_GROUP         reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_LIMIT         reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_ORDER         reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    R_THEN          reduce using rule 186 (expComp -> datatype OL_MENORIGUALQUE datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 247

    (187) expComp -> datatype S_IGUAL datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    R_OR            reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    R_IS            reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    R_AS            reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    ID              reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    STRING          reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    CHARACTER       reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    S_COMA          reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    R_FROM          reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    S_PUNTOCOMA     reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    R_UNION         reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    R_INTERSECT     reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    R_EXCEPT        reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    S_PARDER        reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    R_GROUP         reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    R_LIMIT         reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    R_ORDER         reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    R_THEN          reduce using rule 187 (expComp -> datatype S_IGUAL datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 248

    (188) expComp -> datatype OL_DISTINTODE datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    R_OR            reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    R_IS            reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    R_AS            reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    ID              reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    STRING          reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    CHARACTER       reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    S_COMA          reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    R_FROM          reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PUNTOCOMA     reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    R_UNION         reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    R_INTERSECT     reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    R_EXCEPT        reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    S_PARDER        reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    R_GROUP         reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    R_LIMIT         reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    R_ORDER         reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    R_THEN          reduce using rule 188 (expComp -> datatype OL_DISTINTODE datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 249

    (189) expComp -> datatype R_IS R_DISTINCT . R_FROM datatype

    R_FROM          shift and go to state 328


state 250

    (190) expComp -> datatype R_IS R_NOT . R_DISTINCT R_FROM datatype
    (200) expComp -> datatype R_IS R_NOT . R_NULL
    (201) expComp -> datatype R_IS R_NOT . R_TRUE
    (202) expComp -> datatype R_IS R_NOT . R_FALSE
    (203) expComp -> datatype R_IS R_NOT . R_UNKNOWN

    R_DISTINCT      shift and go to state 329
    R_NULL          shift and go to state 330
    R_TRUE          shift and go to state 331
    R_FALSE         shift and go to state 332
    R_UNKNOWN       shift and go to state 333


state 251

    (196) expComp -> datatype R_IS R_NULL .

    R_AND           reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    R_OR            reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    R_IS            reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    R_AS            reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    ID              reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    STRING          reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    CHARACTER       reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    S_COMA          reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    R_FROM          reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    S_PUNTOCOMA     reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    R_UNION         reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    R_INTERSECT     reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    R_EXCEPT        reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    S_PARDER        reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    R_GROUP         reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    R_LIMIT         reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    R_ORDER         reduce using rule 196 (expComp -> datatype R_IS R_NULL .)
    R_THEN          reduce using rule 196 (expComp -> datatype R_IS R_NULL .)


state 252

    (197) expComp -> datatype R_IS R_TRUE .

    R_AND           reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    R_OR            reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    R_IS            reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    R_AS            reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    ID              reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    STRING          reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    CHARACTER       reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    S_COMA          reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    R_FROM          reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    R_UNION         reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    S_PARDER        reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    R_GROUP         reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    R_LIMIT         reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    R_ORDER         reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)
    R_THEN          reduce using rule 197 (expComp -> datatype R_IS R_TRUE .)


state 253

    (198) expComp -> datatype R_IS R_FALSE .

    R_AND           reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    R_OR            reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    R_IS            reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    R_AS            reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    ID              reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    STRING          reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    CHARACTER       reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    S_COMA          reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    R_FROM          reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    R_UNION         reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    S_PARDER        reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    R_GROUP         reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    R_LIMIT         reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    R_ORDER         reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)
    R_THEN          reduce using rule 198 (expComp -> datatype R_IS R_FALSE .)


state 254

    (199) expComp -> datatype R_IS R_UNKNOWN .

    R_AND           reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    R_OR            reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    R_IS            reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    R_AS            reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    ID              reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    STRING          reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 199 (expComp -> datatype R_IS R_UNKNOWN .)


state 255

    (191) expComp -> datatype R_BETWEEN datatype . R_AND datatype
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 334
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 256

    (193) expComp -> datatype R_BETWEEN R_SYMMETRIC . datatype R_AND datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 335
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 257

    (208) expBool -> expBool R_AND expBool .
    (208) expBool -> expBool . R_AND expBool
    (209) expBool -> expBool . R_OR expBool
    (212) expBool -> expBool . optBoolPredicate
    (214) optBoolPredicate -> . R_IS R_TRUE
    (215) optBoolPredicate -> . R_IS R_FALSE
    (216) optBoolPredicate -> . R_IS R_UNKNOWN
    (217) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (218) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (219) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 208 (expBool -> expBool R_AND expBool .)
    R_OR            reduce using rule 208 (expBool -> expBool R_AND expBool .)
    R_AS            reduce using rule 208 (expBool -> expBool R_AND expBool .)
    ID              reduce using rule 208 (expBool -> expBool R_AND expBool .)
    STRING          reduce using rule 208 (expBool -> expBool R_AND expBool .)
    CHARACTER       reduce using rule 208 (expBool -> expBool R_AND expBool .)
    S_COMA          reduce using rule 208 (expBool -> expBool R_AND expBool .)
    R_FROM          reduce using rule 208 (expBool -> expBool R_AND expBool .)
    S_PUNTOCOMA     reduce using rule 208 (expBool -> expBool R_AND expBool .)
    R_UNION         reduce using rule 208 (expBool -> expBool R_AND expBool .)
    R_INTERSECT     reduce using rule 208 (expBool -> expBool R_AND expBool .)
    R_EXCEPT        reduce using rule 208 (expBool -> expBool R_AND expBool .)
    S_PARDER        reduce using rule 208 (expBool -> expBool R_AND expBool .)
    R_GROUP         reduce using rule 208 (expBool -> expBool R_AND expBool .)
    R_LIMIT         reduce using rule 208 (expBool -> expBool R_AND expBool .)
    R_ORDER         reduce using rule 208 (expBool -> expBool R_AND expBool .)
    R_THEN          reduce using rule 208 (expBool -> expBool R_AND expBool .)
    R_IS            shift and go to state 167

  ! R_IS            [ reduce using rule 208 (expBool -> expBool R_AND expBool .) ]
  ! R_AND           [ shift and go to state 164 ]
  ! R_OR            [ shift and go to state 165 ]

    optBoolPredicate               shift and go to state 166

state 258

    (209) expBool -> expBool R_OR expBool .
    (208) expBool -> expBool . R_AND expBool
    (209) expBool -> expBool . R_OR expBool
    (212) expBool -> expBool . optBoolPredicate
    (214) optBoolPredicate -> . R_IS R_TRUE
    (215) optBoolPredicate -> . R_IS R_FALSE
    (216) optBoolPredicate -> . R_IS R_UNKNOWN
    (217) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (218) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (219) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_AND           reduce using rule 209 (expBool -> expBool R_OR expBool .)
    R_OR            reduce using rule 209 (expBool -> expBool R_OR expBool .)
    R_AS            reduce using rule 209 (expBool -> expBool R_OR expBool .)
    ID              reduce using rule 209 (expBool -> expBool R_OR expBool .)
    STRING          reduce using rule 209 (expBool -> expBool R_OR expBool .)
    CHARACTER       reduce using rule 209 (expBool -> expBool R_OR expBool .)
    S_COMA          reduce using rule 209 (expBool -> expBool R_OR expBool .)
    R_FROM          reduce using rule 209 (expBool -> expBool R_OR expBool .)
    S_PUNTOCOMA     reduce using rule 209 (expBool -> expBool R_OR expBool .)
    R_UNION         reduce using rule 209 (expBool -> expBool R_OR expBool .)
    R_INTERSECT     reduce using rule 209 (expBool -> expBool R_OR expBool .)
    R_EXCEPT        reduce using rule 209 (expBool -> expBool R_OR expBool .)
    S_PARDER        reduce using rule 209 (expBool -> expBool R_OR expBool .)
    R_GROUP         reduce using rule 209 (expBool -> expBool R_OR expBool .)
    R_LIMIT         reduce using rule 209 (expBool -> expBool R_OR expBool .)
    R_ORDER         reduce using rule 209 (expBool -> expBool R_OR expBool .)
    R_THEN          reduce using rule 209 (expBool -> expBool R_OR expBool .)
    R_IS            shift and go to state 167

  ! R_IS            [ reduce using rule 209 (expBool -> expBool R_OR expBool .) ]
  ! R_AND           [ shift and go to state 164 ]
  ! R_OR            [ shift and go to state 165 ]

    optBoolPredicate               shift and go to state 166

state 259

    (214) optBoolPredicate -> R_IS R_TRUE .

    R_AND           reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    R_OR            reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    R_IS            reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    R_AS            reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    ID              reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    STRING          reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    CHARACTER       reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    S_COMA          reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    R_FROM          reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    S_PUNTOCOMA     reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    R_UNION         reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    R_INTERSECT     reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    R_EXCEPT        reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    S_PARDER        reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    R_GROUP         reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    R_LIMIT         reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    R_ORDER         reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)
    R_THEN          reduce using rule 214 (optBoolPredicate -> R_IS R_TRUE .)


state 260

    (215) optBoolPredicate -> R_IS R_FALSE .

    R_AND           reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    R_OR            reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    R_IS            reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    R_AS            reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    ID              reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    STRING          reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    CHARACTER       reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    S_COMA          reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    R_FROM          reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    S_PUNTOCOMA     reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    R_UNION         reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    R_INTERSECT     reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    R_EXCEPT        reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    S_PARDER        reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    R_GROUP         reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    R_LIMIT         reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    R_ORDER         reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)
    R_THEN          reduce using rule 215 (optBoolPredicate -> R_IS R_FALSE .)


state 261

    (216) optBoolPredicate -> R_IS R_UNKNOWN .

    R_AND           reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_OR            reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_IS            reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_AS            reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    ID              reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    STRING          reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    CHARACTER       reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_COMA          reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_FROM          reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_UNION         reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_INTERSECT     reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_EXCEPT        reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    S_PARDER        reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_GROUP         reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_LIMIT         reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_ORDER         reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)
    R_THEN          reduce using rule 216 (optBoolPredicate -> R_IS R_UNKNOWN .)


state 262

    (217) optBoolPredicate -> R_IS R_NOT . R_TRUE
    (218) optBoolPredicate -> R_IS R_NOT . R_FALSE
    (219) optBoolPredicate -> R_IS R_NOT . R_UNKNOWN

    R_TRUE          shift and go to state 336
    R_FALSE         shift and go to state 337
    R_UNKNOWN       shift and go to state 338


state 263

    (123) expresion -> S_PARIZQ selectStmt S_PARDER .

    R_AS            reduce using rule 123 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 123 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 123 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 123 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 123 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 123 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 123 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 123 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 123 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 123 (expresion -> S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 123 (expresion -> S_PARIZQ selectStmt S_PARDER .)


state 264

    (182) datatype -> S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 182 (datatype -> S_PARIZQ datatype S_PARDER .)


state 265

    (211) expBool -> S_PARIZQ expBool S_PARDER .

    R_AND           reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_OR            reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_IS            reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_AS            reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    ID              reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    STRING          reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    CHARACTER       reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_COMA          reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_FROM          reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PUNTOCOMA     reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_UNION         reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_INTERSECT     reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_EXCEPT        reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    S_PARDER        reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_GROUP         reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_LIMIT         reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_ORDER         reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)
    R_THEN          reduce using rule 211 (expBool -> S_PARIZQ expBool S_PARDER .)


state 266

    (221) columnName -> ID S_PUNTO . ID

    ID              shift and go to state 228


state 267

    (182) datatype -> S_PARIZQ datatype . S_PARDER
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 264
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 268

    (168) datatype -> R_CASE caseList optElse . R_END

    R_END           shift and go to state 339


state 269

    (169) caseList -> caseList caseWhen .

    R_ELSE          reduce using rule 169 (caseList -> caseList caseWhen .)
    R_WHEN          reduce using rule 169 (caseList -> caseList caseWhen .)
    R_END           reduce using rule 169 (caseList -> caseList caseWhen .)


state 270

    (172) optElse -> R_ELSE . literal
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL

    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91

    literal                        shift and go to state 340

state 271

    (171) caseWhen -> R_WHEN expBool . R_THEN literal
    (208) expBool -> expBool . R_AND expBool
    (209) expBool -> expBool . R_OR expBool
    (212) expBool -> expBool . optBoolPredicate
    (214) optBoolPredicate -> . R_IS R_TRUE
    (215) optBoolPredicate -> . R_IS R_FALSE
    (216) optBoolPredicate -> . R_IS R_UNKNOWN
    (217) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (218) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (219) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_THEN          shift and go to state 341
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

    optBoolPredicate               shift and go to state 166

state 272

    (126) funcCall -> R_NOW S_PARIZQ S_PARDER .

    O_SUMA          reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_RESTA         reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_PRODUCTO      reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_DIVISION      reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_EXPONENTE     reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    O_MODULAR       reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OC_CONCATENAR   reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IN            reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOT           reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORQUE     reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORQUE     reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_IGUAL         reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    OL_DISTINTODE   reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_IS            reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_BETWEEN       reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ISNULL        reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_NOTNULL       reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AS            reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    ID              reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    STRING          reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    CHARACTER       reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_COMA          reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_FROM          reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PUNTOCOMA     reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_UNION         reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_INTERSECT     reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_EXCEPT        reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    S_PARDER        reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_AND           reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_OR            reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_GROUP         reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_LIMIT         reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_ORDER         reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_THEN          reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)
    R_WHERE         reduce using rule 126 (funcCall -> R_NOW S_PARIZQ S_PARDER .)


state 273

    (127) funcCall -> R_COUNT S_PARIZQ datatype . S_PARDER
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 342
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 274

    (128) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO . S_PARDER

    S_PARDER        shift and go to state 343


state 275

    (129) funcCall -> R_SUM S_PARIZQ datatype . S_PARDER
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 344
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 276

    (130) funcCall -> R_PROM S_PARIZQ datatype . S_PARDER
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        shift and go to state 345
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 277

    (131) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM timeStamp S_PARDER
    (132) extract -> R_EXTRACT S_PARIZQ optsExtract . R_FROM columnName S_PARDER

    R_FROM          shift and go to state 346


state 278

    (135) optsExtract -> R_YEAR .

    R_FROM          reduce using rule 135 (optsExtract -> R_YEAR .)


state 279

    (136) optsExtract -> R_MONTH .

    R_FROM          reduce using rule 136 (optsExtract -> R_MONTH .)


state 280

    (137) optsExtract -> R_DAY .

    R_FROM          reduce using rule 137 (optsExtract -> R_DAY .)


state 281

    (138) optsExtract -> R_HOUR .

    R_FROM          reduce using rule 138 (optsExtract -> R_HOUR .)


state 282

    (139) optsExtract -> R_MINUTE .

    R_FROM          reduce using rule 139 (optsExtract -> R_MINUTE .)


state 283

    (140) optsExtract -> R_SECOND .

    R_FROM          reduce using rule 140 (optsExtract -> R_SECOND .)


state 284

    (141) datePart -> R_DATE_PART S_PARIZQ STRING . S_COMA dateSource S_PARDER

    S_COMA          shift and go to state 347


state 285

    (204) boolean -> R_EXISTS S_PARIZQ selectStmt . S_PARDER
    (274) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (275) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (276) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 348
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 286

    (19) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ . createTableList S_PARDER inheritsOpt
    (62) createTableList -> . createTableList S_COMA createTable
    (63) createTableList -> . createTable
    (64) createTable -> . ID types createColumns
    (65) createTable -> . createConstraint
    (66) createTable -> . createUnique
    (67) createTable -> . createPrimary
    (68) createTable -> . createForeign
    (71) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (72) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (73) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (74) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (75) constrName -> . R_CONSTRAINT ID
    (76) constrName -> .

    ID              shift and go to state 351
    R_UNIQUE        shift and go to state 357
    R_PRIMARY       shift and go to state 302
    R_CONSTRAINT    shift and go to state 303
    R_CHECK         reduce using rule 76 (constrName -> .)
    R_FOREIGN       reduce using rule 76 (constrName -> .)

    createTableList                shift and go to state 349
    createTable                    shift and go to state 350
    createConstraint               shift and go to state 352
    createUnique                   shift and go to state 353
    createPrimary                  shift and go to state 354
    createForeign                  shift and go to state 355
    constrName                     shift and go to state 356

state 287

    (50) ifNotExists -> R_IF R_NOT R_EXISTS .

    ID              reduce using rule 50 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    STRING          reduce using rule 50 (ifNotExists -> R_IF R_NOT R_EXISTS .)
    CHARACTER       reduce using rule 50 (ifNotExists -> R_IF R_NOT R_EXISTS .)


state 288

    (20) createOpts -> orReplace R_DATABASE ifNotExists idOrString . createOwner createMode
    (54) createOwner -> . R_OWNER ID
    (55) createOwner -> . R_OWNER STRING
    (56) createOwner -> . R_OWNER S_IGUAL ID
    (57) createOwner -> . R_OWNER S_IGUAL STRING
    (58) createOwner -> .

    R_OWNER         shift and go to state 359
    R_MODE          reduce using rule 58 (createOwner -> .)
    S_PUNTOCOMA     reduce using rule 58 (createOwner -> .)

    createOwner                    shift and go to state 358

state 289

    (21) createOpts -> indexUnique R_INDEX indexName R_ON . ID usingMethod S_PARIZQ indexList S_PARDER whereCl

    ID              shift and go to state 360


state 290

    (49) createOpts -> R_TYPE ifNotExists ID R_AS . R_ENUM S_PARIZQ paramsList S_PARDER

    R_ENUM          shift and go to state 361


state 291

    (245) alterDb -> R_RENAME R_TO . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 362

state 292

    (246) alterDb -> R_OWNER R_TO . ownerOPts
    (247) ownerOPts -> . idOrString
    (248) ownerOPts -> . R_CURRENT_USER
    (249) ownerOPts -> . R_SESSION_USER
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    R_CURRENT_USER  shift and go to state 365
    R_SESSION_USER  shift and go to state 366
    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    ownerOPts                      shift and go to state 363
    idOrString                     shift and go to state 364

state 293

    (253) alterTable -> R_ALTER alterAlter .

    S_COMA          reduce using rule 253 (alterTable -> R_ALTER alterAlter .)
    S_PUNTOCOMA     reduce using rule 253 (alterTable -> R_ALTER alterAlter .)


state 294

    (261) alterAlter -> R_COLUMN . ID R_SET nullOpt
    (262) alterAlter -> R_COLUMN . ID R_SET defaultVal
    (263) alterAlter -> R_COLUMN . ID R_TYPE types

    ID              shift and go to state 367


state 295

    (250) alterTableList -> alterTableList S_COMA . alterTable
    (252) alterTable -> . R_ADD alterAdd
    (253) alterTable -> . R_ALTER alterAlter
    (254) alterTable -> . R_DROP alterDrop
    (255) alterTable -> . R_RENAME alterRename

    R_ADD           shift and go to state 207
    R_ALTER         shift and go to state 204
    R_DROP          shift and go to state 208
    R_RENAME        shift and go to state 209

    alterTable                     shift and go to state 368

state 296

    (252) alterTable -> R_ADD alterAdd .

    S_COMA          reduce using rule 252 (alterTable -> R_ADD alterAdd .)
    S_PUNTOCOMA     reduce using rule 252 (alterTable -> R_ADD alterAdd .)


state 297

    (256) alterAdd -> R_COLUMN . ID types

    ID              shift and go to state 369


state 298

    (257) alterAdd -> createConstraint .

    S_COMA          reduce using rule 257 (alterAdd -> createConstraint .)
    S_PUNTOCOMA     reduce using rule 257 (alterAdd -> createConstraint .)


state 299

    (258) alterAdd -> createPrimary .

    S_COMA          reduce using rule 258 (alterAdd -> createPrimary .)
    S_PUNTOCOMA     reduce using rule 258 (alterAdd -> createPrimary .)


state 300

    (259) alterAdd -> createForeign .

    S_COMA          reduce using rule 259 (alterAdd -> createForeign .)
    S_PUNTOCOMA     reduce using rule 259 (alterAdd -> createForeign .)


state 301

    (260) alterAdd -> constrName . R_UNIQUE S_PARIZQ ID S_PARDER
    (71) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (74) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_UNIQUE        shift and go to state 370
    R_CHECK         shift and go to state 371
    R_FOREIGN       shift and go to state 372


state 302

    (73) createPrimary -> R_PRIMARY . R_KEY S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 373


state 303

    (75) constrName -> R_CONSTRAINT . ID

    ID              shift and go to state 374


state 304

    (254) alterTable -> R_DROP alterDrop .

    S_COMA          reduce using rule 254 (alterTable -> R_DROP alterDrop .)
    S_PUNTOCOMA     reduce using rule 254 (alterTable -> R_DROP alterDrop .)


state 305

    (264) alterDrop -> R_CONSTRAINT . ID

    ID              shift and go to state 375


state 306

    (265) alterDrop -> R_COLUMN . ID

    ID              shift and go to state 376


state 307

    (255) alterTable -> R_RENAME alterRename .

    S_COMA          reduce using rule 255 (alterTable -> R_RENAME alterRename .)
    S_PUNTOCOMA     reduce using rule 255 (alterTable -> R_RENAME alterRename .)


state 308

    (266) alterRename -> R_COLUMN . ID R_TO ID

    ID              shift and go to state 377


state 309

    (240) alterStmt -> R_ALTER R_INDEX ifExists idOrString R_ALTER . column idOrString idOrNumber
    (241) column -> . R_COLUMN
    (242) column -> .

    R_COLUMN        shift and go to state 379
    ID              reduce using rule 242 (column -> .)
    STRING          reduce using rule 242 (column -> .)
    CHARACTER       reduce using rule 242 (column -> .)

    column                         shift and go to state 378

state 310

    (239) alterStmt -> R_ALTER R_INDEX ifExists idOrString R_RENAME . R_TO idOrString

    R_TO            shift and go to state 380


state 311

    (77) idList -> idList S_COMA . ID

    ID              shift and go to state 381


state 312

    (322) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 382


state 313

    (323) paramsColumn -> S_PARIZQ idList . S_PARDER
    (77) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 383
    S_COMA          shift and go to state 311


state 314

    (325) updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .

    S_PUNTOCOMA     reduce using rule 325 (updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl .)


state 315

    (326) updateCols -> updateCols S_COMA . updateVals
    (328) updateVals -> . ID S_IGUAL updateExp

    ID              shift and go to state 220

    updateVals                     shift and go to state 384

state 316

    (328) updateVals -> ID S_IGUAL . updateExp
    (329) updateExp -> . datatype
    (330) updateExp -> . R_DEFAULT
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_DEFAULT       shift and go to state 387
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    updateExp                      shift and go to state 385
    datatype                       shift and go to state 386
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 317

    (294) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 388

state 318

    (291) tableExp -> tableExp S_COMA fromBody .

    S_COMA          reduce using rule 291 (tableExp -> tableExp S_COMA fromBody .)
    R_WHERE         reduce using rule 291 (tableExp -> tableExp S_COMA fromBody .)
    S_PUNTOCOMA     reduce using rule 291 (tableExp -> tableExp S_COMA fromBody .)
    R_GROUP         reduce using rule 291 (tableExp -> tableExp S_COMA fromBody .)
    R_LIMIT         reduce using rule 291 (tableExp -> tableExp S_COMA fromBody .)
    R_ORDER         reduce using rule 291 (tableExp -> tableExp S_COMA fromBody .)
    R_UNION         reduce using rule 291 (tableExp -> tableExp S_COMA fromBody .)
    R_INTERSECT     reduce using rule 291 (tableExp -> tableExp S_COMA fromBody .)
    R_EXCEPT        reduce using rule 291 (tableExp -> tableExp S_COMA fromBody .)
    S_PARDER        reduce using rule 291 (tableExp -> tableExp S_COMA fromBody .)


state 319

    (272) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl . groupByCl limitCl orderByCl
    (297) groupByCl -> . R_GROUP R_BY groupList havingCl
    (298) groupByCl -> .

    R_GROUP         shift and go to state 321
    R_LIMIT         reduce using rule 298 (groupByCl -> .)
    R_ORDER         reduce using rule 298 (groupByCl -> .)
    S_PUNTOCOMA     reduce using rule 298 (groupByCl -> .)
    R_UNION         reduce using rule 298 (groupByCl -> .)
    R_INTERSECT     reduce using rule 298 (groupByCl -> .)
    R_EXCEPT        reduce using rule 298 (groupByCl -> .)
    S_PARDER        reduce using rule 298 (groupByCl -> .)

    groupByCl                      shift and go to state 389

state 320

    (273) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl . limitCl orderByCl
    (317) limitCl -> . R_LIMIT INTEGER offsetLimit
    (318) limitCl -> . R_LIMIT R_ALL offsetLimit
    (319) limitCl -> .

    R_LIMIT         shift and go to state 391
    R_ORDER         reduce using rule 319 (limitCl -> .)
    S_PUNTOCOMA     reduce using rule 319 (limitCl -> .)
    R_UNION         reduce using rule 319 (limitCl -> .)
    R_INTERSECT     reduce using rule 319 (limitCl -> .)
    R_EXCEPT        reduce using rule 319 (limitCl -> .)
    S_PARDER        reduce using rule 319 (limitCl -> .)

    limitCl                        shift and go to state 390

state 321

    (297) groupByCl -> R_GROUP . R_BY groupList havingCl

    R_BY            shift and go to state 392


state 322

    (284) selectList -> selectList S_COMA selectListParams optAlias .

    S_COMA          reduce using rule 284 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_FROM          reduce using rule 284 (selectList -> selectList S_COMA selectListParams optAlias .)
    S_PUNTOCOMA     reduce using rule 284 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_UNION         reduce using rule 284 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_INTERSECT     reduce using rule 284 (selectList -> selectList S_COMA selectListParams optAlias .)
    R_EXCEPT        reduce using rule 284 (selectList -> selectList S_COMA selectListParams optAlias .)
    S_PARDER        reduce using rule 284 (selectList -> selectList S_COMA selectListParams optAlias .)


state 323

    (124) funcCall -> ID S_PARIZQ paramsList S_PARDER .

    O_SUMA          reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_RESTA         reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_PRODUCTO      reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_DIVISION      reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_EXPONENTE     reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    O_MODULAR       reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OC_CONCATENAR   reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IN            reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOT           reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORQUE     reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORQUE     reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_IGUAL         reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    OL_DISTINTODE   reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_IS            reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_BETWEEN       reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ISNULL        reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_NOTNULL       reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AS            reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    ID              reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    STRING          reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    CHARACTER       reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_COMA          reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_FROM          reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_UNION         reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_INTERSECT     reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_EXCEPT        reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    S_PARDER        reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_AND           reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_OR            reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_GROUP         reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_LIMIT         reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_ORDER         reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_THEN          reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)
    R_WHERE         reduce using rule 124 (funcCall -> ID S_PARIZQ paramsList S_PARDER .)


state 324

    (159) paramsList -> paramsList S_COMA . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 393
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 325

    (205) boolean -> datatype R_IN S_PARIZQ selectStmt . S_PARDER
    (274) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (275) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (276) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 394
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 326

    (206) boolean -> datatype R_NOT R_IN S_PARIZQ . selectStmt S_PARDER
    (272) selectStmt -> . R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (273) selectStmt -> . R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl
    (274) selectStmt -> . selectStmt R_UNION allOpt selectStmt
    (275) selectStmt -> . selectStmt R_INTERSECT allOpt selectStmt
    (276) selectStmt -> . selectStmt R_EXCEPT allOpt selectStmt
    (277) selectStmt -> . S_PARIZQ selectStmt S_PARDER
    (279) selectStmt -> . R_SELECT selectParams

    R_SELECT        shift and go to state 24
    S_PARIZQ        shift and go to state 19

    selectStmt                     shift and go to state 395

state 327

    (192) expComp -> datatype R_NOT R_BETWEEN datatype . R_AND datatype
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 396
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 328

    (189) expComp -> datatype R_IS R_DISTINCT R_FROM . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 397
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 329

    (190) expComp -> datatype R_IS R_NOT R_DISTINCT . R_FROM datatype

    R_FROM          shift and go to state 398


state 330

    (200) expComp -> datatype R_IS R_NOT R_NULL .

    R_AND           reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_OR            reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_IS            reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_AS            reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    ID              reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    STRING          reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    CHARACTER       reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_COMA          reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_FROM          reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_UNION         reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_INTERSECT     reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_EXCEPT        reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    S_PARDER        reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_GROUP         reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_LIMIT         reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_ORDER         reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)
    R_THEN          reduce using rule 200 (expComp -> datatype R_IS R_NOT R_NULL .)


state 331

    (201) expComp -> datatype R_IS R_NOT R_TRUE .

    R_AND           reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    ID              reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 201 (expComp -> datatype R_IS R_NOT R_TRUE .)


state 332

    (202) expComp -> datatype R_IS R_NOT R_FALSE .

    R_AND           reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    ID              reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 202 (expComp -> datatype R_IS R_NOT R_FALSE .)


state 333

    (203) expComp -> datatype R_IS R_NOT R_UNKNOWN .

    R_AND           reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 203 (expComp -> datatype R_IS R_NOT R_UNKNOWN .)


state 334

    (191) expComp -> datatype R_BETWEEN datatype R_AND . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 399
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 335

    (193) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype . R_AND datatype
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           shift and go to state 400
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 336

    (217) optBoolPredicate -> R_IS R_NOT R_TRUE .

    R_AND           reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_OR            reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_IS            reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_AS            reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    ID              reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    STRING          reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    CHARACTER       reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_COMA          reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_FROM          reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PUNTOCOMA     reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_UNION         reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_INTERSECT     reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_EXCEPT        reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    S_PARDER        reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_GROUP         reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_LIMIT         reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_ORDER         reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)
    R_THEN          reduce using rule 217 (optBoolPredicate -> R_IS R_NOT R_TRUE .)


state 337

    (218) optBoolPredicate -> R_IS R_NOT R_FALSE .

    R_AND           reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_OR            reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_IS            reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_AS            reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    ID              reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    STRING          reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    CHARACTER       reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_COMA          reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_FROM          reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PUNTOCOMA     reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_UNION         reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_INTERSECT     reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_EXCEPT        reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    S_PARDER        reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_GROUP         reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_LIMIT         reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_ORDER         reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)
    R_THEN          reduce using rule 218 (optBoolPredicate -> R_IS R_NOT R_FALSE .)


state 338

    (219) optBoolPredicate -> R_IS R_NOT R_UNKNOWN .

    R_AND           reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_OR            reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_IS            reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_AS            reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    ID              reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    STRING          reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    CHARACTER       reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_COMA          reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_FROM          reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PUNTOCOMA     reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_UNION         reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_INTERSECT     reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_EXCEPT        reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    S_PARDER        reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_GROUP         reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_LIMIT         reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_ORDER         reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)
    R_THEN          reduce using rule 219 (optBoolPredicate -> R_IS R_NOT R_UNKNOWN .)


state 339

    (168) datatype -> R_CASE caseList optElse R_END .

    O_SUMA          reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    O_RESTA         reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    O_PRODUCTO      reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    O_DIVISION      reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    O_EXPONENTE     reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    O_MODULAR       reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    OC_CONCATENAR   reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_IN            reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_NOT           reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORQUE     reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORQUE     reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    OL_MAYORIGUALQUE reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    OL_MENORIGUALQUE reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    S_IGUAL         reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    OL_DISTINTODE   reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_IS            reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_BETWEEN       reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_ISNULL        reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_NOTNULL       reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_AS            reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    ID              reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    STRING          reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    CHARACTER       reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    S_COMA          reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_FROM          reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    S_PUNTOCOMA     reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_UNION         reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_INTERSECT     reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_EXCEPT        reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    S_PARDER        reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_AND           reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_OR            reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_GROUP         reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_LIMIT         reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_ORDER         reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_THEN          reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)
    R_WHERE         reduce using rule 168 (datatype -> R_CASE caseList optElse R_END .)


state 340

    (172) optElse -> R_ELSE literal .

    R_END           reduce using rule 172 (optElse -> R_ELSE literal .)


state 341

    (171) caseWhen -> R_WHEN expBool R_THEN . literal
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL

    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91

    literal                        shift and go to state 401

state 342

    (127) funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 127 (funcCall -> R_COUNT S_PARIZQ datatype S_PARDER .)


state 343

    (128) funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .

    O_SUMA          reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_RESTA         reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_PRODUCTO      reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_DIVISION      reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_EXPONENTE     reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    O_MODULAR       reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OC_CONCATENAR   reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IN            reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOT           reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORQUE     reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORQUE     reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_IGUAL         reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    OL_DISTINTODE   reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_IS            reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_BETWEEN       reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ISNULL        reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_NOTNULL       reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AS            reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    ID              reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    STRING          reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    CHARACTER       reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_COMA          reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_FROM          reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PUNTOCOMA     reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_UNION         reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_INTERSECT     reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_EXCEPT        reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    S_PARDER        reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_AND           reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_OR            reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_GROUP         reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_LIMIT         reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_ORDER         reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_THEN          reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)
    R_WHERE         reduce using rule 128 (funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER .)


state 344

    (129) funcCall -> R_SUM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 129 (funcCall -> R_SUM S_PARIZQ datatype S_PARDER .)


state 345

    (130) funcCall -> R_PROM S_PARIZQ datatype S_PARDER .

    O_SUMA          reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_RESTA         reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_PRODUCTO      reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_DIVISION      reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_EXPONENTE     reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    O_MODULAR       reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OC_CONCATENAR   reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IN            reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOT           reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORQUE     reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORQUE     reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_IGUAL         reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    OL_DISTINTODE   reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_IS            reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_BETWEEN       reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ISNULL        reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_NOTNULL       reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AS            reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    ID              reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    STRING          reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    CHARACTER       reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_COMA          reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_FROM          reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PUNTOCOMA     reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_UNION         reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_INTERSECT     reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_EXCEPT        reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    S_PARDER        reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_AND           reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_OR            reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_GROUP         reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_LIMIT         reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_ORDER         reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_THEN          reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)
    R_WHERE         reduce using rule 130 (funcCall -> R_PROM S_PARIZQ datatype S_PARDER .)


state 346

    (131) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . timeStamp S_PARDER
    (132) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM . columnName S_PARDER
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID

    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104
    ID              shift and go to state 404

    timeStamp                      shift and go to state 402
    columnName                     shift and go to state 403

state 347

    (141) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA . dateSource S_PARDER
    (142) dateSource -> . R_TIMESTAMP STRING
    (143) dateSource -> . T_DATE STRING
    (144) dateSource -> . T_TIME STRING
    (145) dateSource -> . R_INTERVAL STRING
    (146) dateSource -> . R_NOW S_PARIZQ S_PARDER

    R_TIMESTAMP     shift and go to state 406
    T_DATE          shift and go to state 407
    T_TIME          shift and go to state 408
    R_INTERVAL      shift and go to state 409
    R_NOW           shift and go to state 410

    dateSource                     shift and go to state 405

state 348

    (204) boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 204 (boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER .)


state 349

    (19) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList . S_PARDER inheritsOpt
    (62) createTableList -> createTableList . S_COMA createTable

    S_PARDER        shift and go to state 411
    S_COMA          shift and go to state 412


state 350

    (63) createTableList -> createTable .

    S_PARDER        reduce using rule 63 (createTableList -> createTable .)
    S_COMA          reduce using rule 63 (createTableList -> createTable .)


state 351

    (64) createTable -> ID . types createColumns
    (79) types -> . ID
    (80) types -> . T_SMALLINT
    (81) types -> . T_INTEGER
    (82) types -> . T_BIGINT
    (83) types -> . T_REAL
    (84) types -> . T_DOUBLE T_PRECISION
    (85) types -> . T_MONEY
    (86) types -> . T_TEXT
    (87) types -> . T_BOOLEAN
    (88) types -> . R_TIMESTAMP
    (89) types -> . T_DATE
    (90) types -> . T_TIME
    (91) types -> . T_DECIMAL optParams
    (92) types -> . T_NUMERIC optParams
    (93) types -> . T_VARCHAR optParams
    (94) types -> . T_CHARACTER optParams
    (95) types -> . T_CHAR optParams
    (96) types -> . T_CHARACTER T_VARYING optParams
    (97) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 413
    T_SMALLINT      shift and go to state 415
    T_INTEGER       shift and go to state 416
    T_BIGINT        shift and go to state 417
    T_REAL          shift and go to state 418
    T_DOUBLE        shift and go to state 419
    T_MONEY         shift and go to state 420
    T_TEXT          shift and go to state 421
    T_BOOLEAN       shift and go to state 422
    R_TIMESTAMP     shift and go to state 423
    T_DATE          shift and go to state 424
    T_TIME          shift and go to state 425
    T_DECIMAL       shift and go to state 426
    T_NUMERIC       shift and go to state 427
    T_VARCHAR       shift and go to state 428
    T_CHARACTER     shift and go to state 429
    T_CHAR          shift and go to state 430
    R_INTERVAL      shift and go to state 431

    types                          shift and go to state 414

state 352

    (65) createTable -> createConstraint .

    S_PARDER        reduce using rule 65 (createTable -> createConstraint .)
    S_COMA          reduce using rule 65 (createTable -> createConstraint .)


state 353

    (66) createTable -> createUnique .

    S_PARDER        reduce using rule 66 (createTable -> createUnique .)
    S_COMA          reduce using rule 66 (createTable -> createUnique .)


state 354

    (67) createTable -> createPrimary .

    S_PARDER        reduce using rule 67 (createTable -> createPrimary .)
    S_COMA          reduce using rule 67 (createTable -> createPrimary .)


state 355

    (68) createTable -> createForeign .

    S_PARDER        reduce using rule 68 (createTable -> createForeign .)
    S_COMA          reduce using rule 68 (createTable -> createForeign .)


state 356

    (71) createConstraint -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER
    (74) createForeign -> constrName . R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_CHECK         shift and go to state 371
    R_FOREIGN       shift and go to state 372


state 357

    (72) createUnique -> R_UNIQUE . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 432


state 358

    (20) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner . createMode
    (59) createMode -> . R_MODE INTEGER
    (60) createMode -> . R_MODE S_IGUAL INTEGER
    (61) createMode -> .

    R_MODE          shift and go to state 434
    S_PUNTOCOMA     reduce using rule 61 (createMode -> .)

    createMode                     shift and go to state 433

state 359

    (54) createOwner -> R_OWNER . ID
    (55) createOwner -> R_OWNER . STRING
    (56) createOwner -> R_OWNER . S_IGUAL ID
    (57) createOwner -> R_OWNER . S_IGUAL STRING

    ID              shift and go to state 435
    STRING          shift and go to state 436
    S_IGUAL         shift and go to state 437


state 360

    (21) createOpts -> indexUnique R_INDEX indexName R_ON ID . usingMethod S_PARIZQ indexList S_PARDER whereCl
    (30) usingMethod -> . R_USING R_HASH
    (31) usingMethod -> . R_USING R_BTREE
    (32) usingMethod -> . R_USING R_GIST
    (33) usingMethod -> . R_USING R_SPGIST
    (34) usingMethod -> . R_USING R_GIN
    (35) usingMethod -> . R_USING R_BRIN
    (36) usingMethod -> .

    R_USING         shift and go to state 439
    S_PARIZQ        reduce using rule 36 (usingMethod -> .)

    usingMethod                    shift and go to state 438

state 361

    (49) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM . S_PARIZQ paramsList S_PARDER

    S_PARIZQ        shift and go to state 440


state 362

    (245) alterDb -> R_RENAME R_TO idOrString .

    S_PUNTOCOMA     reduce using rule 245 (alterDb -> R_RENAME R_TO idOrString .)


state 363

    (246) alterDb -> R_OWNER R_TO ownerOPts .

    S_PUNTOCOMA     reduce using rule 246 (alterDb -> R_OWNER R_TO ownerOPts .)


state 364

    (247) ownerOPts -> idOrString .

    S_PUNTOCOMA     reduce using rule 247 (ownerOPts -> idOrString .)


state 365

    (248) ownerOPts -> R_CURRENT_USER .

    S_PUNTOCOMA     reduce using rule 248 (ownerOPts -> R_CURRENT_USER .)


state 366

    (249) ownerOPts -> R_SESSION_USER .

    S_PUNTOCOMA     reduce using rule 249 (ownerOPts -> R_SESSION_USER .)


state 367

    (261) alterAlter -> R_COLUMN ID . R_SET nullOpt
    (262) alterAlter -> R_COLUMN ID . R_SET defaultVal
    (263) alterAlter -> R_COLUMN ID . R_TYPE types

    R_SET           shift and go to state 441
    R_TYPE          shift and go to state 442


state 368

    (250) alterTableList -> alterTableList S_COMA alterTable .

    S_COMA          reduce using rule 250 (alterTableList -> alterTableList S_COMA alterTable .)
    S_PUNTOCOMA     reduce using rule 250 (alterTableList -> alterTableList S_COMA alterTable .)


state 369

    (256) alterAdd -> R_COLUMN ID . types
    (79) types -> . ID
    (80) types -> . T_SMALLINT
    (81) types -> . T_INTEGER
    (82) types -> . T_BIGINT
    (83) types -> . T_REAL
    (84) types -> . T_DOUBLE T_PRECISION
    (85) types -> . T_MONEY
    (86) types -> . T_TEXT
    (87) types -> . T_BOOLEAN
    (88) types -> . R_TIMESTAMP
    (89) types -> . T_DATE
    (90) types -> . T_TIME
    (91) types -> . T_DECIMAL optParams
    (92) types -> . T_NUMERIC optParams
    (93) types -> . T_VARCHAR optParams
    (94) types -> . T_CHARACTER optParams
    (95) types -> . T_CHAR optParams
    (96) types -> . T_CHARACTER T_VARYING optParams
    (97) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 413
    T_SMALLINT      shift and go to state 415
    T_INTEGER       shift and go to state 416
    T_BIGINT        shift and go to state 417
    T_REAL          shift and go to state 418
    T_DOUBLE        shift and go to state 419
    T_MONEY         shift and go to state 420
    T_TEXT          shift and go to state 421
    T_BOOLEAN       shift and go to state 422
    R_TIMESTAMP     shift and go to state 423
    T_DATE          shift and go to state 424
    T_TIME          shift and go to state 425
    T_DECIMAL       shift and go to state 426
    T_NUMERIC       shift and go to state 427
    T_VARCHAR       shift and go to state 428
    T_CHARACTER     shift and go to state 429
    T_CHAR          shift and go to state 430
    R_INTERVAL      shift and go to state 431

    types                          shift and go to state 443

state 370

    (260) alterAdd -> constrName R_UNIQUE . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 444


state 371

    (71) createConstraint -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 445


state 372

    (74) createForeign -> constrName R_FOREIGN . R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_KEY           shift and go to state 446


state 373

    (73) createPrimary -> R_PRIMARY R_KEY . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 447


state 374

    (75) constrName -> R_CONSTRAINT ID .

    R_UNIQUE        reduce using rule 75 (constrName -> R_CONSTRAINT ID .)
    R_CHECK         reduce using rule 75 (constrName -> R_CONSTRAINT ID .)
    R_FOREIGN       reduce using rule 75 (constrName -> R_CONSTRAINT ID .)


state 375

    (264) alterDrop -> R_CONSTRAINT ID .

    S_COMA          reduce using rule 264 (alterDrop -> R_CONSTRAINT ID .)
    S_PUNTOCOMA     reduce using rule 264 (alterDrop -> R_CONSTRAINT ID .)


state 376

    (265) alterDrop -> R_COLUMN ID .

    S_COMA          reduce using rule 265 (alterDrop -> R_COLUMN ID .)
    S_PUNTOCOMA     reduce using rule 265 (alterDrop -> R_COLUMN ID .)


state 377

    (266) alterRename -> R_COLUMN ID . R_TO ID

    R_TO            shift and go to state 448


state 378

    (240) alterStmt -> R_ALTER R_INDEX ifExists idOrString R_ALTER column . idOrString idOrNumber
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 449

state 379

    (241) column -> R_COLUMN .

    ID              reduce using rule 241 (column -> R_COLUMN .)
    STRING          reduce using rule 241 (column -> R_COLUMN .)
    CHARACTER       reduce using rule 241 (column -> R_COLUMN .)


state 380

    (239) alterStmt -> R_ALTER R_INDEX ifExists idOrString R_RENAME R_TO . idOrString
    (14) idOrString -> . ID
    (15) idOrString -> . STRING
    (16) idOrString -> . CHARACTER

    ID              shift and go to state 118
    STRING          shift and go to state 119
    CHARACTER       shift and go to state 120

    idOrString                     shift and go to state 450

state 381

    (77) idList -> idList S_COMA ID .

    S_COMA          reduce using rule 77 (idList -> idList S_COMA ID .)
    S_PUNTOCOMA     reduce using rule 77 (idList -> idList S_COMA ID .)
    S_PARDER        reduce using rule 77 (idList -> idList S_COMA ID .)


state 382

    (322) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ . paramsList S_PARDER
    (159) paramsList -> . paramsList S_COMA datatype
    (160) paramsList -> . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    paramsList                     shift and go to state 451
    datatype                       shift and go to state 232
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 383

    (323) paramsColumn -> S_PARIZQ idList S_PARDER .

    R_VALUES        reduce using rule 323 (paramsColumn -> S_PARIZQ idList S_PARDER .)


state 384

    (326) updateCols -> updateCols S_COMA updateVals .

    S_COMA          reduce using rule 326 (updateCols -> updateCols S_COMA updateVals .)
    R_WHERE         reduce using rule 326 (updateCols -> updateCols S_COMA updateVals .)
    S_PUNTOCOMA     reduce using rule 326 (updateCols -> updateCols S_COMA updateVals .)


state 385

    (328) updateVals -> ID S_IGUAL updateExp .

    S_COMA          reduce using rule 328 (updateVals -> ID S_IGUAL updateExp .)
    R_WHERE         reduce using rule 328 (updateVals -> ID S_IGUAL updateExp .)
    S_PUNTOCOMA     reduce using rule 328 (updateVals -> ID S_IGUAL updateExp .)


state 386

    (329) updateExp -> datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    S_COMA          reduce using rule 329 (updateExp -> datatype .)
    R_WHERE         reduce using rule 329 (updateExp -> datatype .)
    S_PUNTOCOMA     reduce using rule 329 (updateExp -> datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 387

    (330) updateExp -> R_DEFAULT .

    S_COMA          reduce using rule 330 (updateExp -> R_DEFAULT .)
    R_WHERE         reduce using rule 330 (updateExp -> R_DEFAULT .)
    S_PUNTOCOMA     reduce using rule 330 (updateExp -> R_DEFAULT .)


state 388

    (294) fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .

    R_SET           reduce using rule 294 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_COMA          reduce using rule 294 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_WHERE         reduce using rule 294 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PUNTOCOMA     reduce using rule 294 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_GROUP         reduce using rule 294 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_LIMIT         reduce using rule 294 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_ORDER         reduce using rule 294 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_UNION         reduce using rule 294 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_INTERSECT     reduce using rule 294 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    R_EXCEPT        reduce using rule 294 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)
    S_PARDER        reduce using rule 294 (fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString .)


state 389

    (272) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl . limitCl orderByCl
    (317) limitCl -> . R_LIMIT INTEGER offsetLimit
    (318) limitCl -> . R_LIMIT R_ALL offsetLimit
    (319) limitCl -> .

    R_LIMIT         shift and go to state 391
    R_ORDER         reduce using rule 319 (limitCl -> .)
    S_PUNTOCOMA     reduce using rule 319 (limitCl -> .)
    R_UNION         reduce using rule 319 (limitCl -> .)
    R_INTERSECT     reduce using rule 319 (limitCl -> .)
    R_EXCEPT        reduce using rule 319 (limitCl -> .)
    S_PARDER        reduce using rule 319 (limitCl -> .)

    limitCl                        shift and go to state 452

state 390

    (273) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl . orderByCl
    (305) orderByCl -> . R_ORDER R_BY orderList
    (306) orderByCl -> .

    R_ORDER         shift and go to state 454
    S_PUNTOCOMA     reduce using rule 306 (orderByCl -> .)
    R_UNION         reduce using rule 306 (orderByCl -> .)
    R_INTERSECT     reduce using rule 306 (orderByCl -> .)
    R_EXCEPT        reduce using rule 306 (orderByCl -> .)
    S_PARDER        reduce using rule 306 (orderByCl -> .)

    orderByCl                      shift and go to state 453

state 391

    (317) limitCl -> R_LIMIT . INTEGER offsetLimit
    (318) limitCl -> R_LIMIT . R_ALL offsetLimit

    INTEGER         shift and go to state 455
    R_ALL           shift and go to state 456


state 392

    (297) groupByCl -> R_GROUP R_BY . groupList havingCl
    (299) groupList -> . groupList S_COMA columnName
    (300) groupList -> . groupList S_COMA INTEGER
    (301) groupList -> . columnName
    (302) groupList -> . INTEGER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 459
    ID              shift and go to state 404

    groupList                      shift and go to state 457
    columnName                     shift and go to state 458

state 393

    (159) paramsList -> paramsList S_COMA datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    S_PARDER        reduce using rule 159 (paramsList -> paramsList S_COMA datatype .)
    S_COMA          reduce using rule 159 (paramsList -> paramsList S_COMA datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 394

    (205) boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 205 (boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER .)


state 395

    (206) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt . S_PARDER
    (274) selectStmt -> selectStmt . R_UNION allOpt selectStmt
    (275) selectStmt -> selectStmt . R_INTERSECT allOpt selectStmt
    (276) selectStmt -> selectStmt . R_EXCEPT allOpt selectStmt

    S_PARDER        shift and go to state 460
    R_UNION         shift and go to state 36
    R_INTERSECT     shift and go to state 37
    R_EXCEPT        shift and go to state 38


state 396

    (192) expComp -> datatype R_NOT R_BETWEEN datatype R_AND . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 461
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 397

    (189) expComp -> datatype R_IS R_DISTINCT R_FROM datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 189 (expComp -> datatype R_IS R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 398

    (190) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 462
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 399

    (191) expComp -> datatype R_BETWEEN datatype R_AND datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 191 (expComp -> datatype R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 400

    (193) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    datatype                       shift and go to state 463
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 401

    (171) caseWhen -> R_WHEN expBool R_THEN literal .

    R_ELSE          reduce using rule 171 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_WHEN          reduce using rule 171 (caseWhen -> R_WHEN expBool R_THEN literal .)
    R_END           reduce using rule 171 (caseWhen -> R_WHEN expBool R_THEN literal .)


state 402

    (131) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp . S_PARDER

    S_PARDER        shift and go to state 464


state 403

    (132) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName . S_PARDER

    S_PARDER        shift and go to state 465


state 404

    (220) columnName -> ID .
    (221) columnName -> ID . S_PUNTO ID

    S_PARDER        reduce using rule 220 (columnName -> ID .)
    S_COMA          reduce using rule 220 (columnName -> ID .)
    R_HAVING        reduce using rule 220 (columnName -> ID .)
    R_LIMIT         reduce using rule 220 (columnName -> ID .)
    R_ORDER         reduce using rule 220 (columnName -> ID .)
    S_PUNTOCOMA     reduce using rule 220 (columnName -> ID .)
    R_UNION         reduce using rule 220 (columnName -> ID .)
    R_INTERSECT     reduce using rule 220 (columnName -> ID .)
    R_EXCEPT        reduce using rule 220 (columnName -> ID .)
    R_ASC           reduce using rule 220 (columnName -> ID .)
    R_DESC          reduce using rule 220 (columnName -> ID .)
    R_NULLS         reduce using rule 220 (columnName -> ID .)
    S_PUNTO         shift and go to state 266


state 405

    (141) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource . S_PARDER

    S_PARDER        shift and go to state 466


state 406

    (142) dateSource -> R_TIMESTAMP . STRING

    STRING          shift and go to state 467


state 407

    (143) dateSource -> T_DATE . STRING

    STRING          shift and go to state 468


state 408

    (144) dateSource -> T_TIME . STRING

    STRING          shift and go to state 469


state 409

    (145) dateSource -> R_INTERVAL . STRING

    STRING          shift and go to state 470


state 410

    (146) dateSource -> R_NOW . S_PARIZQ S_PARDER

    S_PARIZQ        shift and go to state 471


state 411

    (19) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER . inheritsOpt
    (52) inheritsOpt -> . R_INHERITS S_PARIZQ ID S_PARDER
    (53) inheritsOpt -> .

    R_INHERITS      shift and go to state 473
    S_PUNTOCOMA     reduce using rule 53 (inheritsOpt -> .)

    inheritsOpt                    shift and go to state 472

state 412

    (62) createTableList -> createTableList S_COMA . createTable
    (64) createTable -> . ID types createColumns
    (65) createTable -> . createConstraint
    (66) createTable -> . createUnique
    (67) createTable -> . createPrimary
    (68) createTable -> . createForeign
    (71) createConstraint -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (72) createUnique -> . R_UNIQUE S_PARIZQ idList S_PARDER
    (73) createPrimary -> . R_PRIMARY R_KEY S_PARIZQ idList S_PARDER
    (74) createForeign -> . constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (75) constrName -> . R_CONSTRAINT ID
    (76) constrName -> .

    ID              shift and go to state 351
    R_UNIQUE        shift and go to state 357
    R_PRIMARY       shift and go to state 302
    R_CONSTRAINT    shift and go to state 303
    R_CHECK         reduce using rule 76 (constrName -> .)
    R_FOREIGN       reduce using rule 76 (constrName -> .)

    createTable                    shift and go to state 474
    createConstraint               shift and go to state 352
    createUnique                   shift and go to state 353
    createPrimary                  shift and go to state 354
    createForeign                  shift and go to state 355
    constrName                     shift and go to state 356

state 413

    (79) types -> ID .

    R_DEFAULT       reduce using rule 79 (types -> ID .)
    R_NOT           reduce using rule 79 (types -> ID .)
    R_NULL          reduce using rule 79 (types -> ID .)
    R_PRIMARY       reduce using rule 79 (types -> ID .)
    R_REFERENCES    reduce using rule 79 (types -> ID .)
    R_CONSTRAINT    reduce using rule 79 (types -> ID .)
    R_UNIQUE        reduce using rule 79 (types -> ID .)
    R_CHECK         reduce using rule 79 (types -> ID .)
    S_PARDER        reduce using rule 79 (types -> ID .)
    S_COMA          reduce using rule 79 (types -> ID .)
    S_PUNTOCOMA     reduce using rule 79 (types -> ID .)


state 414

    (64) createTable -> ID types . createColumns
    (69) createColumns -> . colOptionsList
    (70) createColumns -> .
    (107) colOptionsList -> . colOptionsList colOptions
    (108) colOptionsList -> . colOptions
    (109) colOptions -> . defaultVal
    (110) colOptions -> . nullOpt
    (111) colOptions -> . constraintOpt
    (112) colOptions -> . primaryOpt
    (113) colOptions -> . referencesOpt
    (114) defaultVal -> . R_DEFAULT literal
    (115) nullOpt -> . R_NOT R_NULL
    (116) nullOpt -> . R_NULL
    (117) constraintOpt -> . constrName R_UNIQUE
    (118) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (119) primaryOpt -> . R_PRIMARY R_KEY
    (120) referencesOpt -> . R_REFERENCES ID
    (75) constrName -> . R_CONSTRAINT ID
    (76) constrName -> .

    S_PARDER        reduce using rule 70 (createColumns -> .)
    S_COMA          reduce using rule 70 (createColumns -> .)
    R_DEFAULT       shift and go to state 483
    R_NOT           shift and go to state 484
    R_NULL          shift and go to state 485
    R_PRIMARY       shift and go to state 487
    R_REFERENCES    shift and go to state 488
    R_CONSTRAINT    shift and go to state 303
    R_UNIQUE        reduce using rule 76 (constrName -> .)
    R_CHECK         reduce using rule 76 (constrName -> .)

    createColumns                  shift and go to state 475
    colOptionsList                 shift and go to state 476
    colOptions                     shift and go to state 477
    defaultVal                     shift and go to state 478
    nullOpt                        shift and go to state 479
    constraintOpt                  shift and go to state 480
    primaryOpt                     shift and go to state 481
    referencesOpt                  shift and go to state 482
    constrName                     shift and go to state 486

state 415

    (80) types -> T_SMALLINT .

    R_DEFAULT       reduce using rule 80 (types -> T_SMALLINT .)
    R_NOT           reduce using rule 80 (types -> T_SMALLINT .)
    R_NULL          reduce using rule 80 (types -> T_SMALLINT .)
    R_PRIMARY       reduce using rule 80 (types -> T_SMALLINT .)
    R_REFERENCES    reduce using rule 80 (types -> T_SMALLINT .)
    R_CONSTRAINT    reduce using rule 80 (types -> T_SMALLINT .)
    R_UNIQUE        reduce using rule 80 (types -> T_SMALLINT .)
    R_CHECK         reduce using rule 80 (types -> T_SMALLINT .)
    S_PARDER        reduce using rule 80 (types -> T_SMALLINT .)
    S_COMA          reduce using rule 80 (types -> T_SMALLINT .)
    S_PUNTOCOMA     reduce using rule 80 (types -> T_SMALLINT .)


state 416

    (81) types -> T_INTEGER .

    R_DEFAULT       reduce using rule 81 (types -> T_INTEGER .)
    R_NOT           reduce using rule 81 (types -> T_INTEGER .)
    R_NULL          reduce using rule 81 (types -> T_INTEGER .)
    R_PRIMARY       reduce using rule 81 (types -> T_INTEGER .)
    R_REFERENCES    reduce using rule 81 (types -> T_INTEGER .)
    R_CONSTRAINT    reduce using rule 81 (types -> T_INTEGER .)
    R_UNIQUE        reduce using rule 81 (types -> T_INTEGER .)
    R_CHECK         reduce using rule 81 (types -> T_INTEGER .)
    S_PARDER        reduce using rule 81 (types -> T_INTEGER .)
    S_COMA          reduce using rule 81 (types -> T_INTEGER .)
    S_PUNTOCOMA     reduce using rule 81 (types -> T_INTEGER .)


state 417

    (82) types -> T_BIGINT .

    R_DEFAULT       reduce using rule 82 (types -> T_BIGINT .)
    R_NOT           reduce using rule 82 (types -> T_BIGINT .)
    R_NULL          reduce using rule 82 (types -> T_BIGINT .)
    R_PRIMARY       reduce using rule 82 (types -> T_BIGINT .)
    R_REFERENCES    reduce using rule 82 (types -> T_BIGINT .)
    R_CONSTRAINT    reduce using rule 82 (types -> T_BIGINT .)
    R_UNIQUE        reduce using rule 82 (types -> T_BIGINT .)
    R_CHECK         reduce using rule 82 (types -> T_BIGINT .)
    S_PARDER        reduce using rule 82 (types -> T_BIGINT .)
    S_COMA          reduce using rule 82 (types -> T_BIGINT .)
    S_PUNTOCOMA     reduce using rule 82 (types -> T_BIGINT .)


state 418

    (83) types -> T_REAL .

    R_DEFAULT       reduce using rule 83 (types -> T_REAL .)
    R_NOT           reduce using rule 83 (types -> T_REAL .)
    R_NULL          reduce using rule 83 (types -> T_REAL .)
    R_PRIMARY       reduce using rule 83 (types -> T_REAL .)
    R_REFERENCES    reduce using rule 83 (types -> T_REAL .)
    R_CONSTRAINT    reduce using rule 83 (types -> T_REAL .)
    R_UNIQUE        reduce using rule 83 (types -> T_REAL .)
    R_CHECK         reduce using rule 83 (types -> T_REAL .)
    S_PARDER        reduce using rule 83 (types -> T_REAL .)
    S_COMA          reduce using rule 83 (types -> T_REAL .)
    S_PUNTOCOMA     reduce using rule 83 (types -> T_REAL .)


state 419

    (84) types -> T_DOUBLE . T_PRECISION

    T_PRECISION     shift and go to state 489


state 420

    (85) types -> T_MONEY .

    R_DEFAULT       reduce using rule 85 (types -> T_MONEY .)
    R_NOT           reduce using rule 85 (types -> T_MONEY .)
    R_NULL          reduce using rule 85 (types -> T_MONEY .)
    R_PRIMARY       reduce using rule 85 (types -> T_MONEY .)
    R_REFERENCES    reduce using rule 85 (types -> T_MONEY .)
    R_CONSTRAINT    reduce using rule 85 (types -> T_MONEY .)
    R_UNIQUE        reduce using rule 85 (types -> T_MONEY .)
    R_CHECK         reduce using rule 85 (types -> T_MONEY .)
    S_PARDER        reduce using rule 85 (types -> T_MONEY .)
    S_COMA          reduce using rule 85 (types -> T_MONEY .)
    S_PUNTOCOMA     reduce using rule 85 (types -> T_MONEY .)


state 421

    (86) types -> T_TEXT .

    R_DEFAULT       reduce using rule 86 (types -> T_TEXT .)
    R_NOT           reduce using rule 86 (types -> T_TEXT .)
    R_NULL          reduce using rule 86 (types -> T_TEXT .)
    R_PRIMARY       reduce using rule 86 (types -> T_TEXT .)
    R_REFERENCES    reduce using rule 86 (types -> T_TEXT .)
    R_CONSTRAINT    reduce using rule 86 (types -> T_TEXT .)
    R_UNIQUE        reduce using rule 86 (types -> T_TEXT .)
    R_CHECK         reduce using rule 86 (types -> T_TEXT .)
    S_PARDER        reduce using rule 86 (types -> T_TEXT .)
    S_COMA          reduce using rule 86 (types -> T_TEXT .)
    S_PUNTOCOMA     reduce using rule 86 (types -> T_TEXT .)


state 422

    (87) types -> T_BOOLEAN .

    R_DEFAULT       reduce using rule 87 (types -> T_BOOLEAN .)
    R_NOT           reduce using rule 87 (types -> T_BOOLEAN .)
    R_NULL          reduce using rule 87 (types -> T_BOOLEAN .)
    R_PRIMARY       reduce using rule 87 (types -> T_BOOLEAN .)
    R_REFERENCES    reduce using rule 87 (types -> T_BOOLEAN .)
    R_CONSTRAINT    reduce using rule 87 (types -> T_BOOLEAN .)
    R_UNIQUE        reduce using rule 87 (types -> T_BOOLEAN .)
    R_CHECK         reduce using rule 87 (types -> T_BOOLEAN .)
    S_PARDER        reduce using rule 87 (types -> T_BOOLEAN .)
    S_COMA          reduce using rule 87 (types -> T_BOOLEAN .)
    S_PUNTOCOMA     reduce using rule 87 (types -> T_BOOLEAN .)


state 423

    (88) types -> R_TIMESTAMP .

    R_DEFAULT       reduce using rule 88 (types -> R_TIMESTAMP .)
    R_NOT           reduce using rule 88 (types -> R_TIMESTAMP .)
    R_NULL          reduce using rule 88 (types -> R_TIMESTAMP .)
    R_PRIMARY       reduce using rule 88 (types -> R_TIMESTAMP .)
    R_REFERENCES    reduce using rule 88 (types -> R_TIMESTAMP .)
    R_CONSTRAINT    reduce using rule 88 (types -> R_TIMESTAMP .)
    R_UNIQUE        reduce using rule 88 (types -> R_TIMESTAMP .)
    R_CHECK         reduce using rule 88 (types -> R_TIMESTAMP .)
    S_PARDER        reduce using rule 88 (types -> R_TIMESTAMP .)
    S_COMA          reduce using rule 88 (types -> R_TIMESTAMP .)
    S_PUNTOCOMA     reduce using rule 88 (types -> R_TIMESTAMP .)


state 424

    (89) types -> T_DATE .

    R_DEFAULT       reduce using rule 89 (types -> T_DATE .)
    R_NOT           reduce using rule 89 (types -> T_DATE .)
    R_NULL          reduce using rule 89 (types -> T_DATE .)
    R_PRIMARY       reduce using rule 89 (types -> T_DATE .)
    R_REFERENCES    reduce using rule 89 (types -> T_DATE .)
    R_CONSTRAINT    reduce using rule 89 (types -> T_DATE .)
    R_UNIQUE        reduce using rule 89 (types -> T_DATE .)
    R_CHECK         reduce using rule 89 (types -> T_DATE .)
    S_PARDER        reduce using rule 89 (types -> T_DATE .)
    S_COMA          reduce using rule 89 (types -> T_DATE .)
    S_PUNTOCOMA     reduce using rule 89 (types -> T_DATE .)


state 425

    (90) types -> T_TIME .

    R_DEFAULT       reduce using rule 90 (types -> T_TIME .)
    R_NOT           reduce using rule 90 (types -> T_TIME .)
    R_NULL          reduce using rule 90 (types -> T_TIME .)
    R_PRIMARY       reduce using rule 90 (types -> T_TIME .)
    R_REFERENCES    reduce using rule 90 (types -> T_TIME .)
    R_CONSTRAINT    reduce using rule 90 (types -> T_TIME .)
    R_UNIQUE        reduce using rule 90 (types -> T_TIME .)
    R_CHECK         reduce using rule 90 (types -> T_TIME .)
    S_PARDER        reduce using rule 90 (types -> T_TIME .)
    S_COMA          reduce using rule 90 (types -> T_TIME .)
    S_PUNTOCOMA     reduce using rule 90 (types -> T_TIME .)


state 426

    (91) types -> T_DECIMAL . optParams
    (105) optParams -> . S_PARIZQ literalList S_PARDER
    (106) optParams -> .

    S_PARIZQ        shift and go to state 491
    R_DEFAULT       reduce using rule 106 (optParams -> .)
    R_NOT           reduce using rule 106 (optParams -> .)
    R_NULL          reduce using rule 106 (optParams -> .)
    R_PRIMARY       reduce using rule 106 (optParams -> .)
    R_REFERENCES    reduce using rule 106 (optParams -> .)
    R_CONSTRAINT    reduce using rule 106 (optParams -> .)
    R_UNIQUE        reduce using rule 106 (optParams -> .)
    R_CHECK         reduce using rule 106 (optParams -> .)
    S_PARDER        reduce using rule 106 (optParams -> .)
    S_COMA          reduce using rule 106 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 106 (optParams -> .)

    optParams                      shift and go to state 490

state 427

    (92) types -> T_NUMERIC . optParams
    (105) optParams -> . S_PARIZQ literalList S_PARDER
    (106) optParams -> .

    S_PARIZQ        shift and go to state 491
    R_DEFAULT       reduce using rule 106 (optParams -> .)
    R_NOT           reduce using rule 106 (optParams -> .)
    R_NULL          reduce using rule 106 (optParams -> .)
    R_PRIMARY       reduce using rule 106 (optParams -> .)
    R_REFERENCES    reduce using rule 106 (optParams -> .)
    R_CONSTRAINT    reduce using rule 106 (optParams -> .)
    R_UNIQUE        reduce using rule 106 (optParams -> .)
    R_CHECK         reduce using rule 106 (optParams -> .)
    S_PARDER        reduce using rule 106 (optParams -> .)
    S_COMA          reduce using rule 106 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 106 (optParams -> .)

    optParams                      shift and go to state 492

state 428

    (93) types -> T_VARCHAR . optParams
    (105) optParams -> . S_PARIZQ literalList S_PARDER
    (106) optParams -> .

    S_PARIZQ        shift and go to state 491
    R_DEFAULT       reduce using rule 106 (optParams -> .)
    R_NOT           reduce using rule 106 (optParams -> .)
    R_NULL          reduce using rule 106 (optParams -> .)
    R_PRIMARY       reduce using rule 106 (optParams -> .)
    R_REFERENCES    reduce using rule 106 (optParams -> .)
    R_CONSTRAINT    reduce using rule 106 (optParams -> .)
    R_UNIQUE        reduce using rule 106 (optParams -> .)
    R_CHECK         reduce using rule 106 (optParams -> .)
    S_PARDER        reduce using rule 106 (optParams -> .)
    S_COMA          reduce using rule 106 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 106 (optParams -> .)

    optParams                      shift and go to state 493

state 429

    (94) types -> T_CHARACTER . optParams
    (96) types -> T_CHARACTER . T_VARYING optParams
    (105) optParams -> . S_PARIZQ literalList S_PARDER
    (106) optParams -> .

    T_VARYING       shift and go to state 495
    S_PARIZQ        shift and go to state 491
    R_DEFAULT       reduce using rule 106 (optParams -> .)
    R_NOT           reduce using rule 106 (optParams -> .)
    R_NULL          reduce using rule 106 (optParams -> .)
    R_PRIMARY       reduce using rule 106 (optParams -> .)
    R_REFERENCES    reduce using rule 106 (optParams -> .)
    R_CONSTRAINT    reduce using rule 106 (optParams -> .)
    R_UNIQUE        reduce using rule 106 (optParams -> .)
    R_CHECK         reduce using rule 106 (optParams -> .)
    S_PARDER        reduce using rule 106 (optParams -> .)
    S_COMA          reduce using rule 106 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 106 (optParams -> .)

    optParams                      shift and go to state 494

state 430

    (95) types -> T_CHAR . optParams
    (105) optParams -> . S_PARIZQ literalList S_PARDER
    (106) optParams -> .

    S_PARIZQ        shift and go to state 491
    R_DEFAULT       reduce using rule 106 (optParams -> .)
    R_NOT           reduce using rule 106 (optParams -> .)
    R_NULL          reduce using rule 106 (optParams -> .)
    R_PRIMARY       reduce using rule 106 (optParams -> .)
    R_REFERENCES    reduce using rule 106 (optParams -> .)
    R_CONSTRAINT    reduce using rule 106 (optParams -> .)
    R_UNIQUE        reduce using rule 106 (optParams -> .)
    R_CHECK         reduce using rule 106 (optParams -> .)
    S_PARDER        reduce using rule 106 (optParams -> .)
    S_COMA          reduce using rule 106 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 106 (optParams -> .)

    optParams                      shift and go to state 496

state 431

    (97) types -> R_INTERVAL . intervalFields
    (98) intervalFields -> . R_YEAR
    (99) intervalFields -> . R_MONTH
    (100) intervalFields -> . R_DAY
    (101) intervalFields -> . R_HOUR
    (102) intervalFields -> . R_MINUTE
    (103) intervalFields -> . R_SECOND
    (104) intervalFields -> .

    R_YEAR          shift and go to state 498
    R_MONTH         shift and go to state 499
    R_DAY           shift and go to state 500
    R_HOUR          shift and go to state 501
    R_MINUTE        shift and go to state 502
    R_SECOND        shift and go to state 503
    R_DEFAULT       reduce using rule 104 (intervalFields -> .)
    R_NOT           reduce using rule 104 (intervalFields -> .)
    R_NULL          reduce using rule 104 (intervalFields -> .)
    R_PRIMARY       reduce using rule 104 (intervalFields -> .)
    R_REFERENCES    reduce using rule 104 (intervalFields -> .)
    R_CONSTRAINT    reduce using rule 104 (intervalFields -> .)
    R_UNIQUE        reduce using rule 104 (intervalFields -> .)
    R_CHECK         reduce using rule 104 (intervalFields -> .)
    S_PARDER        reduce using rule 104 (intervalFields -> .)
    S_COMA          reduce using rule 104 (intervalFields -> .)
    S_PUNTOCOMA     reduce using rule 104 (intervalFields -> .)

    intervalFields                 shift and go to state 497

state 432

    (72) createUnique -> R_UNIQUE S_PARIZQ . idList S_PARDER
    (77) idList -> . idList S_COMA ID
    (78) idList -> . ID

    ID              shift and go to state 215

    idList                         shift and go to state 504

state 433

    (20) createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .

    S_PUNTOCOMA     reduce using rule 20 (createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode .)


state 434

    (59) createMode -> R_MODE . INTEGER
    (60) createMode -> R_MODE . S_IGUAL INTEGER

    INTEGER         shift and go to state 505
    S_IGUAL         shift and go to state 506


state 435

    (54) createOwner -> R_OWNER ID .

    R_MODE          reduce using rule 54 (createOwner -> R_OWNER ID .)
    S_PUNTOCOMA     reduce using rule 54 (createOwner -> R_OWNER ID .)


state 436

    (55) createOwner -> R_OWNER STRING .

    R_MODE          reduce using rule 55 (createOwner -> R_OWNER STRING .)
    S_PUNTOCOMA     reduce using rule 55 (createOwner -> R_OWNER STRING .)


state 437

    (56) createOwner -> R_OWNER S_IGUAL . ID
    (57) createOwner -> R_OWNER S_IGUAL . STRING

    ID              shift and go to state 507
    STRING          shift and go to state 508


state 438

    (21) createOpts -> indexUnique R_INDEX indexName R_ON ID usingMethod . S_PARIZQ indexList S_PARDER whereCl

    S_PARIZQ        shift and go to state 509


state 439

    (30) usingMethod -> R_USING . R_HASH
    (31) usingMethod -> R_USING . R_BTREE
    (32) usingMethod -> R_USING . R_GIST
    (33) usingMethod -> R_USING . R_SPGIST
    (34) usingMethod -> R_USING . R_GIN
    (35) usingMethod -> R_USING . R_BRIN

    R_HASH          shift and go to state 510
    R_BTREE         shift and go to state 511
    R_GIST          shift and go to state 512
    R_SPGIST        shift and go to state 513
    R_GIN           shift and go to state 514
    R_BRIN          shift and go to state 515


state 440

    (49) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ . paramsList S_PARDER
    (159) paramsList -> . paramsList S_COMA datatype
    (160) paramsList -> . datatype
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    S_PARIZQ        shift and go to state 174
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    paramsList                     shift and go to state 516
    datatype                       shift and go to state 232
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 441

    (261) alterAlter -> R_COLUMN ID R_SET . nullOpt
    (262) alterAlter -> R_COLUMN ID R_SET . defaultVal
    (115) nullOpt -> . R_NOT R_NULL
    (116) nullOpt -> . R_NULL
    (114) defaultVal -> . R_DEFAULT literal

    R_NOT           shift and go to state 484
    R_NULL          shift and go to state 485
    R_DEFAULT       shift and go to state 483

    nullOpt                        shift and go to state 517
    defaultVal                     shift and go to state 518

state 442

    (263) alterAlter -> R_COLUMN ID R_TYPE . types
    (79) types -> . ID
    (80) types -> . T_SMALLINT
    (81) types -> . T_INTEGER
    (82) types -> . T_BIGINT
    (83) types -> . T_REAL
    (84) types -> . T_DOUBLE T_PRECISION
    (85) types -> . T_MONEY
    (86) types -> . T_TEXT
    (87) types -> . T_BOOLEAN
    (88) types -> . R_TIMESTAMP
    (89) types -> . T_DATE
    (90) types -> . T_TIME
    (91) types -> . T_DECIMAL optParams
    (92) types -> . T_NUMERIC optParams
    (93) types -> . T_VARCHAR optParams
    (94) types -> . T_CHARACTER optParams
    (95) types -> . T_CHAR optParams
    (96) types -> . T_CHARACTER T_VARYING optParams
    (97) types -> . R_INTERVAL intervalFields

    ID              shift and go to state 413
    T_SMALLINT      shift and go to state 415
    T_INTEGER       shift and go to state 416
    T_BIGINT        shift and go to state 417
    T_REAL          shift and go to state 418
    T_DOUBLE        shift and go to state 419
    T_MONEY         shift and go to state 420
    T_TEXT          shift and go to state 421
    T_BOOLEAN       shift and go to state 422
    R_TIMESTAMP     shift and go to state 423
    T_DATE          shift and go to state 424
    T_TIME          shift and go to state 425
    T_DECIMAL       shift and go to state 426
    T_NUMERIC       shift and go to state 427
    T_VARCHAR       shift and go to state 428
    T_CHARACTER     shift and go to state 429
    T_CHAR          shift and go to state 430
    R_INTERVAL      shift and go to state 431

    types                          shift and go to state 519

state 443

    (256) alterAdd -> R_COLUMN ID types .

    S_COMA          reduce using rule 256 (alterAdd -> R_COLUMN ID types .)
    S_PUNTOCOMA     reduce using rule 256 (alterAdd -> R_COLUMN ID types .)


state 444

    (260) alterAdd -> constrName R_UNIQUE S_PARIZQ . ID S_PARDER

    ID              shift and go to state 520


state 445

    (71) createConstraint -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (222) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (223) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (224) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (225) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (226) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (227) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (228) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (229) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (230) idOrLiteral -> . ID
    (231) idOrLiteral -> . INTEGER
    (232) idOrLiteral -> . STRING
    (233) idOrLiteral -> . DECIMAL
    (234) idOrLiteral -> . CHARACTER
    (235) idOrLiteral -> . R_TRUE
    (236) idOrLiteral -> . R_FALSE

    ID              shift and go to state 523
    INTEGER         shift and go to state 524
    STRING          shift and go to state 525
    DECIMAL         shift and go to state 526
    CHARACTER       shift and go to state 527
    R_TRUE          shift and go to state 528
    R_FALSE         shift and go to state 529

    booleanCheck                   shift and go to state 521
    idOrLiteral                    shift and go to state 522

state 446

    (74) createForeign -> constrName R_FOREIGN R_KEY . S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 530


state 447

    (73) createPrimary -> R_PRIMARY R_KEY S_PARIZQ . idList S_PARDER
    (77) idList -> . idList S_COMA ID
    (78) idList -> . ID

    ID              shift and go to state 215

    idList                         shift and go to state 531

state 448

    (266) alterRename -> R_COLUMN ID R_TO . ID

    ID              shift and go to state 532


state 449

    (240) alterStmt -> R_ALTER R_INDEX ifExists idOrString R_ALTER column idOrString . idOrNumber
    (243) idOrNumber -> . ID
    (244) idOrNumber -> . INTEGER

    ID              shift and go to state 534
    INTEGER         shift and go to state 535

    idOrNumber                     shift and go to state 533

state 450

    (239) alterStmt -> R_ALTER R_INDEX ifExists idOrString R_RENAME R_TO idOrString .

    S_PUNTOCOMA     reduce using rule 239 (alterStmt -> R_ALTER R_INDEX ifExists idOrString R_RENAME R_TO idOrString .)


state 451

    (322) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList . S_PARDER
    (159) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 536
    S_COMA          shift and go to state 324


state 452

    (272) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl . orderByCl
    (305) orderByCl -> . R_ORDER R_BY orderList
    (306) orderByCl -> .

    R_ORDER         shift and go to state 454
    S_PUNTOCOMA     reduce using rule 306 (orderByCl -> .)
    R_UNION         reduce using rule 306 (orderByCl -> .)
    R_INTERSECT     reduce using rule 306 (orderByCl -> .)
    R_EXCEPT        reduce using rule 306 (orderByCl -> .)
    S_PARDER        reduce using rule 306 (orderByCl -> .)

    orderByCl                      shift and go to state 537

state 453

    (273) selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl .

    S_PUNTOCOMA     reduce using rule 273 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl .)
    R_UNION         reduce using rule 273 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl .)
    R_INTERSECT     reduce using rule 273 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl .)
    R_EXCEPT        reduce using rule 273 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl .)
    S_PARDER        reduce using rule 273 (selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl limitCl orderByCl .)


state 454

    (305) orderByCl -> R_ORDER . R_BY orderList

    R_BY            shift and go to state 538


state 455

    (317) limitCl -> R_LIMIT INTEGER . offsetLimit
    (320) offsetLimit -> . R_OFFSET INTEGER
    (321) offsetLimit -> .

    R_OFFSET        shift and go to state 540
    R_ORDER         reduce using rule 321 (offsetLimit -> .)
    S_PUNTOCOMA     reduce using rule 321 (offsetLimit -> .)
    R_UNION         reduce using rule 321 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 321 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 321 (offsetLimit -> .)
    S_PARDER        reduce using rule 321 (offsetLimit -> .)

    offsetLimit                    shift and go to state 539

state 456

    (318) limitCl -> R_LIMIT R_ALL . offsetLimit
    (320) offsetLimit -> . R_OFFSET INTEGER
    (321) offsetLimit -> .

    R_OFFSET        shift and go to state 540
    R_ORDER         reduce using rule 321 (offsetLimit -> .)
    S_PUNTOCOMA     reduce using rule 321 (offsetLimit -> .)
    R_UNION         reduce using rule 321 (offsetLimit -> .)
    R_INTERSECT     reduce using rule 321 (offsetLimit -> .)
    R_EXCEPT        reduce using rule 321 (offsetLimit -> .)
    S_PARDER        reduce using rule 321 (offsetLimit -> .)

    offsetLimit                    shift and go to state 541

state 457

    (297) groupByCl -> R_GROUP R_BY groupList . havingCl
    (299) groupList -> groupList . S_COMA columnName
    (300) groupList -> groupList . S_COMA INTEGER
    (303) havingCl -> . R_HAVING expBool
    (304) havingCl -> .

    S_COMA          shift and go to state 543
    R_HAVING        shift and go to state 544
    R_LIMIT         reduce using rule 304 (havingCl -> .)
    R_ORDER         reduce using rule 304 (havingCl -> .)
    S_PUNTOCOMA     reduce using rule 304 (havingCl -> .)
    R_UNION         reduce using rule 304 (havingCl -> .)
    R_INTERSECT     reduce using rule 304 (havingCl -> .)
    R_EXCEPT        reduce using rule 304 (havingCl -> .)
    S_PARDER        reduce using rule 304 (havingCl -> .)

    havingCl                       shift and go to state 542

state 458

    (301) groupList -> columnName .

    S_COMA          reduce using rule 301 (groupList -> columnName .)
    R_HAVING        reduce using rule 301 (groupList -> columnName .)
    R_LIMIT         reduce using rule 301 (groupList -> columnName .)
    R_ORDER         reduce using rule 301 (groupList -> columnName .)
    S_PUNTOCOMA     reduce using rule 301 (groupList -> columnName .)
    R_UNION         reduce using rule 301 (groupList -> columnName .)
    R_INTERSECT     reduce using rule 301 (groupList -> columnName .)
    R_EXCEPT        reduce using rule 301 (groupList -> columnName .)
    S_PARDER        reduce using rule 301 (groupList -> columnName .)


state 459

    (302) groupList -> INTEGER .

    S_COMA          reduce using rule 302 (groupList -> INTEGER .)
    R_HAVING        reduce using rule 302 (groupList -> INTEGER .)
    R_LIMIT         reduce using rule 302 (groupList -> INTEGER .)
    R_ORDER         reduce using rule 302 (groupList -> INTEGER .)
    S_PUNTOCOMA     reduce using rule 302 (groupList -> INTEGER .)
    R_UNION         reduce using rule 302 (groupList -> INTEGER .)
    R_INTERSECT     reduce using rule 302 (groupList -> INTEGER .)
    R_EXCEPT        reduce using rule 302 (groupList -> INTEGER .)
    S_PARDER        reduce using rule 302 (groupList -> INTEGER .)


state 460

    (206) boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .

    R_AND           reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_OR            reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_IS            reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_AS            reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    ID              reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    STRING          reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    CHARACTER       reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_COMA          reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_FROM          reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PUNTOCOMA     reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_UNION         reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_INTERSECT     reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_EXCEPT        reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    S_PARDER        reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_GROUP         reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_LIMIT         reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_ORDER         reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)
    R_THEN          reduce using rule 206 (boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER .)


state 461

    (192) expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_OR            reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_IS            reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_AS            reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    ID              reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    STRING          reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    CHARACTER       reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_COMA          reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_FROM          reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_UNION         reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    S_PARDER        reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_GROUP         reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_LIMIT         reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_ORDER         reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    R_THEN          reduce using rule 192 (expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 462

    (190) expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_OR            reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_IS            reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_AS            reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    ID              reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    STRING          reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    CHARACTER       reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_COMA          reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_FROM          reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PUNTOCOMA     reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_UNION         reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_INTERSECT     reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_EXCEPT        reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    S_PARDER        reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_GROUP         reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_LIMIT         reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_ORDER         reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    R_THEN          reduce using rule 190 (expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 463

    (193) expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .
    (161) datatype -> datatype . O_SUMA datatype
    (162) datatype -> datatype . O_RESTA datatype
    (163) datatype -> datatype . O_PRODUCTO datatype
    (164) datatype -> datatype . O_DIVISION datatype
    (165) datatype -> datatype . O_EXPONENTE datatype
    (166) datatype -> datatype . O_MODULAR datatype
    (167) datatype -> datatype . OC_CONCATENAR datatype

    R_AND           reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_OR            reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_IS            reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_AS            reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    ID              reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    STRING          reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    CHARACTER       reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_COMA          reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_FROM          reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PUNTOCOMA     reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_UNION         reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_INTERSECT     reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_EXCEPT        reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    S_PARDER        reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_GROUP         reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_LIMIT         reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_ORDER         reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    R_THEN          reduce using rule 193 (expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype .)
    O_SUMA          shift and go to state 145
    O_RESTA         shift and go to state 146
    O_PRODUCTO      shift and go to state 147
    O_DIVISION      shift and go to state 148
    O_EXPONENTE     shift and go to state 149
    O_MODULAR       shift and go to state 150
    OC_CONCATENAR   shift and go to state 151


state 464

    (131) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .

    O_SUMA          reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_RESTA         reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_PRODUCTO      reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_DIVISION      reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_EXPONENTE     reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    O_MODULAR       reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OC_CONCATENAR   reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IN            reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOT           reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORQUE     reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORQUE     reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_IGUAL         reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    OL_DISTINTODE   reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_IS            reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_BETWEEN       reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ISNULL        reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_NOTNULL       reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AS            reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    ID              reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    STRING          reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    CHARACTER       reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_COMA          reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_FROM          reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PUNTOCOMA     reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_UNION         reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_INTERSECT     reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_EXCEPT        reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    S_PARDER        reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_AND           reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_OR            reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_GROUP         reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_LIMIT         reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_ORDER         reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_THEN          reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)
    R_WHERE         reduce using rule 131 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER .)


state 465

    (132) extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .

    O_SUMA          reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_RESTA         reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_PRODUCTO      reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_DIVISION      reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_EXPONENTE     reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    O_MODULAR       reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OC_CONCATENAR   reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IN            reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOT           reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORQUE     reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORQUE     reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_IGUAL         reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    OL_DISTINTODE   reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_IS            reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_BETWEEN       reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ISNULL        reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_NOTNULL       reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AS            reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    ID              reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    STRING          reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    CHARACTER       reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_COMA          reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_FROM          reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PUNTOCOMA     reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_UNION         reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_INTERSECT     reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_EXCEPT        reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    S_PARDER        reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_AND           reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_OR            reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_GROUP         reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_LIMIT         reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_ORDER         reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_THEN          reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)
    R_WHERE         reduce using rule 132 (extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER .)


state 466

    (141) datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .

    O_SUMA          reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_RESTA         reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_PRODUCTO      reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_DIVISION      reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_EXPONENTE     reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    O_MODULAR       reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OC_CONCATENAR   reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IN            reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOT           reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORQUE     reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORQUE     reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MAYORIGUALQUE reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_MENORIGUALQUE reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_IGUAL         reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    OL_DISTINTODE   reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_IS            reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_BETWEEN       reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ISNULL        reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_NOTNULL       reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AS            reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    ID              reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    STRING          reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    CHARACTER       reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_COMA          reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_FROM          reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PUNTOCOMA     reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_UNION         reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_INTERSECT     reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_EXCEPT        reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    S_PARDER        reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_AND           reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_OR            reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_GROUP         reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_LIMIT         reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_ORDER         reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_THEN          reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)
    R_WHERE         reduce using rule 141 (datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER .)


state 467

    (142) dateSource -> R_TIMESTAMP STRING .

    S_PARDER        reduce using rule 142 (dateSource -> R_TIMESTAMP STRING .)


state 468

    (143) dateSource -> T_DATE STRING .

    S_PARDER        reduce using rule 143 (dateSource -> T_DATE STRING .)


state 469

    (144) dateSource -> T_TIME STRING .

    S_PARDER        reduce using rule 144 (dateSource -> T_TIME STRING .)


state 470

    (145) dateSource -> R_INTERVAL STRING .

    S_PARDER        reduce using rule 145 (dateSource -> R_INTERVAL STRING .)


state 471

    (146) dateSource -> R_NOW S_PARIZQ . S_PARDER

    S_PARDER        shift and go to state 545


state 472

    (19) createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .

    S_PUNTOCOMA     reduce using rule 19 (createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt .)


state 473

    (52) inheritsOpt -> R_INHERITS . S_PARIZQ ID S_PARDER

    S_PARIZQ        shift and go to state 546


state 474

    (62) createTableList -> createTableList S_COMA createTable .

    S_PARDER        reduce using rule 62 (createTableList -> createTableList S_COMA createTable .)
    S_COMA          reduce using rule 62 (createTableList -> createTableList S_COMA createTable .)


state 475

    (64) createTable -> ID types createColumns .

    S_PARDER        reduce using rule 64 (createTable -> ID types createColumns .)
    S_COMA          reduce using rule 64 (createTable -> ID types createColumns .)


state 476

    (69) createColumns -> colOptionsList .
    (107) colOptionsList -> colOptionsList . colOptions
    (109) colOptions -> . defaultVal
    (110) colOptions -> . nullOpt
    (111) colOptions -> . constraintOpt
    (112) colOptions -> . primaryOpt
    (113) colOptions -> . referencesOpt
    (114) defaultVal -> . R_DEFAULT literal
    (115) nullOpt -> . R_NOT R_NULL
    (116) nullOpt -> . R_NULL
    (117) constraintOpt -> . constrName R_UNIQUE
    (118) constraintOpt -> . constrName R_CHECK S_PARIZQ booleanCheck S_PARDER
    (119) primaryOpt -> . R_PRIMARY R_KEY
    (120) referencesOpt -> . R_REFERENCES ID
    (75) constrName -> . R_CONSTRAINT ID
    (76) constrName -> .

    S_PARDER        reduce using rule 69 (createColumns -> colOptionsList .)
    S_COMA          reduce using rule 69 (createColumns -> colOptionsList .)
    R_DEFAULT       shift and go to state 483
    R_NOT           shift and go to state 484
    R_NULL          shift and go to state 485
    R_PRIMARY       shift and go to state 487
    R_REFERENCES    shift and go to state 488
    R_CONSTRAINT    shift and go to state 303
    R_UNIQUE        reduce using rule 76 (constrName -> .)
    R_CHECK         reduce using rule 76 (constrName -> .)

    colOptions                     shift and go to state 547
    defaultVal                     shift and go to state 478
    nullOpt                        shift and go to state 479
    constraintOpt                  shift and go to state 480
    primaryOpt                     shift and go to state 481
    referencesOpt                  shift and go to state 482
    constrName                     shift and go to state 486

state 477

    (108) colOptionsList -> colOptions .

    R_DEFAULT       reduce using rule 108 (colOptionsList -> colOptions .)
    R_NOT           reduce using rule 108 (colOptionsList -> colOptions .)
    R_NULL          reduce using rule 108 (colOptionsList -> colOptions .)
    R_PRIMARY       reduce using rule 108 (colOptionsList -> colOptions .)
    R_REFERENCES    reduce using rule 108 (colOptionsList -> colOptions .)
    R_CONSTRAINT    reduce using rule 108 (colOptionsList -> colOptions .)
    R_UNIQUE        reduce using rule 108 (colOptionsList -> colOptions .)
    R_CHECK         reduce using rule 108 (colOptionsList -> colOptions .)
    S_PARDER        reduce using rule 108 (colOptionsList -> colOptions .)
    S_COMA          reduce using rule 108 (colOptionsList -> colOptions .)


state 478

    (109) colOptions -> defaultVal .

    R_DEFAULT       reduce using rule 109 (colOptions -> defaultVal .)
    R_NOT           reduce using rule 109 (colOptions -> defaultVal .)
    R_NULL          reduce using rule 109 (colOptions -> defaultVal .)
    R_PRIMARY       reduce using rule 109 (colOptions -> defaultVal .)
    R_REFERENCES    reduce using rule 109 (colOptions -> defaultVal .)
    R_CONSTRAINT    reduce using rule 109 (colOptions -> defaultVal .)
    R_UNIQUE        reduce using rule 109 (colOptions -> defaultVal .)
    R_CHECK         reduce using rule 109 (colOptions -> defaultVal .)
    S_PARDER        reduce using rule 109 (colOptions -> defaultVal .)
    S_COMA          reduce using rule 109 (colOptions -> defaultVal .)


state 479

    (110) colOptions -> nullOpt .

    R_DEFAULT       reduce using rule 110 (colOptions -> nullOpt .)
    R_NOT           reduce using rule 110 (colOptions -> nullOpt .)
    R_NULL          reduce using rule 110 (colOptions -> nullOpt .)
    R_PRIMARY       reduce using rule 110 (colOptions -> nullOpt .)
    R_REFERENCES    reduce using rule 110 (colOptions -> nullOpt .)
    R_CONSTRAINT    reduce using rule 110 (colOptions -> nullOpt .)
    R_UNIQUE        reduce using rule 110 (colOptions -> nullOpt .)
    R_CHECK         reduce using rule 110 (colOptions -> nullOpt .)
    S_PARDER        reduce using rule 110 (colOptions -> nullOpt .)
    S_COMA          reduce using rule 110 (colOptions -> nullOpt .)


state 480

    (111) colOptions -> constraintOpt .

    R_DEFAULT       reduce using rule 111 (colOptions -> constraintOpt .)
    R_NOT           reduce using rule 111 (colOptions -> constraintOpt .)
    R_NULL          reduce using rule 111 (colOptions -> constraintOpt .)
    R_PRIMARY       reduce using rule 111 (colOptions -> constraintOpt .)
    R_REFERENCES    reduce using rule 111 (colOptions -> constraintOpt .)
    R_CONSTRAINT    reduce using rule 111 (colOptions -> constraintOpt .)
    R_UNIQUE        reduce using rule 111 (colOptions -> constraintOpt .)
    R_CHECK         reduce using rule 111 (colOptions -> constraintOpt .)
    S_PARDER        reduce using rule 111 (colOptions -> constraintOpt .)
    S_COMA          reduce using rule 111 (colOptions -> constraintOpt .)


state 481

    (112) colOptions -> primaryOpt .

    R_DEFAULT       reduce using rule 112 (colOptions -> primaryOpt .)
    R_NOT           reduce using rule 112 (colOptions -> primaryOpt .)
    R_NULL          reduce using rule 112 (colOptions -> primaryOpt .)
    R_PRIMARY       reduce using rule 112 (colOptions -> primaryOpt .)
    R_REFERENCES    reduce using rule 112 (colOptions -> primaryOpt .)
    R_CONSTRAINT    reduce using rule 112 (colOptions -> primaryOpt .)
    R_UNIQUE        reduce using rule 112 (colOptions -> primaryOpt .)
    R_CHECK         reduce using rule 112 (colOptions -> primaryOpt .)
    S_PARDER        reduce using rule 112 (colOptions -> primaryOpt .)
    S_COMA          reduce using rule 112 (colOptions -> primaryOpt .)


state 482

    (113) colOptions -> referencesOpt .

    R_DEFAULT       reduce using rule 113 (colOptions -> referencesOpt .)
    R_NOT           reduce using rule 113 (colOptions -> referencesOpt .)
    R_NULL          reduce using rule 113 (colOptions -> referencesOpt .)
    R_PRIMARY       reduce using rule 113 (colOptions -> referencesOpt .)
    R_REFERENCES    reduce using rule 113 (colOptions -> referencesOpt .)
    R_CONSTRAINT    reduce using rule 113 (colOptions -> referencesOpt .)
    R_UNIQUE        reduce using rule 113 (colOptions -> referencesOpt .)
    R_CHECK         reduce using rule 113 (colOptions -> referencesOpt .)
    S_PARDER        reduce using rule 113 (colOptions -> referencesOpt .)
    S_COMA          reduce using rule 113 (colOptions -> referencesOpt .)


state 483

    (114) defaultVal -> R_DEFAULT . literal
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL

    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91

    literal                        shift and go to state 548

state 484

    (115) nullOpt -> R_NOT . R_NULL

    R_NULL          shift and go to state 549


state 485

    (116) nullOpt -> R_NULL .

    R_DEFAULT       reduce using rule 116 (nullOpt -> R_NULL .)
    R_NOT           reduce using rule 116 (nullOpt -> R_NULL .)
    R_NULL          reduce using rule 116 (nullOpt -> R_NULL .)
    R_PRIMARY       reduce using rule 116 (nullOpt -> R_NULL .)
    R_REFERENCES    reduce using rule 116 (nullOpt -> R_NULL .)
    R_CONSTRAINT    reduce using rule 116 (nullOpt -> R_NULL .)
    R_UNIQUE        reduce using rule 116 (nullOpt -> R_NULL .)
    R_CHECK         reduce using rule 116 (nullOpt -> R_NULL .)
    S_PARDER        reduce using rule 116 (nullOpt -> R_NULL .)
    S_COMA          reduce using rule 116 (nullOpt -> R_NULL .)
    S_PUNTOCOMA     reduce using rule 116 (nullOpt -> R_NULL .)


state 486

    (117) constraintOpt -> constrName . R_UNIQUE
    (118) constraintOpt -> constrName . R_CHECK S_PARIZQ booleanCheck S_PARDER

    R_UNIQUE        shift and go to state 550
    R_CHECK         shift and go to state 551


state 487

    (119) primaryOpt -> R_PRIMARY . R_KEY

    R_KEY           shift and go to state 552


state 488

    (120) referencesOpt -> R_REFERENCES . ID

    ID              shift and go to state 553


state 489

    (84) types -> T_DOUBLE T_PRECISION .

    R_DEFAULT       reduce using rule 84 (types -> T_DOUBLE T_PRECISION .)
    R_NOT           reduce using rule 84 (types -> T_DOUBLE T_PRECISION .)
    R_NULL          reduce using rule 84 (types -> T_DOUBLE T_PRECISION .)
    R_PRIMARY       reduce using rule 84 (types -> T_DOUBLE T_PRECISION .)
    R_REFERENCES    reduce using rule 84 (types -> T_DOUBLE T_PRECISION .)
    R_CONSTRAINT    reduce using rule 84 (types -> T_DOUBLE T_PRECISION .)
    R_UNIQUE        reduce using rule 84 (types -> T_DOUBLE T_PRECISION .)
    R_CHECK         reduce using rule 84 (types -> T_DOUBLE T_PRECISION .)
    S_PARDER        reduce using rule 84 (types -> T_DOUBLE T_PRECISION .)
    S_COMA          reduce using rule 84 (types -> T_DOUBLE T_PRECISION .)
    S_PUNTOCOMA     reduce using rule 84 (types -> T_DOUBLE T_PRECISION .)


state 490

    (91) types -> T_DECIMAL optParams .

    R_DEFAULT       reduce using rule 91 (types -> T_DECIMAL optParams .)
    R_NOT           reduce using rule 91 (types -> T_DECIMAL optParams .)
    R_NULL          reduce using rule 91 (types -> T_DECIMAL optParams .)
    R_PRIMARY       reduce using rule 91 (types -> T_DECIMAL optParams .)
    R_REFERENCES    reduce using rule 91 (types -> T_DECIMAL optParams .)
    R_CONSTRAINT    reduce using rule 91 (types -> T_DECIMAL optParams .)
    R_UNIQUE        reduce using rule 91 (types -> T_DECIMAL optParams .)
    R_CHECK         reduce using rule 91 (types -> T_DECIMAL optParams .)
    S_PARDER        reduce using rule 91 (types -> T_DECIMAL optParams .)
    S_COMA          reduce using rule 91 (types -> T_DECIMAL optParams .)
    S_PUNTOCOMA     reduce using rule 91 (types -> T_DECIMAL optParams .)


state 491

    (105) optParams -> S_PARIZQ . literalList S_PARDER
    (150) literalList -> . literalList S_COMA literal
    (151) literalList -> . literal
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL

    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91

    literalList                    shift and go to state 554
    literal                        shift and go to state 555

state 492

    (92) types -> T_NUMERIC optParams .

    R_DEFAULT       reduce using rule 92 (types -> T_NUMERIC optParams .)
    R_NOT           reduce using rule 92 (types -> T_NUMERIC optParams .)
    R_NULL          reduce using rule 92 (types -> T_NUMERIC optParams .)
    R_PRIMARY       reduce using rule 92 (types -> T_NUMERIC optParams .)
    R_REFERENCES    reduce using rule 92 (types -> T_NUMERIC optParams .)
    R_CONSTRAINT    reduce using rule 92 (types -> T_NUMERIC optParams .)
    R_UNIQUE        reduce using rule 92 (types -> T_NUMERIC optParams .)
    R_CHECK         reduce using rule 92 (types -> T_NUMERIC optParams .)
    S_PARDER        reduce using rule 92 (types -> T_NUMERIC optParams .)
    S_COMA          reduce using rule 92 (types -> T_NUMERIC optParams .)
    S_PUNTOCOMA     reduce using rule 92 (types -> T_NUMERIC optParams .)


state 493

    (93) types -> T_VARCHAR optParams .

    R_DEFAULT       reduce using rule 93 (types -> T_VARCHAR optParams .)
    R_NOT           reduce using rule 93 (types -> T_VARCHAR optParams .)
    R_NULL          reduce using rule 93 (types -> T_VARCHAR optParams .)
    R_PRIMARY       reduce using rule 93 (types -> T_VARCHAR optParams .)
    R_REFERENCES    reduce using rule 93 (types -> T_VARCHAR optParams .)
    R_CONSTRAINT    reduce using rule 93 (types -> T_VARCHAR optParams .)
    R_UNIQUE        reduce using rule 93 (types -> T_VARCHAR optParams .)
    R_CHECK         reduce using rule 93 (types -> T_VARCHAR optParams .)
    S_PARDER        reduce using rule 93 (types -> T_VARCHAR optParams .)
    S_COMA          reduce using rule 93 (types -> T_VARCHAR optParams .)
    S_PUNTOCOMA     reduce using rule 93 (types -> T_VARCHAR optParams .)


state 494

    (94) types -> T_CHARACTER optParams .

    R_DEFAULT       reduce using rule 94 (types -> T_CHARACTER optParams .)
    R_NOT           reduce using rule 94 (types -> T_CHARACTER optParams .)
    R_NULL          reduce using rule 94 (types -> T_CHARACTER optParams .)
    R_PRIMARY       reduce using rule 94 (types -> T_CHARACTER optParams .)
    R_REFERENCES    reduce using rule 94 (types -> T_CHARACTER optParams .)
    R_CONSTRAINT    reduce using rule 94 (types -> T_CHARACTER optParams .)
    R_UNIQUE        reduce using rule 94 (types -> T_CHARACTER optParams .)
    R_CHECK         reduce using rule 94 (types -> T_CHARACTER optParams .)
    S_PARDER        reduce using rule 94 (types -> T_CHARACTER optParams .)
    S_COMA          reduce using rule 94 (types -> T_CHARACTER optParams .)
    S_PUNTOCOMA     reduce using rule 94 (types -> T_CHARACTER optParams .)


state 495

    (96) types -> T_CHARACTER T_VARYING . optParams
    (105) optParams -> . S_PARIZQ literalList S_PARDER
    (106) optParams -> .

    S_PARIZQ        shift and go to state 491
    R_DEFAULT       reduce using rule 106 (optParams -> .)
    R_NOT           reduce using rule 106 (optParams -> .)
    R_NULL          reduce using rule 106 (optParams -> .)
    R_PRIMARY       reduce using rule 106 (optParams -> .)
    R_REFERENCES    reduce using rule 106 (optParams -> .)
    R_CONSTRAINT    reduce using rule 106 (optParams -> .)
    R_UNIQUE        reduce using rule 106 (optParams -> .)
    R_CHECK         reduce using rule 106 (optParams -> .)
    S_PARDER        reduce using rule 106 (optParams -> .)
    S_COMA          reduce using rule 106 (optParams -> .)
    S_PUNTOCOMA     reduce using rule 106 (optParams -> .)

    optParams                      shift and go to state 556

state 496

    (95) types -> T_CHAR optParams .

    R_DEFAULT       reduce using rule 95 (types -> T_CHAR optParams .)
    R_NOT           reduce using rule 95 (types -> T_CHAR optParams .)
    R_NULL          reduce using rule 95 (types -> T_CHAR optParams .)
    R_PRIMARY       reduce using rule 95 (types -> T_CHAR optParams .)
    R_REFERENCES    reduce using rule 95 (types -> T_CHAR optParams .)
    R_CONSTRAINT    reduce using rule 95 (types -> T_CHAR optParams .)
    R_UNIQUE        reduce using rule 95 (types -> T_CHAR optParams .)
    R_CHECK         reduce using rule 95 (types -> T_CHAR optParams .)
    S_PARDER        reduce using rule 95 (types -> T_CHAR optParams .)
    S_COMA          reduce using rule 95 (types -> T_CHAR optParams .)
    S_PUNTOCOMA     reduce using rule 95 (types -> T_CHAR optParams .)


state 497

    (97) types -> R_INTERVAL intervalFields .

    R_DEFAULT       reduce using rule 97 (types -> R_INTERVAL intervalFields .)
    R_NOT           reduce using rule 97 (types -> R_INTERVAL intervalFields .)
    R_NULL          reduce using rule 97 (types -> R_INTERVAL intervalFields .)
    R_PRIMARY       reduce using rule 97 (types -> R_INTERVAL intervalFields .)
    R_REFERENCES    reduce using rule 97 (types -> R_INTERVAL intervalFields .)
    R_CONSTRAINT    reduce using rule 97 (types -> R_INTERVAL intervalFields .)
    R_UNIQUE        reduce using rule 97 (types -> R_INTERVAL intervalFields .)
    R_CHECK         reduce using rule 97 (types -> R_INTERVAL intervalFields .)
    S_PARDER        reduce using rule 97 (types -> R_INTERVAL intervalFields .)
    S_COMA          reduce using rule 97 (types -> R_INTERVAL intervalFields .)
    S_PUNTOCOMA     reduce using rule 97 (types -> R_INTERVAL intervalFields .)


state 498

    (98) intervalFields -> R_YEAR .

    R_DEFAULT       reduce using rule 98 (intervalFields -> R_YEAR .)
    R_NOT           reduce using rule 98 (intervalFields -> R_YEAR .)
    R_NULL          reduce using rule 98 (intervalFields -> R_YEAR .)
    R_PRIMARY       reduce using rule 98 (intervalFields -> R_YEAR .)
    R_REFERENCES    reduce using rule 98 (intervalFields -> R_YEAR .)
    R_CONSTRAINT    reduce using rule 98 (intervalFields -> R_YEAR .)
    R_UNIQUE        reduce using rule 98 (intervalFields -> R_YEAR .)
    R_CHECK         reduce using rule 98 (intervalFields -> R_YEAR .)
    S_PARDER        reduce using rule 98 (intervalFields -> R_YEAR .)
    S_COMA          reduce using rule 98 (intervalFields -> R_YEAR .)
    S_PUNTOCOMA     reduce using rule 98 (intervalFields -> R_YEAR .)


state 499

    (99) intervalFields -> R_MONTH .

    R_DEFAULT       reduce using rule 99 (intervalFields -> R_MONTH .)
    R_NOT           reduce using rule 99 (intervalFields -> R_MONTH .)
    R_NULL          reduce using rule 99 (intervalFields -> R_MONTH .)
    R_PRIMARY       reduce using rule 99 (intervalFields -> R_MONTH .)
    R_REFERENCES    reduce using rule 99 (intervalFields -> R_MONTH .)
    R_CONSTRAINT    reduce using rule 99 (intervalFields -> R_MONTH .)
    R_UNIQUE        reduce using rule 99 (intervalFields -> R_MONTH .)
    R_CHECK         reduce using rule 99 (intervalFields -> R_MONTH .)
    S_PARDER        reduce using rule 99 (intervalFields -> R_MONTH .)
    S_COMA          reduce using rule 99 (intervalFields -> R_MONTH .)
    S_PUNTOCOMA     reduce using rule 99 (intervalFields -> R_MONTH .)


state 500

    (100) intervalFields -> R_DAY .

    R_DEFAULT       reduce using rule 100 (intervalFields -> R_DAY .)
    R_NOT           reduce using rule 100 (intervalFields -> R_DAY .)
    R_NULL          reduce using rule 100 (intervalFields -> R_DAY .)
    R_PRIMARY       reduce using rule 100 (intervalFields -> R_DAY .)
    R_REFERENCES    reduce using rule 100 (intervalFields -> R_DAY .)
    R_CONSTRAINT    reduce using rule 100 (intervalFields -> R_DAY .)
    R_UNIQUE        reduce using rule 100 (intervalFields -> R_DAY .)
    R_CHECK         reduce using rule 100 (intervalFields -> R_DAY .)
    S_PARDER        reduce using rule 100 (intervalFields -> R_DAY .)
    S_COMA          reduce using rule 100 (intervalFields -> R_DAY .)
    S_PUNTOCOMA     reduce using rule 100 (intervalFields -> R_DAY .)


state 501

    (101) intervalFields -> R_HOUR .

    R_DEFAULT       reduce using rule 101 (intervalFields -> R_HOUR .)
    R_NOT           reduce using rule 101 (intervalFields -> R_HOUR .)
    R_NULL          reduce using rule 101 (intervalFields -> R_HOUR .)
    R_PRIMARY       reduce using rule 101 (intervalFields -> R_HOUR .)
    R_REFERENCES    reduce using rule 101 (intervalFields -> R_HOUR .)
    R_CONSTRAINT    reduce using rule 101 (intervalFields -> R_HOUR .)
    R_UNIQUE        reduce using rule 101 (intervalFields -> R_HOUR .)
    R_CHECK         reduce using rule 101 (intervalFields -> R_HOUR .)
    S_PARDER        reduce using rule 101 (intervalFields -> R_HOUR .)
    S_COMA          reduce using rule 101 (intervalFields -> R_HOUR .)
    S_PUNTOCOMA     reduce using rule 101 (intervalFields -> R_HOUR .)


state 502

    (102) intervalFields -> R_MINUTE .

    R_DEFAULT       reduce using rule 102 (intervalFields -> R_MINUTE .)
    R_NOT           reduce using rule 102 (intervalFields -> R_MINUTE .)
    R_NULL          reduce using rule 102 (intervalFields -> R_MINUTE .)
    R_PRIMARY       reduce using rule 102 (intervalFields -> R_MINUTE .)
    R_REFERENCES    reduce using rule 102 (intervalFields -> R_MINUTE .)
    R_CONSTRAINT    reduce using rule 102 (intervalFields -> R_MINUTE .)
    R_UNIQUE        reduce using rule 102 (intervalFields -> R_MINUTE .)
    R_CHECK         reduce using rule 102 (intervalFields -> R_MINUTE .)
    S_PARDER        reduce using rule 102 (intervalFields -> R_MINUTE .)
    S_COMA          reduce using rule 102 (intervalFields -> R_MINUTE .)
    S_PUNTOCOMA     reduce using rule 102 (intervalFields -> R_MINUTE .)


state 503

    (103) intervalFields -> R_SECOND .

    R_DEFAULT       reduce using rule 103 (intervalFields -> R_SECOND .)
    R_NOT           reduce using rule 103 (intervalFields -> R_SECOND .)
    R_NULL          reduce using rule 103 (intervalFields -> R_SECOND .)
    R_PRIMARY       reduce using rule 103 (intervalFields -> R_SECOND .)
    R_REFERENCES    reduce using rule 103 (intervalFields -> R_SECOND .)
    R_CONSTRAINT    reduce using rule 103 (intervalFields -> R_SECOND .)
    R_UNIQUE        reduce using rule 103 (intervalFields -> R_SECOND .)
    R_CHECK         reduce using rule 103 (intervalFields -> R_SECOND .)
    S_PARDER        reduce using rule 103 (intervalFields -> R_SECOND .)
    S_COMA          reduce using rule 103 (intervalFields -> R_SECOND .)
    S_PUNTOCOMA     reduce using rule 103 (intervalFields -> R_SECOND .)


state 504

    (72) createUnique -> R_UNIQUE S_PARIZQ idList . S_PARDER
    (77) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 557
    S_COMA          shift and go to state 311


state 505

    (59) createMode -> R_MODE INTEGER .

    S_PUNTOCOMA     reduce using rule 59 (createMode -> R_MODE INTEGER .)


state 506

    (60) createMode -> R_MODE S_IGUAL . INTEGER

    INTEGER         shift and go to state 558


state 507

    (56) createOwner -> R_OWNER S_IGUAL ID .

    R_MODE          reduce using rule 56 (createOwner -> R_OWNER S_IGUAL ID .)
    S_PUNTOCOMA     reduce using rule 56 (createOwner -> R_OWNER S_IGUAL ID .)


state 508

    (57) createOwner -> R_OWNER S_IGUAL STRING .

    R_MODE          reduce using rule 57 (createOwner -> R_OWNER S_IGUAL STRING .)
    S_PUNTOCOMA     reduce using rule 57 (createOwner -> R_OWNER S_IGUAL STRING .)


state 509

    (21) createOpts -> indexUnique R_INDEX indexName R_ON ID usingMethod S_PARIZQ . indexList S_PARDER whereCl
    (24) indexList -> . indexList S_COMA columnIndex
    (25) indexList -> . columnIndex
    (26) columnIndex -> . columnOpt indexOrder indexNull
    (27) columnOpt -> . ID
    (28) columnOpt -> . ID S_PARIZQ ID S_PARDER
    (29) columnOpt -> . S_PARIZQ columnOpt S_PARDER

    ID              shift and go to state 559
    S_PARIZQ        shift and go to state 560

    indexList                      shift and go to state 561
    columnIndex                    shift and go to state 562
    columnOpt                      shift and go to state 563

state 510

    (30) usingMethod -> R_USING R_HASH .

    S_PARIZQ        reduce using rule 30 (usingMethod -> R_USING R_HASH .)


state 511

    (31) usingMethod -> R_USING R_BTREE .

    S_PARIZQ        reduce using rule 31 (usingMethod -> R_USING R_BTREE .)


state 512

    (32) usingMethod -> R_USING R_GIST .

    S_PARIZQ        reduce using rule 32 (usingMethod -> R_USING R_GIST .)


state 513

    (33) usingMethod -> R_USING R_SPGIST .

    S_PARIZQ        reduce using rule 33 (usingMethod -> R_USING R_SPGIST .)


state 514

    (34) usingMethod -> R_USING R_GIN .

    S_PARIZQ        reduce using rule 34 (usingMethod -> R_USING R_GIN .)


state 515

    (35) usingMethod -> R_USING R_BRIN .

    S_PARIZQ        reduce using rule 35 (usingMethod -> R_USING R_BRIN .)


state 516

    (49) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList . S_PARDER
    (159) paramsList -> paramsList . S_COMA datatype

    S_PARDER        shift and go to state 564
    S_COMA          shift and go to state 324


state 517

    (261) alterAlter -> R_COLUMN ID R_SET nullOpt .

    S_COMA          reduce using rule 261 (alterAlter -> R_COLUMN ID R_SET nullOpt .)
    S_PUNTOCOMA     reduce using rule 261 (alterAlter -> R_COLUMN ID R_SET nullOpt .)


state 518

    (262) alterAlter -> R_COLUMN ID R_SET defaultVal .

    S_COMA          reduce using rule 262 (alterAlter -> R_COLUMN ID R_SET defaultVal .)
    S_PUNTOCOMA     reduce using rule 262 (alterAlter -> R_COLUMN ID R_SET defaultVal .)


state 519

    (263) alterAlter -> R_COLUMN ID R_TYPE types .

    S_COMA          reduce using rule 263 (alterAlter -> R_COLUMN ID R_TYPE types .)
    S_PUNTOCOMA     reduce using rule 263 (alterAlter -> R_COLUMN ID R_TYPE types .)


state 520

    (260) alterAdd -> constrName R_UNIQUE S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 565


state 521

    (71) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 566


state 522

    (222) booleanCheck -> idOrLiteral . OL_MENORQUE idOrLiteral
    (223) booleanCheck -> idOrLiteral . OL_MAYORQUE idOrLiteral
    (224) booleanCheck -> idOrLiteral . OL_MAYORIGUALQUE idOrLiteral
    (225) booleanCheck -> idOrLiteral . OL_MENORIGUALQUE idOrLiteral
    (226) booleanCheck -> idOrLiteral . S_IGUAL idOrLiteral
    (227) booleanCheck -> idOrLiteral . OL_DISTINTODE idOrLiteral
    (228) booleanCheck -> idOrLiteral . R_IS R_DISTINCT R_FROM idOrLiteral
    (229) booleanCheck -> idOrLiteral . R_IS R_NOT R_DISTINCT R_FROM idOrLiteral

    OL_MENORQUE     shift and go to state 567
    OL_MAYORQUE     shift and go to state 568
    OL_MAYORIGUALQUE shift and go to state 569
    OL_MENORIGUALQUE shift and go to state 570
    S_IGUAL         shift and go to state 571
    OL_DISTINTODE   shift and go to state 572
    R_IS            shift and go to state 573


state 523

    (230) idOrLiteral -> ID .

    OL_MENORQUE     reduce using rule 230 (idOrLiteral -> ID .)
    OL_MAYORQUE     reduce using rule 230 (idOrLiteral -> ID .)
    OL_MAYORIGUALQUE reduce using rule 230 (idOrLiteral -> ID .)
    OL_MENORIGUALQUE reduce using rule 230 (idOrLiteral -> ID .)
    S_IGUAL         reduce using rule 230 (idOrLiteral -> ID .)
    OL_DISTINTODE   reduce using rule 230 (idOrLiteral -> ID .)
    R_IS            reduce using rule 230 (idOrLiteral -> ID .)
    S_PARDER        reduce using rule 230 (idOrLiteral -> ID .)


state 524

    (231) idOrLiteral -> INTEGER .

    OL_MENORQUE     reduce using rule 231 (idOrLiteral -> INTEGER .)
    OL_MAYORQUE     reduce using rule 231 (idOrLiteral -> INTEGER .)
    OL_MAYORIGUALQUE reduce using rule 231 (idOrLiteral -> INTEGER .)
    OL_MENORIGUALQUE reduce using rule 231 (idOrLiteral -> INTEGER .)
    S_IGUAL         reduce using rule 231 (idOrLiteral -> INTEGER .)
    OL_DISTINTODE   reduce using rule 231 (idOrLiteral -> INTEGER .)
    R_IS            reduce using rule 231 (idOrLiteral -> INTEGER .)
    S_PARDER        reduce using rule 231 (idOrLiteral -> INTEGER .)


state 525

    (232) idOrLiteral -> STRING .

    OL_MENORQUE     reduce using rule 232 (idOrLiteral -> STRING .)
    OL_MAYORQUE     reduce using rule 232 (idOrLiteral -> STRING .)
    OL_MAYORIGUALQUE reduce using rule 232 (idOrLiteral -> STRING .)
    OL_MENORIGUALQUE reduce using rule 232 (idOrLiteral -> STRING .)
    S_IGUAL         reduce using rule 232 (idOrLiteral -> STRING .)
    OL_DISTINTODE   reduce using rule 232 (idOrLiteral -> STRING .)
    R_IS            reduce using rule 232 (idOrLiteral -> STRING .)
    S_PARDER        reduce using rule 232 (idOrLiteral -> STRING .)


state 526

    (233) idOrLiteral -> DECIMAL .

    OL_MENORQUE     reduce using rule 233 (idOrLiteral -> DECIMAL .)
    OL_MAYORQUE     reduce using rule 233 (idOrLiteral -> DECIMAL .)
    OL_MAYORIGUALQUE reduce using rule 233 (idOrLiteral -> DECIMAL .)
    OL_MENORIGUALQUE reduce using rule 233 (idOrLiteral -> DECIMAL .)
    S_IGUAL         reduce using rule 233 (idOrLiteral -> DECIMAL .)
    OL_DISTINTODE   reduce using rule 233 (idOrLiteral -> DECIMAL .)
    R_IS            reduce using rule 233 (idOrLiteral -> DECIMAL .)
    S_PARDER        reduce using rule 233 (idOrLiteral -> DECIMAL .)


state 527

    (234) idOrLiteral -> CHARACTER .

    OL_MENORQUE     reduce using rule 234 (idOrLiteral -> CHARACTER .)
    OL_MAYORQUE     reduce using rule 234 (idOrLiteral -> CHARACTER .)
    OL_MAYORIGUALQUE reduce using rule 234 (idOrLiteral -> CHARACTER .)
    OL_MENORIGUALQUE reduce using rule 234 (idOrLiteral -> CHARACTER .)
    S_IGUAL         reduce using rule 234 (idOrLiteral -> CHARACTER .)
    OL_DISTINTODE   reduce using rule 234 (idOrLiteral -> CHARACTER .)
    R_IS            reduce using rule 234 (idOrLiteral -> CHARACTER .)
    S_PARDER        reduce using rule 234 (idOrLiteral -> CHARACTER .)


state 528

    (235) idOrLiteral -> R_TRUE .

    OL_MENORQUE     reduce using rule 235 (idOrLiteral -> R_TRUE .)
    OL_MAYORQUE     reduce using rule 235 (idOrLiteral -> R_TRUE .)
    OL_MAYORIGUALQUE reduce using rule 235 (idOrLiteral -> R_TRUE .)
    OL_MENORIGUALQUE reduce using rule 235 (idOrLiteral -> R_TRUE .)
    S_IGUAL         reduce using rule 235 (idOrLiteral -> R_TRUE .)
    OL_DISTINTODE   reduce using rule 235 (idOrLiteral -> R_TRUE .)
    R_IS            reduce using rule 235 (idOrLiteral -> R_TRUE .)
    S_PARDER        reduce using rule 235 (idOrLiteral -> R_TRUE .)


state 529

    (236) idOrLiteral -> R_FALSE .

    OL_MENORQUE     reduce using rule 236 (idOrLiteral -> R_FALSE .)
    OL_MAYORQUE     reduce using rule 236 (idOrLiteral -> R_FALSE .)
    OL_MAYORIGUALQUE reduce using rule 236 (idOrLiteral -> R_FALSE .)
    OL_MENORIGUALQUE reduce using rule 236 (idOrLiteral -> R_FALSE .)
    S_IGUAL         reduce using rule 236 (idOrLiteral -> R_FALSE .)
    OL_DISTINTODE   reduce using rule 236 (idOrLiteral -> R_FALSE .)
    R_IS            reduce using rule 236 (idOrLiteral -> R_FALSE .)
    S_PARDER        reduce using rule 236 (idOrLiteral -> R_FALSE .)


state 530

    (74) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ . idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (77) idList -> . idList S_COMA ID
    (78) idList -> . ID

    ID              shift and go to state 215

    idList                         shift and go to state 574

state 531

    (73) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList . S_PARDER
    (77) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 575
    S_COMA          shift and go to state 311


state 532

    (266) alterRename -> R_COLUMN ID R_TO ID .

    S_COMA          reduce using rule 266 (alterRename -> R_COLUMN ID R_TO ID .)
    S_PUNTOCOMA     reduce using rule 266 (alterRename -> R_COLUMN ID R_TO ID .)


state 533

    (240) alterStmt -> R_ALTER R_INDEX ifExists idOrString R_ALTER column idOrString idOrNumber .

    S_PUNTOCOMA     reduce using rule 240 (alterStmt -> R_ALTER R_INDEX ifExists idOrString R_ALTER column idOrString idOrNumber .)


state 534

    (243) idOrNumber -> ID .

    S_PUNTOCOMA     reduce using rule 243 (idOrNumber -> ID .)


state 535

    (244) idOrNumber -> INTEGER .

    S_PUNTOCOMA     reduce using rule 244 (idOrNumber -> INTEGER .)


state 536

    (322) insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 322 (insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER .)


state 537

    (272) selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl .

    S_PUNTOCOMA     reduce using rule 272 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl .)
    R_UNION         reduce using rule 272 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl .)
    R_INTERSECT     reduce using rule 272 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl .)
    R_EXCEPT        reduce using rule 272 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl .)
    S_PARDER        reduce using rule 272 (selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl limitCl orderByCl .)


state 538

    (305) orderByCl -> R_ORDER R_BY . orderList
    (307) orderList -> . orderList S_COMA orderByElem
    (308) orderList -> . orderByElem
    (309) orderByElem -> . columnName orderOpts orderNull
    (310) orderByElem -> . INTEGER orderOpts orderNull
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 579
    ID              shift and go to state 404

    orderList                      shift and go to state 576
    orderByElem                    shift and go to state 577
    columnName                     shift and go to state 578

state 539

    (317) limitCl -> R_LIMIT INTEGER offsetLimit .

    R_ORDER         reduce using rule 317 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    S_PUNTOCOMA     reduce using rule 317 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_UNION         reduce using rule 317 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_INTERSECT     reduce using rule 317 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    R_EXCEPT        reduce using rule 317 (limitCl -> R_LIMIT INTEGER offsetLimit .)
    S_PARDER        reduce using rule 317 (limitCl -> R_LIMIT INTEGER offsetLimit .)


state 540

    (320) offsetLimit -> R_OFFSET . INTEGER

    INTEGER         shift and go to state 580


state 541

    (318) limitCl -> R_LIMIT R_ALL offsetLimit .

    R_ORDER         reduce using rule 318 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    S_PUNTOCOMA     reduce using rule 318 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_UNION         reduce using rule 318 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_INTERSECT     reduce using rule 318 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    R_EXCEPT        reduce using rule 318 (limitCl -> R_LIMIT R_ALL offsetLimit .)
    S_PARDER        reduce using rule 318 (limitCl -> R_LIMIT R_ALL offsetLimit .)


state 542

    (297) groupByCl -> R_GROUP R_BY groupList havingCl .

    R_LIMIT         reduce using rule 297 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_ORDER         reduce using rule 297 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PUNTOCOMA     reduce using rule 297 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_UNION         reduce using rule 297 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_INTERSECT     reduce using rule 297 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    R_EXCEPT        reduce using rule 297 (groupByCl -> R_GROUP R_BY groupList havingCl .)
    S_PARDER        reduce using rule 297 (groupByCl -> R_GROUP R_BY groupList havingCl .)


state 543

    (299) groupList -> groupList S_COMA . columnName
    (300) groupList -> groupList S_COMA . INTEGER
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 582
    ID              shift and go to state 404

    columnName                     shift and go to state 581

state 544

    (303) havingCl -> R_HAVING . expBool
    (208) expBool -> . expBool R_AND expBool
    (209) expBool -> . expBool R_OR expBool
    (210) expBool -> . R_NOT expBool
    (211) expBool -> . S_PARIZQ expBool S_PARDER
    (212) expBool -> . expBool optBoolPredicate
    (213) expBool -> . boolean
    (204) boolean -> . R_EXISTS S_PARIZQ selectStmt S_PARDER
    (205) boolean -> . datatype R_IN S_PARIZQ selectStmt S_PARDER
    (206) boolean -> . datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER
    (207) boolean -> . expComp
    (161) datatype -> . datatype O_SUMA datatype
    (162) datatype -> . datatype O_RESTA datatype
    (163) datatype -> . datatype O_PRODUCTO datatype
    (164) datatype -> . datatype O_DIVISION datatype
    (165) datatype -> . datatype O_EXPONENTE datatype
    (166) datatype -> . datatype O_MODULAR datatype
    (167) datatype -> . datatype OC_CONCATENAR datatype
    (168) datatype -> . R_CASE caseList optElse R_END
    (174) datatype -> . O_RESTA datatype
    (175) datatype -> . O_SUMA datatype
    (176) datatype -> . columnName
    (177) datatype -> . literal
    (178) datatype -> . funcCall
    (179) datatype -> . extract
    (180) datatype -> . datePart
    (181) datatype -> . current
    (182) datatype -> . S_PARIZQ datatype S_PARDER
    (183) expComp -> . datatype OL_MENORQUE datatype
    (184) expComp -> . datatype OL_MAYORQUE datatype
    (185) expComp -> . datatype OL_MAYORIGUALQUE datatype
    (186) expComp -> . datatype OL_MENORIGUALQUE datatype
    (187) expComp -> . datatype S_IGUAL datatype
    (188) expComp -> . datatype OL_DISTINTODE datatype
    (189) expComp -> . datatype R_IS R_DISTINCT R_FROM datatype
    (190) expComp -> . datatype R_IS R_NOT R_DISTINCT R_FROM datatype
    (191) expComp -> . datatype R_BETWEEN datatype R_AND datatype
    (192) expComp -> . datatype R_NOT R_BETWEEN datatype R_AND datatype
    (193) expComp -> . datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype
    (194) expComp -> . datatype R_ISNULL
    (195) expComp -> . datatype R_NOTNULL
    (196) expComp -> . datatype R_IS R_NULL
    (197) expComp -> . datatype R_IS R_TRUE
    (198) expComp -> . datatype R_IS R_FALSE
    (199) expComp -> . datatype R_IS R_UNKNOWN
    (200) expComp -> . datatype R_IS R_NOT R_NULL
    (201) expComp -> . datatype R_IS R_NOT R_TRUE
    (202) expComp -> . datatype R_IS R_NOT R_FALSE
    (203) expComp -> . datatype R_IS R_NOT R_UNKNOWN
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL
    (124) funcCall -> . ID S_PARIZQ paramsList S_PARDER
    (125) funcCall -> . ID S_PARIZQ S_PARDER
    (126) funcCall -> . R_NOW S_PARIZQ S_PARDER
    (127) funcCall -> . R_COUNT S_PARIZQ datatype S_PARDER
    (128) funcCall -> . R_COUNT S_PARIZQ O_PRODUCTO S_PARDER
    (129) funcCall -> . R_SUM S_PARIZQ datatype S_PARDER
    (130) funcCall -> . R_PROM S_PARIZQ datatype S_PARDER
    (131) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER
    (132) extract -> . R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER
    (141) datePart -> . R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER
    (147) current -> . R_CURRENT_DATE
    (148) current -> . R_CURRENT_TIME
    (149) current -> . timeStamp
    (133) timeStamp -> . R_TIMESTAMP STRING
    (134) timeStamp -> . R_INTERVAL STRING

    R_NOT           shift and go to state 83
    S_PARIZQ        shift and go to state 180
    R_EXISTS        shift and go to state 101
    R_CASE          shift and go to state 76
    O_RESTA         shift and go to state 75
    O_SUMA          shift and go to state 74
    ID              shift and go to state 172
    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91
    R_NOW           shift and go to state 92
    R_COUNT         shift and go to state 93
    R_SUM           shift and go to state 94
    R_PROM          shift and go to state 95
    R_EXTRACT       shift and go to state 96
    R_DATE_PART     shift and go to state 98
    R_CURRENT_DATE  shift and go to state 99
    R_CURRENT_TIME  shift and go to state 100
    R_TIMESTAMP     shift and go to state 103
    R_INTERVAL      shift and go to state 104

    expBool                        shift and go to state 583
    boolean                        shift and go to state 84
    datatype                       shift and go to state 181
    expComp                        shift and go to state 102
    columnName                     shift and go to state 77
    literal                        shift and go to state 78
    funcCall                       shift and go to state 79
    extract                        shift and go to state 80
    datePart                       shift and go to state 81
    current                        shift and go to state 82
    timeStamp                      shift and go to state 97

state 545

    (146) dateSource -> R_NOW S_PARIZQ S_PARDER .

    S_PARDER        reduce using rule 146 (dateSource -> R_NOW S_PARIZQ S_PARDER .)


state 546

    (52) inheritsOpt -> R_INHERITS S_PARIZQ . ID S_PARDER

    ID              shift and go to state 584


state 547

    (107) colOptionsList -> colOptionsList colOptions .

    R_DEFAULT       reduce using rule 107 (colOptionsList -> colOptionsList colOptions .)
    R_NOT           reduce using rule 107 (colOptionsList -> colOptionsList colOptions .)
    R_NULL          reduce using rule 107 (colOptionsList -> colOptionsList colOptions .)
    R_PRIMARY       reduce using rule 107 (colOptionsList -> colOptionsList colOptions .)
    R_REFERENCES    reduce using rule 107 (colOptionsList -> colOptionsList colOptions .)
    R_CONSTRAINT    reduce using rule 107 (colOptionsList -> colOptionsList colOptions .)
    R_UNIQUE        reduce using rule 107 (colOptionsList -> colOptionsList colOptions .)
    R_CHECK         reduce using rule 107 (colOptionsList -> colOptionsList colOptions .)
    S_PARDER        reduce using rule 107 (colOptionsList -> colOptionsList colOptions .)
    S_COMA          reduce using rule 107 (colOptionsList -> colOptionsList colOptions .)


state 548

    (114) defaultVal -> R_DEFAULT literal .

    R_DEFAULT       reduce using rule 114 (defaultVal -> R_DEFAULT literal .)
    R_NOT           reduce using rule 114 (defaultVal -> R_DEFAULT literal .)
    R_NULL          reduce using rule 114 (defaultVal -> R_DEFAULT literal .)
    R_PRIMARY       reduce using rule 114 (defaultVal -> R_DEFAULT literal .)
    R_REFERENCES    reduce using rule 114 (defaultVal -> R_DEFAULT literal .)
    R_CONSTRAINT    reduce using rule 114 (defaultVal -> R_DEFAULT literal .)
    R_UNIQUE        reduce using rule 114 (defaultVal -> R_DEFAULT literal .)
    R_CHECK         reduce using rule 114 (defaultVal -> R_DEFAULT literal .)
    S_PARDER        reduce using rule 114 (defaultVal -> R_DEFAULT literal .)
    S_COMA          reduce using rule 114 (defaultVal -> R_DEFAULT literal .)
    S_PUNTOCOMA     reduce using rule 114 (defaultVal -> R_DEFAULT literal .)


state 549

    (115) nullOpt -> R_NOT R_NULL .

    R_DEFAULT       reduce using rule 115 (nullOpt -> R_NOT R_NULL .)
    R_NOT           reduce using rule 115 (nullOpt -> R_NOT R_NULL .)
    R_NULL          reduce using rule 115 (nullOpt -> R_NOT R_NULL .)
    R_PRIMARY       reduce using rule 115 (nullOpt -> R_NOT R_NULL .)
    R_REFERENCES    reduce using rule 115 (nullOpt -> R_NOT R_NULL .)
    R_CONSTRAINT    reduce using rule 115 (nullOpt -> R_NOT R_NULL .)
    R_UNIQUE        reduce using rule 115 (nullOpt -> R_NOT R_NULL .)
    R_CHECK         reduce using rule 115 (nullOpt -> R_NOT R_NULL .)
    S_PARDER        reduce using rule 115 (nullOpt -> R_NOT R_NULL .)
    S_COMA          reduce using rule 115 (nullOpt -> R_NOT R_NULL .)
    S_PUNTOCOMA     reduce using rule 115 (nullOpt -> R_NOT R_NULL .)


state 550

    (117) constraintOpt -> constrName R_UNIQUE .

    R_DEFAULT       reduce using rule 117 (constraintOpt -> constrName R_UNIQUE .)
    R_NOT           reduce using rule 117 (constraintOpt -> constrName R_UNIQUE .)
    R_NULL          reduce using rule 117 (constraintOpt -> constrName R_UNIQUE .)
    R_PRIMARY       reduce using rule 117 (constraintOpt -> constrName R_UNIQUE .)
    R_REFERENCES    reduce using rule 117 (constraintOpt -> constrName R_UNIQUE .)
    R_CONSTRAINT    reduce using rule 117 (constraintOpt -> constrName R_UNIQUE .)
    R_UNIQUE        reduce using rule 117 (constraintOpt -> constrName R_UNIQUE .)
    R_CHECK         reduce using rule 117 (constraintOpt -> constrName R_UNIQUE .)
    S_PARDER        reduce using rule 117 (constraintOpt -> constrName R_UNIQUE .)
    S_COMA          reduce using rule 117 (constraintOpt -> constrName R_UNIQUE .)


state 551

    (118) constraintOpt -> constrName R_CHECK . S_PARIZQ booleanCheck S_PARDER

    S_PARIZQ        shift and go to state 585


state 552

    (119) primaryOpt -> R_PRIMARY R_KEY .

    R_DEFAULT       reduce using rule 119 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NOT           reduce using rule 119 (primaryOpt -> R_PRIMARY R_KEY .)
    R_NULL          reduce using rule 119 (primaryOpt -> R_PRIMARY R_KEY .)
    R_PRIMARY       reduce using rule 119 (primaryOpt -> R_PRIMARY R_KEY .)
    R_REFERENCES    reduce using rule 119 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CONSTRAINT    reduce using rule 119 (primaryOpt -> R_PRIMARY R_KEY .)
    R_UNIQUE        reduce using rule 119 (primaryOpt -> R_PRIMARY R_KEY .)
    R_CHECK         reduce using rule 119 (primaryOpt -> R_PRIMARY R_KEY .)
    S_PARDER        reduce using rule 119 (primaryOpt -> R_PRIMARY R_KEY .)
    S_COMA          reduce using rule 119 (primaryOpt -> R_PRIMARY R_KEY .)


state 553

    (120) referencesOpt -> R_REFERENCES ID .

    R_DEFAULT       reduce using rule 120 (referencesOpt -> R_REFERENCES ID .)
    R_NOT           reduce using rule 120 (referencesOpt -> R_REFERENCES ID .)
    R_NULL          reduce using rule 120 (referencesOpt -> R_REFERENCES ID .)
    R_PRIMARY       reduce using rule 120 (referencesOpt -> R_REFERENCES ID .)
    R_REFERENCES    reduce using rule 120 (referencesOpt -> R_REFERENCES ID .)
    R_CONSTRAINT    reduce using rule 120 (referencesOpt -> R_REFERENCES ID .)
    R_UNIQUE        reduce using rule 120 (referencesOpt -> R_REFERENCES ID .)
    R_CHECK         reduce using rule 120 (referencesOpt -> R_REFERENCES ID .)
    S_PARDER        reduce using rule 120 (referencesOpt -> R_REFERENCES ID .)
    S_COMA          reduce using rule 120 (referencesOpt -> R_REFERENCES ID .)


state 554

    (105) optParams -> S_PARIZQ literalList . S_PARDER
    (150) literalList -> literalList . S_COMA literal

    S_PARDER        shift and go to state 586
    S_COMA          shift and go to state 587


state 555

    (151) literalList -> literal .

    S_PARDER        reduce using rule 151 (literalList -> literal .)
    S_COMA          reduce using rule 151 (literalList -> literal .)


state 556

    (96) types -> T_CHARACTER T_VARYING optParams .

    R_DEFAULT       reduce using rule 96 (types -> T_CHARACTER T_VARYING optParams .)
    R_NOT           reduce using rule 96 (types -> T_CHARACTER T_VARYING optParams .)
    R_NULL          reduce using rule 96 (types -> T_CHARACTER T_VARYING optParams .)
    R_PRIMARY       reduce using rule 96 (types -> T_CHARACTER T_VARYING optParams .)
    R_REFERENCES    reduce using rule 96 (types -> T_CHARACTER T_VARYING optParams .)
    R_CONSTRAINT    reduce using rule 96 (types -> T_CHARACTER T_VARYING optParams .)
    R_UNIQUE        reduce using rule 96 (types -> T_CHARACTER T_VARYING optParams .)
    R_CHECK         reduce using rule 96 (types -> T_CHARACTER T_VARYING optParams .)
    S_PARDER        reduce using rule 96 (types -> T_CHARACTER T_VARYING optParams .)
    S_COMA          reduce using rule 96 (types -> T_CHARACTER T_VARYING optParams .)
    S_PUNTOCOMA     reduce using rule 96 (types -> T_CHARACTER T_VARYING optParams .)


state 557

    (72) createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .

    S_PARDER        reduce using rule 72 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)
    S_COMA          reduce using rule 72 (createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER .)


state 558

    (60) createMode -> R_MODE S_IGUAL INTEGER .

    S_PUNTOCOMA     reduce using rule 60 (createMode -> R_MODE S_IGUAL INTEGER .)


state 559

    (27) columnOpt -> ID .
    (28) columnOpt -> ID . S_PARIZQ ID S_PARDER

    R_DESC          reduce using rule 27 (columnOpt -> ID .)
    R_ASC           reduce using rule 27 (columnOpt -> ID .)
    R_NULLS         reduce using rule 27 (columnOpt -> ID .)
    S_PARDER        reduce using rule 27 (columnOpt -> ID .)
    S_COMA          reduce using rule 27 (columnOpt -> ID .)
    S_PARIZQ        shift and go to state 588


state 560

    (29) columnOpt -> S_PARIZQ . columnOpt S_PARDER
    (27) columnOpt -> . ID
    (28) columnOpt -> . ID S_PARIZQ ID S_PARDER
    (29) columnOpt -> . S_PARIZQ columnOpt S_PARDER

    ID              shift and go to state 559
    S_PARIZQ        shift and go to state 560

    columnOpt                      shift and go to state 589

state 561

    (21) createOpts -> indexUnique R_INDEX indexName R_ON ID usingMethod S_PARIZQ indexList . S_PARDER whereCl
    (24) indexList -> indexList . S_COMA columnIndex

    S_PARDER        shift and go to state 590
    S_COMA          shift and go to state 591


state 562

    (25) indexList -> columnIndex .

    S_PARDER        reduce using rule 25 (indexList -> columnIndex .)
    S_COMA          reduce using rule 25 (indexList -> columnIndex .)


state 563

    (26) columnIndex -> columnOpt . indexOrder indexNull
    (37) indexOrder -> . R_DESC
    (38) indexOrder -> . R_ASC
    (39) indexOrder -> .

    R_DESC          shift and go to state 593
    R_ASC           shift and go to state 594
    R_NULLS         reduce using rule 39 (indexOrder -> .)
    S_PARDER        reduce using rule 39 (indexOrder -> .)
    S_COMA          reduce using rule 39 (indexOrder -> .)

    indexOrder                     shift and go to state 592

state 564

    (49) createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .

    S_PUNTOCOMA     reduce using rule 49 (createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER .)


state 565

    (260) alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .

    S_COMA          reduce using rule 260 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)
    S_PUNTOCOMA     reduce using rule 260 (alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER .)


state 566

    (71) createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    S_COMA          reduce using rule 71 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PUNTOCOMA     reduce using rule 71 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 71 (createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)


state 567

    (222) booleanCheck -> idOrLiteral OL_MENORQUE . idOrLiteral
    (230) idOrLiteral -> . ID
    (231) idOrLiteral -> . INTEGER
    (232) idOrLiteral -> . STRING
    (233) idOrLiteral -> . DECIMAL
    (234) idOrLiteral -> . CHARACTER
    (235) idOrLiteral -> . R_TRUE
    (236) idOrLiteral -> . R_FALSE

    ID              shift and go to state 523
    INTEGER         shift and go to state 524
    STRING          shift and go to state 525
    DECIMAL         shift and go to state 526
    CHARACTER       shift and go to state 527
    R_TRUE          shift and go to state 528
    R_FALSE         shift and go to state 529

    idOrLiteral                    shift and go to state 595

state 568

    (223) booleanCheck -> idOrLiteral OL_MAYORQUE . idOrLiteral
    (230) idOrLiteral -> . ID
    (231) idOrLiteral -> . INTEGER
    (232) idOrLiteral -> . STRING
    (233) idOrLiteral -> . DECIMAL
    (234) idOrLiteral -> . CHARACTER
    (235) idOrLiteral -> . R_TRUE
    (236) idOrLiteral -> . R_FALSE

    ID              shift and go to state 523
    INTEGER         shift and go to state 524
    STRING          shift and go to state 525
    DECIMAL         shift and go to state 526
    CHARACTER       shift and go to state 527
    R_TRUE          shift and go to state 528
    R_FALSE         shift and go to state 529

    idOrLiteral                    shift and go to state 596

state 569

    (224) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE . idOrLiteral
    (230) idOrLiteral -> . ID
    (231) idOrLiteral -> . INTEGER
    (232) idOrLiteral -> . STRING
    (233) idOrLiteral -> . DECIMAL
    (234) idOrLiteral -> . CHARACTER
    (235) idOrLiteral -> . R_TRUE
    (236) idOrLiteral -> . R_FALSE

    ID              shift and go to state 523
    INTEGER         shift and go to state 524
    STRING          shift and go to state 525
    DECIMAL         shift and go to state 526
    CHARACTER       shift and go to state 527
    R_TRUE          shift and go to state 528
    R_FALSE         shift and go to state 529

    idOrLiteral                    shift and go to state 597

state 570

    (225) booleanCheck -> idOrLiteral OL_MENORIGUALQUE . idOrLiteral
    (230) idOrLiteral -> . ID
    (231) idOrLiteral -> . INTEGER
    (232) idOrLiteral -> . STRING
    (233) idOrLiteral -> . DECIMAL
    (234) idOrLiteral -> . CHARACTER
    (235) idOrLiteral -> . R_TRUE
    (236) idOrLiteral -> . R_FALSE

    ID              shift and go to state 523
    INTEGER         shift and go to state 524
    STRING          shift and go to state 525
    DECIMAL         shift and go to state 526
    CHARACTER       shift and go to state 527
    R_TRUE          shift and go to state 528
    R_FALSE         shift and go to state 529

    idOrLiteral                    shift and go to state 598

state 571

    (226) booleanCheck -> idOrLiteral S_IGUAL . idOrLiteral
    (230) idOrLiteral -> . ID
    (231) idOrLiteral -> . INTEGER
    (232) idOrLiteral -> . STRING
    (233) idOrLiteral -> . DECIMAL
    (234) idOrLiteral -> . CHARACTER
    (235) idOrLiteral -> . R_TRUE
    (236) idOrLiteral -> . R_FALSE

    ID              shift and go to state 523
    INTEGER         shift and go to state 524
    STRING          shift and go to state 525
    DECIMAL         shift and go to state 526
    CHARACTER       shift and go to state 527
    R_TRUE          shift and go to state 528
    R_FALSE         shift and go to state 529

    idOrLiteral                    shift and go to state 599

state 572

    (227) booleanCheck -> idOrLiteral OL_DISTINTODE . idOrLiteral
    (230) idOrLiteral -> . ID
    (231) idOrLiteral -> . INTEGER
    (232) idOrLiteral -> . STRING
    (233) idOrLiteral -> . DECIMAL
    (234) idOrLiteral -> . CHARACTER
    (235) idOrLiteral -> . R_TRUE
    (236) idOrLiteral -> . R_FALSE

    ID              shift and go to state 523
    INTEGER         shift and go to state 524
    STRING          shift and go to state 525
    DECIMAL         shift and go to state 526
    CHARACTER       shift and go to state 527
    R_TRUE          shift and go to state 528
    R_FALSE         shift and go to state 529

    idOrLiteral                    shift and go to state 600

state 573

    (228) booleanCheck -> idOrLiteral R_IS . R_DISTINCT R_FROM idOrLiteral
    (229) booleanCheck -> idOrLiteral R_IS . R_NOT R_DISTINCT R_FROM idOrLiteral

    R_DISTINCT      shift and go to state 601
    R_NOT           shift and go to state 602


state 574

    (74) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList . S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER
    (77) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 603
    S_COMA          shift and go to state 311


state 575

    (73) createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 73 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 73 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 73 (createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER .)


state 576

    (305) orderByCl -> R_ORDER R_BY orderList .
    (307) orderList -> orderList . S_COMA orderByElem

    S_PUNTOCOMA     reduce using rule 305 (orderByCl -> R_ORDER R_BY orderList .)
    R_UNION         reduce using rule 305 (orderByCl -> R_ORDER R_BY orderList .)
    R_INTERSECT     reduce using rule 305 (orderByCl -> R_ORDER R_BY orderList .)
    R_EXCEPT        reduce using rule 305 (orderByCl -> R_ORDER R_BY orderList .)
    S_PARDER        reduce using rule 305 (orderByCl -> R_ORDER R_BY orderList .)
    S_COMA          shift and go to state 604


state 577

    (308) orderList -> orderByElem .

    S_COMA          reduce using rule 308 (orderList -> orderByElem .)
    S_PUNTOCOMA     reduce using rule 308 (orderList -> orderByElem .)
    R_UNION         reduce using rule 308 (orderList -> orderByElem .)
    R_INTERSECT     reduce using rule 308 (orderList -> orderByElem .)
    R_EXCEPT        reduce using rule 308 (orderList -> orderByElem .)
    S_PARDER        reduce using rule 308 (orderList -> orderByElem .)


state 578

    (309) orderByElem -> columnName . orderOpts orderNull
    (311) orderOpts -> . R_ASC
    (312) orderOpts -> . R_DESC
    (313) orderOpts -> .

    R_ASC           shift and go to state 606
    R_DESC          shift and go to state 607
    R_NULLS         reduce using rule 313 (orderOpts -> .)
    S_COMA          reduce using rule 313 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 313 (orderOpts -> .)
    R_UNION         reduce using rule 313 (orderOpts -> .)
    R_INTERSECT     reduce using rule 313 (orderOpts -> .)
    R_EXCEPT        reduce using rule 313 (orderOpts -> .)
    S_PARDER        reduce using rule 313 (orderOpts -> .)

    orderOpts                      shift and go to state 605

state 579

    (310) orderByElem -> INTEGER . orderOpts orderNull
    (311) orderOpts -> . R_ASC
    (312) orderOpts -> . R_DESC
    (313) orderOpts -> .

    R_ASC           shift and go to state 606
    R_DESC          shift and go to state 607
    R_NULLS         reduce using rule 313 (orderOpts -> .)
    S_COMA          reduce using rule 313 (orderOpts -> .)
    S_PUNTOCOMA     reduce using rule 313 (orderOpts -> .)
    R_UNION         reduce using rule 313 (orderOpts -> .)
    R_INTERSECT     reduce using rule 313 (orderOpts -> .)
    R_EXCEPT        reduce using rule 313 (orderOpts -> .)
    S_PARDER        reduce using rule 313 (orderOpts -> .)

    orderOpts                      shift and go to state 608

state 580

    (320) offsetLimit -> R_OFFSET INTEGER .

    R_ORDER         reduce using rule 320 (offsetLimit -> R_OFFSET INTEGER .)
    S_PUNTOCOMA     reduce using rule 320 (offsetLimit -> R_OFFSET INTEGER .)
    R_UNION         reduce using rule 320 (offsetLimit -> R_OFFSET INTEGER .)
    R_INTERSECT     reduce using rule 320 (offsetLimit -> R_OFFSET INTEGER .)
    R_EXCEPT        reduce using rule 320 (offsetLimit -> R_OFFSET INTEGER .)
    S_PARDER        reduce using rule 320 (offsetLimit -> R_OFFSET INTEGER .)


state 581

    (299) groupList -> groupList S_COMA columnName .

    S_COMA          reduce using rule 299 (groupList -> groupList S_COMA columnName .)
    R_HAVING        reduce using rule 299 (groupList -> groupList S_COMA columnName .)
    R_LIMIT         reduce using rule 299 (groupList -> groupList S_COMA columnName .)
    R_ORDER         reduce using rule 299 (groupList -> groupList S_COMA columnName .)
    S_PUNTOCOMA     reduce using rule 299 (groupList -> groupList S_COMA columnName .)
    R_UNION         reduce using rule 299 (groupList -> groupList S_COMA columnName .)
    R_INTERSECT     reduce using rule 299 (groupList -> groupList S_COMA columnName .)
    R_EXCEPT        reduce using rule 299 (groupList -> groupList S_COMA columnName .)
    S_PARDER        reduce using rule 299 (groupList -> groupList S_COMA columnName .)


state 582

    (300) groupList -> groupList S_COMA INTEGER .

    S_COMA          reduce using rule 300 (groupList -> groupList S_COMA INTEGER .)
    R_HAVING        reduce using rule 300 (groupList -> groupList S_COMA INTEGER .)
    R_LIMIT         reduce using rule 300 (groupList -> groupList S_COMA INTEGER .)
    R_ORDER         reduce using rule 300 (groupList -> groupList S_COMA INTEGER .)
    S_PUNTOCOMA     reduce using rule 300 (groupList -> groupList S_COMA INTEGER .)
    R_UNION         reduce using rule 300 (groupList -> groupList S_COMA INTEGER .)
    R_INTERSECT     reduce using rule 300 (groupList -> groupList S_COMA INTEGER .)
    R_EXCEPT        reduce using rule 300 (groupList -> groupList S_COMA INTEGER .)
    S_PARDER        reduce using rule 300 (groupList -> groupList S_COMA INTEGER .)


state 583

    (303) havingCl -> R_HAVING expBool .
    (208) expBool -> expBool . R_AND expBool
    (209) expBool -> expBool . R_OR expBool
    (212) expBool -> expBool . optBoolPredicate
    (214) optBoolPredicate -> . R_IS R_TRUE
    (215) optBoolPredicate -> . R_IS R_FALSE
    (216) optBoolPredicate -> . R_IS R_UNKNOWN
    (217) optBoolPredicate -> . R_IS R_NOT R_TRUE
    (218) optBoolPredicate -> . R_IS R_NOT R_FALSE
    (219) optBoolPredicate -> . R_IS R_NOT R_UNKNOWN

    R_LIMIT         reduce using rule 303 (havingCl -> R_HAVING expBool .)
    R_ORDER         reduce using rule 303 (havingCl -> R_HAVING expBool .)
    S_PUNTOCOMA     reduce using rule 303 (havingCl -> R_HAVING expBool .)
    R_UNION         reduce using rule 303 (havingCl -> R_HAVING expBool .)
    R_INTERSECT     reduce using rule 303 (havingCl -> R_HAVING expBool .)
    R_EXCEPT        reduce using rule 303 (havingCl -> R_HAVING expBool .)
    S_PARDER        reduce using rule 303 (havingCl -> R_HAVING expBool .)
    R_AND           shift and go to state 164
    R_OR            shift and go to state 165
    R_IS            shift and go to state 167

    optBoolPredicate               shift and go to state 166

state 584

    (52) inheritsOpt -> R_INHERITS S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 609


state 585

    (118) constraintOpt -> constrName R_CHECK S_PARIZQ . booleanCheck S_PARDER
    (222) booleanCheck -> . idOrLiteral OL_MENORQUE idOrLiteral
    (223) booleanCheck -> . idOrLiteral OL_MAYORQUE idOrLiteral
    (224) booleanCheck -> . idOrLiteral OL_MAYORIGUALQUE idOrLiteral
    (225) booleanCheck -> . idOrLiteral OL_MENORIGUALQUE idOrLiteral
    (226) booleanCheck -> . idOrLiteral S_IGUAL idOrLiteral
    (227) booleanCheck -> . idOrLiteral OL_DISTINTODE idOrLiteral
    (228) booleanCheck -> . idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral
    (229) booleanCheck -> . idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral
    (230) idOrLiteral -> . ID
    (231) idOrLiteral -> . INTEGER
    (232) idOrLiteral -> . STRING
    (233) idOrLiteral -> . DECIMAL
    (234) idOrLiteral -> . CHARACTER
    (235) idOrLiteral -> . R_TRUE
    (236) idOrLiteral -> . R_FALSE

    ID              shift and go to state 523
    INTEGER         shift and go to state 524
    STRING          shift and go to state 525
    DECIMAL         shift and go to state 526
    CHARACTER       shift and go to state 527
    R_TRUE          shift and go to state 528
    R_FALSE         shift and go to state 529

    booleanCheck                   shift and go to state 610
    idOrLiteral                    shift and go to state 522

state 586

    (105) optParams -> S_PARIZQ literalList S_PARDER .

    R_DEFAULT       reduce using rule 105 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NOT           reduce using rule 105 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_NULL          reduce using rule 105 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_PRIMARY       reduce using rule 105 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_REFERENCES    reduce using rule 105 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CONSTRAINT    reduce using rule 105 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_UNIQUE        reduce using rule 105 (optParams -> S_PARIZQ literalList S_PARDER .)
    R_CHECK         reduce using rule 105 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_PARDER        reduce using rule 105 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_COMA          reduce using rule 105 (optParams -> S_PARIZQ literalList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 105 (optParams -> S_PARIZQ literalList S_PARDER .)


state 587

    (150) literalList -> literalList S_COMA . literal
    (152) literal -> . INTEGER
    (153) literal -> . STRING
    (154) literal -> . DECIMAL
    (155) literal -> . CHARACTER
    (156) literal -> . R_TRUE
    (157) literal -> . R_FALSE
    (158) literal -> . R_NULL

    INTEGER         shift and go to state 85
    STRING          shift and go to state 86
    DECIMAL         shift and go to state 87
    CHARACTER       shift and go to state 88
    R_TRUE          shift and go to state 89
    R_FALSE         shift and go to state 90
    R_NULL          shift and go to state 91

    literal                        shift and go to state 611

state 588

    (28) columnOpt -> ID S_PARIZQ . ID S_PARDER

    ID              shift and go to state 612


state 589

    (29) columnOpt -> S_PARIZQ columnOpt . S_PARDER

    S_PARDER        shift and go to state 613


state 590

    (21) createOpts -> indexUnique R_INDEX indexName R_ON ID usingMethod S_PARIZQ indexList S_PARDER . whereCl
    (295) whereCl -> . R_WHERE expBool
    (296) whereCl -> .

    R_WHERE         shift and go to state 135
    S_PUNTOCOMA     reduce using rule 296 (whereCl -> .)

    whereCl                        shift and go to state 614

state 591

    (24) indexList -> indexList S_COMA . columnIndex
    (26) columnIndex -> . columnOpt indexOrder indexNull
    (27) columnOpt -> . ID
    (28) columnOpt -> . ID S_PARIZQ ID S_PARDER
    (29) columnOpt -> . S_PARIZQ columnOpt S_PARDER

    ID              shift and go to state 559
    S_PARIZQ        shift and go to state 560

    columnIndex                    shift and go to state 615
    columnOpt                      shift and go to state 563

state 592

    (26) columnIndex -> columnOpt indexOrder . indexNull
    (40) indexNull -> . R_NULLS firstLast
    (41) indexNull -> .

    R_NULLS         shift and go to state 617
    S_PARDER        reduce using rule 41 (indexNull -> .)
    S_COMA          reduce using rule 41 (indexNull -> .)

    indexNull                      shift and go to state 616

state 593

    (37) indexOrder -> R_DESC .

    R_NULLS         reduce using rule 37 (indexOrder -> R_DESC .)
    S_PARDER        reduce using rule 37 (indexOrder -> R_DESC .)
    S_COMA          reduce using rule 37 (indexOrder -> R_DESC .)


state 594

    (38) indexOrder -> R_ASC .

    R_NULLS         reduce using rule 38 (indexOrder -> R_ASC .)
    S_PARDER        reduce using rule 38 (indexOrder -> R_ASC .)
    S_COMA          reduce using rule 38 (indexOrder -> R_ASC .)


state 595

    (222) booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .

    S_PARDER        reduce using rule 222 (booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral .)


state 596

    (223) booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .

    S_PARDER        reduce using rule 223 (booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral .)


state 597

    (224) booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .

    S_PARDER        reduce using rule 224 (booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral .)


state 598

    (225) booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .

    S_PARDER        reduce using rule 225 (booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral .)


state 599

    (226) booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .

    S_PARDER        reduce using rule 226 (booleanCheck -> idOrLiteral S_IGUAL idOrLiteral .)


state 600

    (227) booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .

    S_PARDER        reduce using rule 227 (booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral .)


state 601

    (228) booleanCheck -> idOrLiteral R_IS R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 618


state 602

    (229) booleanCheck -> idOrLiteral R_IS R_NOT . R_DISTINCT R_FROM idOrLiteral

    R_DISTINCT      shift and go to state 619


state 603

    (74) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER . R_REFERENCES ID S_PARIZQ idList S_PARDER

    R_REFERENCES    shift and go to state 620


state 604

    (307) orderList -> orderList S_COMA . orderByElem
    (309) orderByElem -> . columnName orderOpts orderNull
    (310) orderByElem -> . INTEGER orderOpts orderNull
    (220) columnName -> . ID
    (221) columnName -> . ID S_PUNTO ID

    INTEGER         shift and go to state 579
    ID              shift and go to state 404

    orderByElem                    shift and go to state 621
    columnName                     shift and go to state 578

state 605

    (309) orderByElem -> columnName orderOpts . orderNull
    (314) orderNull -> . R_NULLS R_FIRST
    (315) orderNull -> . R_NULLS R_LAST
    (316) orderNull -> .

    R_NULLS         shift and go to state 623
    S_COMA          reduce using rule 316 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 316 (orderNull -> .)
    R_UNION         reduce using rule 316 (orderNull -> .)
    R_INTERSECT     reduce using rule 316 (orderNull -> .)
    R_EXCEPT        reduce using rule 316 (orderNull -> .)
    S_PARDER        reduce using rule 316 (orderNull -> .)

    orderNull                      shift and go to state 622

state 606

    (311) orderOpts -> R_ASC .

    R_NULLS         reduce using rule 311 (orderOpts -> R_ASC .)
    S_COMA          reduce using rule 311 (orderOpts -> R_ASC .)
    S_PUNTOCOMA     reduce using rule 311 (orderOpts -> R_ASC .)
    R_UNION         reduce using rule 311 (orderOpts -> R_ASC .)
    R_INTERSECT     reduce using rule 311 (orderOpts -> R_ASC .)
    R_EXCEPT        reduce using rule 311 (orderOpts -> R_ASC .)
    S_PARDER        reduce using rule 311 (orderOpts -> R_ASC .)


state 607

    (312) orderOpts -> R_DESC .

    R_NULLS         reduce using rule 312 (orderOpts -> R_DESC .)
    S_COMA          reduce using rule 312 (orderOpts -> R_DESC .)
    S_PUNTOCOMA     reduce using rule 312 (orderOpts -> R_DESC .)
    R_UNION         reduce using rule 312 (orderOpts -> R_DESC .)
    R_INTERSECT     reduce using rule 312 (orderOpts -> R_DESC .)
    R_EXCEPT        reduce using rule 312 (orderOpts -> R_DESC .)
    S_PARDER        reduce using rule 312 (orderOpts -> R_DESC .)


state 608

    (310) orderByElem -> INTEGER orderOpts . orderNull
    (314) orderNull -> . R_NULLS R_FIRST
    (315) orderNull -> . R_NULLS R_LAST
    (316) orderNull -> .

    R_NULLS         shift and go to state 623
    S_COMA          reduce using rule 316 (orderNull -> .)
    S_PUNTOCOMA     reduce using rule 316 (orderNull -> .)
    R_UNION         reduce using rule 316 (orderNull -> .)
    R_INTERSECT     reduce using rule 316 (orderNull -> .)
    R_EXCEPT        reduce using rule 316 (orderNull -> .)
    S_PARDER        reduce using rule 316 (orderNull -> .)

    orderNull                      shift and go to state 624

state 609

    (52) inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .

    S_PUNTOCOMA     reduce using rule 52 (inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER .)


state 610

    (118) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck . S_PARDER

    S_PARDER        shift and go to state 625


state 611

    (150) literalList -> literalList S_COMA literal .

    S_PARDER        reduce using rule 150 (literalList -> literalList S_COMA literal .)
    S_COMA          reduce using rule 150 (literalList -> literalList S_COMA literal .)


state 612

    (28) columnOpt -> ID S_PARIZQ ID . S_PARDER

    S_PARDER        shift and go to state 626


state 613

    (29) columnOpt -> S_PARIZQ columnOpt S_PARDER .

    R_DESC          reduce using rule 29 (columnOpt -> S_PARIZQ columnOpt S_PARDER .)
    R_ASC           reduce using rule 29 (columnOpt -> S_PARIZQ columnOpt S_PARDER .)
    R_NULLS         reduce using rule 29 (columnOpt -> S_PARIZQ columnOpt S_PARDER .)
    S_PARDER        reduce using rule 29 (columnOpt -> S_PARIZQ columnOpt S_PARDER .)
    S_COMA          reduce using rule 29 (columnOpt -> S_PARIZQ columnOpt S_PARDER .)


state 614

    (21) createOpts -> indexUnique R_INDEX indexName R_ON ID usingMethod S_PARIZQ indexList S_PARDER whereCl .

    S_PUNTOCOMA     reduce using rule 21 (createOpts -> indexUnique R_INDEX indexName R_ON ID usingMethod S_PARIZQ indexList S_PARDER whereCl .)


state 615

    (24) indexList -> indexList S_COMA columnIndex .

    S_PARDER        reduce using rule 24 (indexList -> indexList S_COMA columnIndex .)
    S_COMA          reduce using rule 24 (indexList -> indexList S_COMA columnIndex .)


state 616

    (26) columnIndex -> columnOpt indexOrder indexNull .

    S_PARDER        reduce using rule 26 (columnIndex -> columnOpt indexOrder indexNull .)
    S_COMA          reduce using rule 26 (columnIndex -> columnOpt indexOrder indexNull .)


state 617

    (40) indexNull -> R_NULLS . firstLast
    (42) firstLast -> . R_FIRST
    (43) firstLast -> . R_LAST
    (44) firstLast -> .

    R_FIRST         shift and go to state 628
    R_LAST          shift and go to state 629
    S_PARDER        reduce using rule 44 (firstLast -> .)
    S_COMA          reduce using rule 44 (firstLast -> .)

    firstLast                      shift and go to state 627

state 618

    (228) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM . idOrLiteral
    (230) idOrLiteral -> . ID
    (231) idOrLiteral -> . INTEGER
    (232) idOrLiteral -> . STRING
    (233) idOrLiteral -> . DECIMAL
    (234) idOrLiteral -> . CHARACTER
    (235) idOrLiteral -> . R_TRUE
    (236) idOrLiteral -> . R_FALSE

    ID              shift and go to state 523
    INTEGER         shift and go to state 524
    STRING          shift and go to state 525
    DECIMAL         shift and go to state 526
    CHARACTER       shift and go to state 527
    R_TRUE          shift and go to state 528
    R_FALSE         shift and go to state 529

    idOrLiteral                    shift and go to state 630

state 619

    (229) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT . R_FROM idOrLiteral

    R_FROM          shift and go to state 631


state 620

    (74) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES . ID S_PARIZQ idList S_PARDER

    ID              shift and go to state 632


state 621

    (307) orderList -> orderList S_COMA orderByElem .

    S_COMA          reduce using rule 307 (orderList -> orderList S_COMA orderByElem .)
    S_PUNTOCOMA     reduce using rule 307 (orderList -> orderList S_COMA orderByElem .)
    R_UNION         reduce using rule 307 (orderList -> orderList S_COMA orderByElem .)
    R_INTERSECT     reduce using rule 307 (orderList -> orderList S_COMA orderByElem .)
    R_EXCEPT        reduce using rule 307 (orderList -> orderList S_COMA orderByElem .)
    S_PARDER        reduce using rule 307 (orderList -> orderList S_COMA orderByElem .)


state 622

    (309) orderByElem -> columnName orderOpts orderNull .

    S_COMA          reduce using rule 309 (orderByElem -> columnName orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 309 (orderByElem -> columnName orderOpts orderNull .)
    R_UNION         reduce using rule 309 (orderByElem -> columnName orderOpts orderNull .)
    R_INTERSECT     reduce using rule 309 (orderByElem -> columnName orderOpts orderNull .)
    R_EXCEPT        reduce using rule 309 (orderByElem -> columnName orderOpts orderNull .)
    S_PARDER        reduce using rule 309 (orderByElem -> columnName orderOpts orderNull .)


state 623

    (314) orderNull -> R_NULLS . R_FIRST
    (315) orderNull -> R_NULLS . R_LAST

    R_FIRST         shift and go to state 633
    R_LAST          shift and go to state 634


state 624

    (310) orderByElem -> INTEGER orderOpts orderNull .

    S_COMA          reduce using rule 310 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PUNTOCOMA     reduce using rule 310 (orderByElem -> INTEGER orderOpts orderNull .)
    R_UNION         reduce using rule 310 (orderByElem -> INTEGER orderOpts orderNull .)
    R_INTERSECT     reduce using rule 310 (orderByElem -> INTEGER orderOpts orderNull .)
    R_EXCEPT        reduce using rule 310 (orderByElem -> INTEGER orderOpts orderNull .)
    S_PARDER        reduce using rule 310 (orderByElem -> INTEGER orderOpts orderNull .)


state 625

    (118) constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .

    R_DEFAULT       reduce using rule 118 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NOT           reduce using rule 118 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_NULL          reduce using rule 118 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_PRIMARY       reduce using rule 118 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_REFERENCES    reduce using rule 118 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CONSTRAINT    reduce using rule 118 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_UNIQUE        reduce using rule 118 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    R_CHECK         reduce using rule 118 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_PARDER        reduce using rule 118 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)
    S_COMA          reduce using rule 118 (constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER .)


state 626

    (28) columnOpt -> ID S_PARIZQ ID S_PARDER .

    R_DESC          reduce using rule 28 (columnOpt -> ID S_PARIZQ ID S_PARDER .)
    R_ASC           reduce using rule 28 (columnOpt -> ID S_PARIZQ ID S_PARDER .)
    R_NULLS         reduce using rule 28 (columnOpt -> ID S_PARIZQ ID S_PARDER .)
    S_PARDER        reduce using rule 28 (columnOpt -> ID S_PARIZQ ID S_PARDER .)
    S_COMA          reduce using rule 28 (columnOpt -> ID S_PARIZQ ID S_PARDER .)


state 627

    (40) indexNull -> R_NULLS firstLast .

    S_PARDER        reduce using rule 40 (indexNull -> R_NULLS firstLast .)
    S_COMA          reduce using rule 40 (indexNull -> R_NULLS firstLast .)


state 628

    (42) firstLast -> R_FIRST .

    S_PARDER        reduce using rule 42 (firstLast -> R_FIRST .)
    S_COMA          reduce using rule 42 (firstLast -> R_FIRST .)


state 629

    (43) firstLast -> R_LAST .

    S_PARDER        reduce using rule 43 (firstLast -> R_LAST .)
    S_COMA          reduce using rule 43 (firstLast -> R_LAST .)


state 630

    (228) booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 228 (booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral .)


state 631

    (229) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM . idOrLiteral
    (230) idOrLiteral -> . ID
    (231) idOrLiteral -> . INTEGER
    (232) idOrLiteral -> . STRING
    (233) idOrLiteral -> . DECIMAL
    (234) idOrLiteral -> . CHARACTER
    (235) idOrLiteral -> . R_TRUE
    (236) idOrLiteral -> . R_FALSE

    ID              shift and go to state 523
    INTEGER         shift and go to state 524
    STRING          shift and go to state 525
    DECIMAL         shift and go to state 526
    CHARACTER       shift and go to state 527
    R_TRUE          shift and go to state 528
    R_FALSE         shift and go to state 529

    idOrLiteral                    shift and go to state 635

state 632

    (74) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID . S_PARIZQ idList S_PARDER

    S_PARIZQ        shift and go to state 636


state 633

    (314) orderNull -> R_NULLS R_FIRST .

    S_COMA          reduce using rule 314 (orderNull -> R_NULLS R_FIRST .)
    S_PUNTOCOMA     reduce using rule 314 (orderNull -> R_NULLS R_FIRST .)
    R_UNION         reduce using rule 314 (orderNull -> R_NULLS R_FIRST .)
    R_INTERSECT     reduce using rule 314 (orderNull -> R_NULLS R_FIRST .)
    R_EXCEPT        reduce using rule 314 (orderNull -> R_NULLS R_FIRST .)
    S_PARDER        reduce using rule 314 (orderNull -> R_NULLS R_FIRST .)


state 634

    (315) orderNull -> R_NULLS R_LAST .

    S_COMA          reduce using rule 315 (orderNull -> R_NULLS R_LAST .)
    S_PUNTOCOMA     reduce using rule 315 (orderNull -> R_NULLS R_LAST .)
    R_UNION         reduce using rule 315 (orderNull -> R_NULLS R_LAST .)
    R_INTERSECT     reduce using rule 315 (orderNull -> R_NULLS R_LAST .)
    R_EXCEPT        reduce using rule 315 (orderNull -> R_NULLS R_LAST .)
    S_PARDER        reduce using rule 315 (orderNull -> R_NULLS R_LAST .)


state 635

    (229) booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .

    S_PARDER        reduce using rule 229 (booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral .)


state 636

    (74) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ . idList S_PARDER
    (77) idList -> . idList S_COMA ID
    (78) idList -> . ID

    ID              shift and go to state 215

    idList                         shift and go to state 637

state 637

    (74) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList . S_PARDER
    (77) idList -> idList . S_COMA ID

    S_PARDER        shift and go to state 638
    S_COMA          shift and go to state 311


state 638

    (74) createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .

    S_COMA          reduce using rule 74 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PUNTOCOMA     reduce using rule 74 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)
    S_PARDER        reduce using rule 74 (createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER .)

